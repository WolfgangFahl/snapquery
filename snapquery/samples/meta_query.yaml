# Meta Queries
# WF 2025-05-06
'query_count':
    sql: |
      SELECT COUNT(*)
      FROM NamedQuery
'query_success':
    sql: |
        SELECT 
           COUNT(*) AS count,
           endpoint_name
        
        FROM "QueryStats"
        WHERE records>0
        GROUP BY endpoint_name
        ORDER BY 1 DESC
'query_success_by_namespace':
    sql: |
        SELECT 
           COUNT(*) AS count,
           nq.namespace,
           qs.endpoint_name
           
        FROM QueryStats qs
        JOIN NamedQuery nq on qs.query_id=nq.query_id
        WHERE records>0
        GROUP BY endpoint_name,namespace
        ORDER BY 2 ASC,1 DESC
# This query calculates statistics for named queries across 
# different namespaces and endpoints.
# It joins NamedQuery with a subquery from QueryStats 
# to get both success and failure counts.
# Another subquery is used to get the total count of 
# distinct queries per namespace.
# 
# The results show:
# - namespace
# - endpoint name (or 'No Endpoint' if null)
# - total count of distinct queries in the namespace
# - count of distinct successful queries
# - count of distinct failed queries
# - sum of success counts
# - sum of failure counts
#
# Note: This query includes information about both 
# successful and failed queries.
'query_namespace_endpoint_matrix_with_distinct':
  sql: |
    SELECT
        nq.namespace,
        COALESCE(qs.endpoint_name, 'No Endpoint') AS endpoint_name,
        total.total_count AS total,
        COUNT(DISTINCT (CASE WHEN qs.success_count > 0 THEN qs.query_id END)) AS distinct_successful,
        COUNT(DISTINCT (CASE WHEN qs.failure_count > 0 THEN qs.query_id END)) AS distinct_failed,
        SUM(qs.success_count) AS success_count,
        SUM(qs.failure_count) AS failure_count
    FROM NamedQuery nq
        LEFT JOIN (
            SELECT 
                query_id,
                endpoint_name,
                context,
                SUM(CASE WHEN records > 0 THEN 1 ELSE 0 END) AS success_count,
                SUM(CASE WHEN records = 0 THEN 1 ELSE 0 END) AS failure_count
            FROM QueryStats
            GROUP BY query_id, endpoint_name, context
        ) qs ON nq.query_id = qs.query_id
        LEFT JOIN (
          SELECT namespace, COUNT(DISTINCT(query_id)) AS total_count
          FROM NamedQuery
          GROUP BY namespace
        ) total ON nq.namespace = total.namespace
    GROUP BY nq.namespace, qs.endpoint_name, total.total_count
'all_queries':
    sql: |
      SELECT * FROM NamedQuery
'error_histogram':
    sql: |
      SELECT COUNT(*), query_id
      FROM QueryStats
      WHERE error_msg is not null
      GROUP BY query_id
      ORDER BY 1 DESC
'query_stats':
    sql: |
      SELECT query_id,
        COUNT(duration) AS count,
        MIN(duration) AS min_time,
        MAX(duration) AS max_time,
        AVG(duration) AS avg_time,
        MIN(records) AS min,
        MAX(records) AS max,
        AVG(records) AS avg
      FROM QueryStats
        GROUP by query_id
        ORDER BY 1 DESC;
'params_stats':
    sql: |
        SELECT count(*),
            params 
        FROM "QueryDetails" 
        GROUP BY params 
        ORDER BY 1 desc
'query_details_stats':
    sql: |
      SELECT 
        MIN(param_count) AS min_param_count,
        MAX(param_count) AS max_param_count,
        AVG(param_count) AS avg_param_count,
        MIN(lines) AS min_lines,
        MAX(lines) AS max_lines,
        AVG(lines) AS avg_lines,
        MIN(size) AS min_size,
        MAX(size) AS max_size,
        AVG(size) AS avg_size
      FROM 
        QueryDetails;
