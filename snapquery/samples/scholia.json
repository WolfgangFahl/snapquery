{
  "name": "scholia",
  "queries": [
    {
      "query_id": "scholia.404-chemical_related",
      "namespace": "scholia",
      "name": "404-chemical_related",
      "sparql": "SELECT ?mol ?molLabel ?InChIKey ?CAS ?ChemSpider ?PubChem_CID WITH {\n  SELECT ?mol ?InChIKey WHERE {\n    SERVICE wikibase:mwapi {\n        bd:serviceParam wikibase:endpoint \"www.wikidata.org\";\n        wikibase:api \"Search\";\n        mwapi:srsearch \"_shortkey_ haswbstatement:P235\";\n        mwapi:srlimit \"max\".\n        ?mol wikibase:apiOutputItem mwapi:title.\n      }\n    ?mol wdt:P235 ?InChIKey .\n    FILTER (regex(str(?InChIKey), \"^_shortkey_\"))\n  }\n} AS %MOLS {\n  INCLUDE %MOLS\n  OPTIONAL { ?mol wdt:P231 ?CAS }\n  OPTIONAL { ?mol wdt:P661 ?ChemSpider }\n  OPTIONAL { ?mol wdt:P662 ?PubChem_CID }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/404-chemical_related.sparql",
      "title": "404-chemical_related",
      "description": null
    },
    {
      "query_id": "scholia.ask_venue_cito",
      "namespace": "scholia",
      "name": "ask_venue_cito",
      "sparql": "ASK {\n    [] pq:P3712 / wdt:P31 wd:Q96471816 ; ps:P2860 / wdt:P1433 wd:{{q}} . BIND(\"venue-cito\" AS ?aspectsubpage)\n}\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/ask_venue_cito.sparql",
      "title": "ask_venue_cito",
      "description": null
    },
    {
      "query_id": "scholia.ask_work_cito",
      "namespace": "scholia",
      "name": "ask_work_cito",
      "sparql": "ASK {\n    [] pq:P3712 / wdt:P31 wd:Q96471816 ; ps:P2860 wd:{{q}} . BIND(\"work-cito\" AS ?aspectsubpage)\n}\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/ask_work_cito.sparql",
      "title": "ask_work_cito",
      "description": null
    },
    {
      "query_id": "scholia.ask_work_gallery",
      "namespace": "scholia",
      "name": "ask_work_gallery",
      "sparql": "ASK {\n  wd:{{q}} wdt:P373 ?gallery  .\n}\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/ask_work_gallery.sparql",
      "title": "ask_work_gallery",
      "description": null
    },
    {
      "query_id": "scholia.author-curation_missing-author-resolving",
      "namespace": "scholia",
      "name": "author-curation_missing-author-resolving",
      "sparql": "#title: Variants of author name strings\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT \n  (COUNT(?work) AS ?count)\n  ?string\n  (CONCAT(\"https://author-disambiguator.toolforge.org/names_oauth.php?doit=Look+for+author&name=\", \n        ENCODE_FOR_URI(?string)) AS ?author_resolver_url) \nWITH\n{\n  # Find strings associated with the target author\n  SELECT DISTINCT ?string_\n  WHERE\n  {\n    { target: rdfs:label ?string_. } # in label\n    UNION\n    { target: skos:altLabel ?string_. } # in alias\n    UNION\n    {\n      ?author_statement ps:P50 target: ; \n                        pq:P1932 ?string_. # in \"stated as\" strings for \"author\" statements on work items\n    }\n  }\n} AS %RAWstrings\nWITH\n# This part is due to Dipsacus fullonum, as per https://w.wiki/5Brk\n{\n  # Calculate capitalization variants of these raw strings\n  SELECT DISTINCT ?string\n  WHERE\n  {\n    {\n      INCLUDE %RAWstrings\n      BIND(STR(?string_) AS ?string) # the raw strings\n    }\n    UNION\n    {\n      INCLUDE %RAWstrings\n      BIND(UCASE(STR(?string_)) AS ?string) # uppercased versions of the raw strings\n    }\n    UNION\n    {\n      INCLUDE %RAWstrings\n      BIND(LCASE(STR(?string_)) AS ?string) # lowercased versions of the raw strings\n    }\n  }\n} AS %NORMALIZEDstrings\nWHERE {\n  # Find works that have \"author name string\" values equal to these normalized strings\n  INCLUDE %NORMALIZEDstrings\n  OPTIONAL { ?work wdt:P2093 ?string. }\n}\nGROUP BY ?string\nORDER BY DESC (?count)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/author-curation_missing-author-resolving.sparql",
      "title": "author-curation_missing-author-resolving",
      "description": null
    },
    {
      "query_id": "scholia.author-curation_missing-citing-author-items",
      "namespace": "scholia",
      "name": "author-curation_missing-citing-author-items",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  # Number of works with the coauthor\n  ?count\n\n  # The citing author as a string, - rather than as an item\n  ?citing_author\n\n  # Build URL to the Author disambiguator tool\n  (CONCAT(\n      'https://author-disambiguator.toolforge.org/names_oauth.php?doit=Look+for+author&name=',\n      ENCODE_FOR_URI(?citing_author)) AS ?resolver_url)\n\n  ?example_citing_work ?example_citing_workLabel\n  (CONCAT(\"/work/\", SUBSTR(STR(?example_citing_work), 32)) AS ?example_citing_workUrl)\nWITH {\n  SELECT\n    (COUNT(?work) as ?count)\n    ?citing_author\n    (SAMPLE(?citing_work) AS ?example_citing_work) \n  WHERE {\n    ?work wdt:P50 target: .\n    ?citing_work wdt:P2860 ?work .\n    ?citing_work wdt:P2093 ?citing_author .\n  }\n  GROUP BY ?citing_author\n} AS %result\nWHERE {\n  INCLUDE %result\n  # Label the results\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\". }\n}\nORDER BY DESC(?count)\nLIMIT 1000",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/author-curation_missing-citing-author-items.sparql",
      "title": "author-curation_missing-citing-author-items",
      "description": null
    },
    {
      "query_id": "scholia.author-curation_missing-coauthor-items",
      "namespace": "scholia",
      "name": "author-curation_missing-coauthor-items",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  # Number of works with the coauthor\n  ?count\n\n  # The coauthor as a string, - rather than as an item\n  ?coauthor\n\n  # Build URL to the Author disambiguator tool\n  (CONCAT(\n      'https://author-disambiguator.toolforge.org/names_oauth.php?doit=Look+for+author&name=',\n      ENCODE_FOR_URI(?coauthor)) AS ?resolver_url)\nWITH {\n  SELECT (COUNT(?work) as ?count) ?coauthor WHERE {\n    ?work wdt:P50 target: .\n    ?work wdt:P2093 ?coauthor .\n  }\n  GROUP BY ?coauthor\n} AS %result\nWHERE {\n  INCLUDE %result\n  # Label the results\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\". }\n}\nORDER BY DESC(?count)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/author-curation_missing-coauthor-items.sparql",
      "title": "author-curation_missing-coauthor-items",
      "description": null
    },
    {
      "query_id": "scholia.author-curation_missing-topic",
      "namespace": "scholia",
      "name": "author-curation_missing-topic",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n?citations  ?work ?workLabel (CONCAT(\"/work/\", SUBSTR(STR(?work), 32)) AS ?workUrl)\n(?work AS ?wikidata_url)\nWITH {\n  SELECT (COUNT(?work) as ?count) ?work WHERE {\n  # Works by author\n    ?work wdt:P50 target: .\n  # Work does not have a main subject statement\n    FILTER NOT EXISTS { ?work wdt:P921 ?topic . }\n  }\n  GROUP BY ?work\n  ORDER BY DESC(?count)\n  LIMIT 2000\n} AS %works\nWITH {\n  SELECT (COUNT(?work1) as ?citations) ?work WHERE {\n  INCLUDE %works\n  # Works cited\n    OPTIONAL { ?work1 wdt:P2860 ?work }.\n  }\n  GROUP BY ?work\n  ORDER BY DESC(?citations)\n  LIMIT 200\n} AS %result\nWHERE {\n  INCLUDE %result\n  \n  # Label the results\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\". }\n}\nORDER BY DESC(?citations)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/author-curation_missing-topic.sparql",
      "title": "author-curation_missing-topic",
      "description": null
    },
    {
      "query_id": "scholia.author-curation_missing-use-as-reference",
      "namespace": "scholia",
      "name": "author-curation_missing-use-as-reference",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?citations ?work ?workLabel (CONCAT(\"/work/\", SUBSTR(STR(?work), 32)) AS ?workUrl)\nWITH {\n  SELECT ?work (COUNT(DISTINCT ?statement) AS ?count) WHERE {\n    ?work wdt:P50 target: .\n\tOPTIONAL { ?statement prov:wasDerivedFrom/pr:P248 ?work . }\n  } GROUP BY ?work\n} AS %works\nWITH {\n  SELECT (COUNT(?work1) as ?citations) ?work WHERE {\n    INCLUDE %works\n    FILTER (?count = 0)\n    # Works cited\n    OPTIONAL { ?work1 wdt:P2860 ?work }.\n  }\n  GROUP BY ?work\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n} ORDER BY DESC(?citations)\n  LIMIT 200\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/author-curation_missing-use-as-reference.sparql",
      "title": "author-curation_missing-use-as-reference",
      "description": null
    },
    {
      "query_id": "scholia.author-use_works",
      "namespace": "scholia",
      "name": "author-use_works",
      "sparql": "PREFIX target1: <http://www.wikidata.org/entity/{{ q1 }}>\nPREFIX target2: <http://www.wikidata.org/entity/{{ q2 }}>\n\nSELECT\n  ?publication_date\n  ?work ?workLabel (CONCAT(\"/work/\", SUBSTR(STR(?work), 32)) AS ?workUrl)\nWHERE {\n  ?work wdt:P50 target1: ;\n        wdt:P4510 target2: .\n  OPTIONAL {\n    ?work wdt:P577 ?publication_datetime .\n    BIND(xsd:date(?publication_datetime) AS ?publication_date)\n  }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,da,de,es,fr,jp,nl,no,ru,sv,zh\". }\n}\nORDER BY DESC(?publication_date)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/author-use_works.sparql",
      "title": "author-use_works",
      "description": null
    },
    {
      "query_id": "scholia.author_academic-tree",
      "namespace": "scholia",
      "name": "author_academic-tree",
      "sparql": "#defaultView:Graph\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n# Doctoral student/advisor network with a source from a spectific researcher\nPREFIX gas: <http://www.bigdata.com/rdf/gas#>\n\nSELECT DISTINCT ?student1 ?student1Label ?rgb ?supervisor1 ?supervisor1Label\nWHERE {\n  { \n    SELECT ?student1 ?supervisor1 (MIN(?depth1) as ?depth)\n    WHERE {\n      SERVICE gas:service {\n        gas:program gas:gasClass \"com.bigdata.rdf.graph.analytics.BFS\" ;\n                gas:in target: ;\n                gas:traversalDirection \"Forward\" ;\n                gas:out ?student1 ;\n                gas:out1 ?depth1 ;\n                gas:out2 ?supervisor1 ;\n                gas:linkType wdt:P185 ;\n      }\n    }\n    GROUP BY ?student1 ?supervisor1\n  }\n  UNION\n  { \n    SELECT ?student1 ?supervisor1 (MIN(?depth1) as ?depth)\n    WHERE {\n      service gas:service {\n        gas:program gas:gasClass \"com.bigdata.rdf.graph.analytics.BFS\" ;\n                gas:in target: ;\n                gas:traversalDirection \"Forward\" ;\n                gas:out ?supervisor1 ;\n                gas:out1 ?depth1 ;\n                gas:out2 ?student1 ;\n                gas:linkType wdt:P184 ;\n      }\n    }\n    GROUP BY ?student1 ?supervisor1\n  }\n  UNION\n  { \n    SELECT ?student1 ?supervisor1 (MIN(?depth1) as ?depth)\n    WHERE {\n      SERVICE gas:service {\n        gas:program gas:gasClass \"com.bigdata.rdf.graph.analytics.BFS\" ;\n                gas:in target: ;\n                gas:traversalDirection \"Reverse\" ;\n                gas:out ?student1 ;\n                gas:out1 ?depth1 ;\n                gas:out2 ?supervisor1 ;\n                gas:linkType wdt:P184 ;\n      }\n    }\n    GROUP BY ?student1 ?supervisor1\n  }\n  UNION\n  { \n    SELECT ?student1 ?supervisor1 (MIN(?depth1) as ?depth)\n    WHERE {\n      SERVICE gas:service {\n        gas:program gas:gasClass \"com.bigdata.rdf.graph.analytics.BFS\" ;\n                gas:in target: ;\n                gas:traversalDirection \"Reverse\" ;\n                gas:out ?supervisor1 ;\n                gas:out1 ?depth1 ;\n                gas:out2 ?student1 ;\n                gas:linkType wdt:P185 ;\n      }\n    }\n    GROUP BY ?student1 ?supervisor1\n  }\n  \n  BIND( IF( ?student1 = target:, \"3080BB\", \"ffffff\") AS ?rgb)\n\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,sv,jp,zh,ru,fr,de\" .  } \n}\n\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/author_academic-tree.sparql",
      "title": "author_academic-tree",
      "description": null
    },
    {
      "query_id": "scholia.author_associated-images",
      "namespace": "scholia",
      "name": "author_associated-images",
      "sparql": "#defaultView:ImageGrid\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT DISTINCT ?image WHERE {\n  {\n    # Images of the person\n    target: wdt:P18 ?image .\n  }\n  UNION {\n    # Images from whatever property value is linked.\n    \n    # Excluded \"different from\" property and take all other properties\n    target: !wdt:P1889 ?item .\n\n    ?item wdt:P18 ?image . \n    \n    # All people are humans, so these images are excluded.\n    FILTER (?item != wd:Q5)\n  }\n  UNION {\n    # Images associated with works of the author, both direct images,\n    # images of topics of the works and images of coauthors.\n    target: ^wdt:P50 / (wdt:P921* | wdt:P50) / wdt:P18 ?image .\n  }\n}   \n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/author_associated-images.sparql",
      "title": "author_associated-images",
      "description": null
    },
    {
      "query_id": "scholia.author_citations-by-year",
      "namespace": "scholia",
      "name": "author_citations-by-year",
      "sparql": "#defaultView:BarChart\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?year (count(distinct ?citing_work) as ?count) ?kind  WHERE {\n  ?work wdt:P50 target: .\n  ?citing_work wdt:P2860 ?work .\n  bind(if (exists { ?citing_work wdt:P50 target: }, \"self-citations\", \"citations from others\") as ?kind)\n  ?citing_work wdt:P577 ?date .\n  BIND(str(YEAR(?date)) AS ?year)\n} group by ?year ?kind\norder by desc(?year)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/author_citations-by-year.sparql",
      "title": "author_citations-by-year",
      "description": null
    },
    {
      "query_id": "scholia.author_coauthor-map",
      "namespace": "scholia",
      "name": "author_coauthor-map",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n#defaultView:Map\nSELECT ?organization ?organizationLabel ?geo ?count ?layer\nWITH {\n  SELECT DISTINCT ?organization ?geo (COUNT(DISTINCT ?work) AS ?count) WHERE {\n    ?work wdt:P50 target: ;\n          wdt:P50 ?author .\n    FILTER (?author != target: )\n    ?author ( wdt:P108 | wdt:P463 | wdt:P1416 ) / wdt:P361* ?organization . \n    ?organization (wdt:P625 | ((wdt:P276|wdt:P159)/wdt:P625)) ?geo .\n  }\n  GROUP BY ?organization ?geo ?count\n  ORDER BY DESC (?count)\n  LIMIT 2000\n} AS %organizations\nWHERE {\n  INCLUDE %organizations\n  BIND(IF( (?count < 1), \"No results\", IF((?count < 2), \"1 result\", IF((?count < 11), \"1 < results \u2264 10\", IF((?count < 101), \"10 < results \u2264 100\", IF((?count < 1001), \"100 < results \u2264 1000\", IF((?count < 10001), \"1000 < results \u2264 10000\", \"over 10000 results\") ) ) ) )) AS ?layer )\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }        \n }\nORDER BY DESC (?count)\n\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/author_coauthor-map.sparql",
      "title": "author_coauthor-map",
      "description": null
    },
    {
      "query_id": "scholia.author_coauthors",
      "namespace": "scholia",
      "name": "author_coauthors",
      "sparql": "#defaultView:Graph\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n# Egocentric co-author graph for an author\nSELECT ?author1 ?author1Label ?rgb ?author2 ?author2Label\nWITH {\n  SELECT (COUNT(?work) AS ?count) ?author1 ?author2 WHERE {\n    # Find co-authors\n    ?work wdt:P50 target:, ?author1, ?author2 .\n\n    # Filtering \n    # Only journal and conference articles, books, not (yet?) software\n    # VALUES ?publication_type { wd:Q13442814 wd:Q571 wd:Q26973022}  \n    # ?work wdt:P31 ?publication_type .\n  }\n  GROUP BY ?author1 ?author2\n  ORDER BY DESC(?count)\n                    \n  # Limit the size of the graph, to avoid overburdening the browser\n  LIMIT 1000\n} AS %authors\nWITH {\n  SELECT ?author1 ?author2 ?rgb WHERE {\n    INCLUDE %authors\n    \n    # Exclude self-links\n    FILTER (?author1 != ?author2)\n    \n    # Color according to gender\n    OPTIONAL {\n      ?author1 wdt:P21 ?gender1 . \n      BIND( IF(?gender1 = wd:Q6581097, \"3182BD\", \"E6550D\") AS ?rgb)\n    }\n  }\n} AS %result\nWHERE {\n  INCLUDE %result\n  # Label the results \n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,fr,de,ru,es,zh,jp\". }\n}\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/author_coauthors.sparql",
      "title": "author_coauthors",
      "description": null
    },
    {
      "query_id": "scholia.author_events",
      "namespace": "scholia",
      "name": "author_events",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  (xsd:date(MIN(?start)) AS ?date)  \n  ?event ?eventLabel\n  (CONCAT(\"/event/\", SUBSTR(STR(?event), 32)) AS ?eventUrl)\n  (GROUP_CONCAT(DISTINCT ?role; separator=\", \") AS ?roles)\n  (GROUP_CONCAT(DISTINCT ?location_label; separator=\", \") AS ?locations)\nWHERE {\n    BIND(target: AS ?person)\n    {  # speaker\n      ?event wdt:P823 ?person .\n      BIND(\"speaker\" AS ?role)\n    } UNION {  # organizer\n      ?event wdt:P664 ?person .\n      BIND(\"organizer\" AS ?role)\n    } UNION {  # participant\n      ?person wdt:P1344 | ^wdt:P710 ?event  .\n      BIND(\"participant\" AS ?role)\n    } UNION {  # editor\n      ?person ^wdt:P98 / wdt:P4745 ?event  .\n      BIND(\"editor of proceedings\" AS ?role)\n    } UNION {  # author\n      ?person ^wdt:P50 / wdt:P1433 / wdt:P4745 ?event  .\n      BIND(\"author\" AS ?role)\n    } UNION {  # program committee member\n      ?event wdt:P5804 ?person .\n      BIND(\"program committee member\" AS ?role)\n    }\n    OPTIONAL { ?event wdt:P276 ?location . ?location rdfs:label ?location_label . FILTER (LANG(?location_label) = 'en')}\n    OPTIONAL { ?event wdt:P580 | wdt:P585 ?start }\n \n    SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,da,de,es,fr,jp,no,ru,sv,zh\". }\n}\nGROUP BY ?event ?eventLabel\nORDER BY DESC(?date) \n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/author_events.sparql",
      "title": "author_events",
      "description": null
    },
    {
      "query_id": "scholia.author_list-of-publications",
      "namespace": "scholia",
      "name": "author_list-of-publications",
      "sparql": "#defaultView:Table\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  (MIN(?dates) AS ?date)\n  ?work ?workLabel\n  (GROUP_CONCAT(DISTINCT ?type_label; separator=\", \") AS ?type)\n  (SAMPLE(?pages_) AS ?pages)\n  ?venue ?venueLabel\n  (GROUP_CONCAT(DISTINCT ?author_label; separator=\", \") AS ?authors)\n  (CONCAT(\"../authors/\", GROUP_CONCAT(DISTINCT SUBSTR(STR(?author), 32); separator=\",\")) AS ?authorsUrl)\nWHERE {\n  ?work wdt:P50 target: .\n  ?work wdt:P50 ?author .\n  OPTIONAL {\n    ?author rdfs:label ?author_label_ . FILTER (LANG(?author_label_) = 'en')\n  }\n  BIND(COALESCE(?author_label_, SUBSTR(STR(?author), 32)) AS ?author_label)\n  OPTIONAL { ?work wdt:P31 ?type_ . ?type_ rdfs:label ?type_label . FILTER (LANG(?type_label) = 'en') }\n  ?work wdt:P577 ?datetimes .\n  BIND(xsd:date(?datetimes) AS ?dates)\n  OPTIONAL { ?work wdt:P1104 ?pages_ }\n  OPTIONAL { ?work wdt:P1433 ?venue }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,no,ru,sv,zh\". }  \n}\nGROUP BY ?work ?workLabel ?venue ?venueLabel\nORDER BY DESC(?date)  \n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/author_list-of-publications.sparql",
      "title": "author_list-of-publications",
      "description": null
    },
    {
      "query_id": "scholia.author_most-cited-works",
      "namespace": "scholia",
      "name": "author_most-cited-works",
      "sparql": "#defaultView:Table\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n# Author's most cited works\nSELECT ?count ?work ?workLabel \nWITH {\n  SELECT (count(?citing_work) as ?count) ?work WHERE {\n    ?work wdt:P50 target: .\n    OPTIONAL { ?citing_work wdt:P2860 ?work . }\n  }\n  GROUP BY ?work\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,jp\". }        \n}  \nORDER BY DESC(?count)\nLIMIT 500\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/author_most-cited-works.sparql",
      "title": "author_most-cited-works",
      "description": null
    },
    {
      "query_id": "scholia.author_most-citing-authors",
      "namespace": "scholia",
      "name": "author_most-citing-authors",
      "sparql": "#defaultView:Table\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?count\n  ?citing_author ?citing_authorLabel\n\n  # Either show the ORCID iD or construct part of a URL to search on the ORCID homepage\n  (COALESCE(?orcid_, CONCAT(\"orcid-search/search/?searchQuery=\", ENCODE_FOR_URI(?citing_authorLabel))) AS ?orcid)\nWITH {\n  SELECT (COUNT(?citing_work) AS ?count) ?citing_author WHERE {\n    ?work wdt:P50 target: .\n    ?citing_work wdt:P2860 ?work . \n    MINUS { ?citing_work wdt:P50 target: }\n    ?citing_work wdt:P50 ?citing_author .\n  }\n  GROUP BY ?citing_author \n  ORDER BY DESC(?count)\n  LIMIT 500\n} AS %counts\nWITH {\n  # An author might have multiple ORCID iDs\n  SELECT\n    ?count\n    ?citing_author\n    (SAMPLE(?orcids) AS ?orcid_)\n  WHERE {\n    INCLUDE %counts\n    OPTIONAL { ?citing_author wdt:P496 ?orcids }\n  }\n  GROUP BY ?count ?citing_author\n} AS %result\nWHERE {\n  INCLUDE %result\n  \n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\". }\n} \nORDER BY DESC(?count)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/author_most-citing-authors.sparql",
      "title": "author_most-citing-authors",
      "description": null
    },
    {
      "query_id": "scholia.author_other-locations",
      "namespace": "scholia",
      "name": "author_other-locations",
      "sparql": "#defaultView:Map\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT DISTINCT ?image ?item ?itemLabel ?geo (?property_item_label AS ?layer)\nWHERE {\n  target: ?property ?item .\n  ?item p:P159/pq:P625 | wdt:P276*/wdt:P625 ?geo .\n  ?property_item wikibase:directClaim ?property .\n  OPTIONAL { ?item wdt:P18 ?image . } \n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\". }\n  \n  # No automatic labeling on the property, - for some reason.\n  ?property_item rdfs:label ?property_item_label . FILTER(LANG(?property_item_label) = 'en')\n}\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/author_other-locations.sparql",
      "title": "author_other-locations",
      "description": null
    },
    {
      "query_id": "scholia.author_pages-per-year",
      "namespace": "scholia",
      "name": "author_pages-per-year",
      "sparql": "#defaultView:BarChart\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nselect ?year ?number_of_pages ?work_label where {\n  {\n    select ?year (sample(?pages) as ?number_of_pages) ?work_label where {\n      {\n        select (str(?year_) as ?year) (0 as ?pages) (\"_\" as ?work_label) where {\n          ?year_item wdt:P31 wd:Q577 . \n          ?year_item wdt:P585 ?date .\n          bind(year(?date) as ?year_)\n          {\n            select (min(?year_) as ?earliest_year) (max(?year_) as ?latest_year) where {\n              ?work wdt:P50 target: .\n              ?work wdt:P577 ?publication_date . \n              bind(year(?publication_date) as ?year_)\n            }\n          }\n          filter (?year_ >= ?earliest_year && ?year_ <= ?latest_year)\n        }\n      }\n      union {\n        ?work wdt:P50 target: .\n        ?work wdt:P1104 ?pages .\n        ?work wdt:P577 ?date . \n        ?work rdfs:label ?long_work_label . filter(lang(?long_work_label) = 'en')\n        bind(substr(?long_work_label, 1, 20) as ?work_label)\n        bind(str(year(?date)) as ?year) \n      }\n\t} \n\tgroup by ?year ?work ?work_label\n\torder by ?year \n  }\n}\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/author_pages-per-year.sparql",
      "title": "author_pages-per-year",
      "description": null
    },
    {
      "query_id": "scholia.author_publications-per-year",
      "namespace": "scholia",
      "name": "author_publications-per-year",
      "sparql": "#defaultView:BarChart\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n# Inspired from LEGOLAS - http://abel.lis.illinois.edu/legolas/\n# Shubhanshu Mishra, Vetle Torvik\nselect ?year (count(?work) as ?number_of_publications) ?role where {\n  {\n    select (str(?year_) as ?year) (0 as ?pages) (\"_\" as ?role) where {\n      # default values = 0\n      ?year_item wdt:P31 wd:Q577 . \n      ?year_item wdt:P585 ?date .\n      bind(year(?date) as ?year_)\n      {\n        select (min(?year_) as ?earliest_year)  (max(?year_) as ?latest_year) where {\n          ?work wdt:P50 target: .\n          ?work wdt:P577 ?publication_date . \n          bind(year(?publication_date) as ?year_)\n        }\n      }\n      bind(year(now())+1 as ?next_year)\n      filter (?year_ >= ?earliest_year && ?year_ <= ?latest_year)\n    }\n  }\n  union {\n  {\n    select ?work (min(?years) as ?year) (count(?coauthors) as ?number_of_authors) ?author_number where {\n      ?work (p:P50|p:P2093) ?author_statement . \n      ?author_statement ps:P50 target: .\n      optional { ?author_statement pq:P1545 ?author_number . }\n      ?work (wdt:P50|wdt:P2093) ?coauthors . \n      ?work wdt:P577 ?dates .\n      bind(str(year(?dates)) as ?years) .\n    }\n    group by ?work ?author_number\n  }\n  bind(coalesce(if(?number_of_authors = 1,\n            'Solo author',\n            if(xsd:integer(?author_number) = 1,\n               'First author',\n               if(xsd:integer(?author_number) = ?number_of_authors,\n                  'Last author',\n                  'Middle author'))), 'Unknown')\n       as ?role)\n   }\n}\ngroup by ?year ?role\norder by ?year\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/author_publications-per-year.sparql",
      "title": "author_publications-per-year",
      "description": null
    },
    {
      "query_id": "scholia.author_review-statistics",
      "namespace": "scholia",
      "name": "author_review-statistics",
      "sparql": "# Venue statistics for a specific reviewer\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?count (SAMPLE(?short_name_) AS ?short_name)\n  ?venue ?venueLabel\n  ?topics ?topicsUrl\nWITH {\n  SELECT\n    (COUNT(DISTINCT ?work) as ?count)\n    ?venue\n    (GROUP_CONCAT(DISTINCT ?topic_label; separator=\", \") AS ?topics)\n    (CONCAT(\"../topics/\", GROUP_CONCAT(DISTINCT SUBSTR(STR(?topic), 32); separator=\",\")) AS ?topicsUrl)\n  WHERE {\n    {\n      ?work wdt:P4032 target: ;\n            wdt:P1433 ?venue .\n    }\n    UNION\n    {\n      # program committee member for event in a series (work is here the event)\n      ?work wdt:P179 ?venue ;\n            wdt:P5804 target: \n    }\n    UNION\n    {\n      # program committee member for event not in a series\n      ?venue wdt:P5804 target: .\n      MINUS { ?venue wdt:P179 [] }\n      BIND(\"dummy\" AS ?work)\n    }\n    OPTIONAL {\n      ?venue wdt:P921 ?topic .\n      ?topic rdfs:label ?topic_label . FILTER(LANG(?topic_label) = 'en')\n    }\n  }\n  GROUP BY ?venue\n} AS %result\nWHERE {\n  INCLUDE %result\n  OPTIONAL { ?venue wdt:P1813 ?short_name_ . }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\". }  \n} \nGROUP BY ?count ?venue ?venueLabel ?topics ?topicsUrl\nORDER BY DESC(?count)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/author_review-statistics.sparql",
      "title": "author_review-statistics",
      "description": null
    },
    {
      "query_id": "scholia.author_timeline",
      "namespace": "scholia",
      "name": "author_timeline",
      "sparql": "#defaultView:Timeline\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n# Timeline for an author\nSELECT ?label ?beginning ?ending ?education_degree_label\nWITH {\n  SELECT ?work (MIN(?publication_date) AS ?beginning) WHERE {\n    ?work wdt:P50 target: .\n    ?work wdt:P577 ?publication_date . \n  }\n  GROUP BY ?work\n} AS %works_with_publication_date\nWITH {\n  \n  SELECT ?work ?beginning (COUNT(?citing_article) AS ?number_of_citations) WHERE {\n    INCLUDE %works_with_publication_date\n    OPTIONAL { ?citing_article wdt:P2860 ?work . }\n  }\n  GROUP BY ?work ?beginning \n} AS %works\nWHERE {\n  # { Birth target: wdt:P569 ?beginning . BIND(\"Birth\" AS ?label) } UNION\n  {\n    { \n      SELECT ?work ?beginning WHERE {\n        INCLUDE %works\n      }\n      ORDER BY DESC(?number_of_citations)\n      LIMIT 1        \n    }\n    BIND(\"\ud83d\udcd6 publication of most cited article\" AS ?label)\n  }\n  UNION\n  {\n    { \n      SELECT ?work ?beginning WHERE {\n        INCLUDE %works\n      }\n      ORDER BY ?beginning\n      LIMIT 1        \n    }\n    BIND(\"\ud83d\udcd6 first publication\" AS ?label)\n  }\n  UNION\n  {\n    { \n      SELECT ?work ?beginning WHERE {\n        INCLUDE %works\n      }\n      ORDER BY DESC(?beginning)\n      LIMIT 1        \n    }\n    BIND(\"\ud83d\udcd6 latest publication\" AS ?label)\n  }\n  UNION\n  {\n    # Education\n    target: p:P69 ?education_statement .\n    ?education_statement ps:P69 ?education .\n    ?education rdfs:label ?education_label . \n    FILTER (lang(?education_label) = 'en')\n    BIND(CONCAT(\"\ud83e\udd89 \", ?education_label) AS ?label)\n    OPTIONAL { ?education_statement pq:P580 ?beginning . }\n    OPTIONAL { ?education_statement pq:P582 ?ending . }\n    OPTIONAL {\n      ?education_statement pq:P512 ?education_degree . \n      ?education_degree rdfs:label ?education_degree_label .\n      FILTER (lang(?education_degree_label) = 'en')\n    }\n  }\n  UNION\n  {\n    # Affiliation\n    target: p:P1416 | p:P108 ?affiliation_statement .\n    ?affiliation_statement ps:P1416 | ps:P108 ?affiliation .\n    ?affiliation rdfs:label ?affiliation_label .\n    FILTER (lang(?affiliation_label) = 'en')\n    BIND(CONCAT(\"\ud83c\udfe0 \",?affiliation_label) AS ?label)\n    # OPTIONAL { ?affiliation wdt:P18 ?image }\n    OPTIONAL { ?affiliation_statement pq:P580 ?beginning . }\n    OPTIONAL { ?affiliation_statement pq:P582 ?ending . }\n    OPTIONAL {\n      ?affiliation_statement pq:P512 ?affiliation_degree . \n      ?affiliation_degree rdfs:label ?affiliation_degree_label .\n      FILTER (lang(?affiliation_degree_label) = 'en')\n    }\n  }\n  UNION\n  {\n    target: p:P166 ?award_statement .\n    ?award_statement ps:P166 ?award .\n    ?award rdfs:label ?award_label .\n    FILTER (lang(?award_label) = 'en')\n    BIND(CONCAT(\"\ud83c\udfc6 \",?award_label) AS ?label)\n    ?award_statement pq:P585 ?beginning .\n  }\n\n} \n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/author_timeline.sparql",
      "title": "author_timeline",
      "description": null
    },
    {
      "query_id": "scholia.author_topic-scores",
      "namespace": "scholia",
      "name": "author_topic-scores",
      "sparql": "#defaultView:BubbleChart\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?score ?topic ?topicLabel\nWITH {\n  SELECT\n    (SUM(?score_) AS ?score)\n    ?topic\n  WHERE {\n    { \n      target: wdt:P101 ?topic .\n      BIND(20 AS ?score_)\n    }\n    UNION\n    {\n      SELECT (3 AS ?score_) ?topic WHERE {\n        ?work wdt:P50 target: ;\n              wdt:P921 ?topic . \n      }\n    }\n    UNION\n    {\n      SELECT (1 AS ?score_) ?topic WHERE {\n        ?work wdt:P50 target: .\n        ?citing_work wdt:P2860 ?work .\n        ?citing_work wdt:P921 ?topic . \n      }\n    }\n  }\n  GROUP BY ?topic\n} AS %results \nWHERE {\n  INCLUDE %results\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,da,de,es,jp,no,ru,sv,zh\". }\n}\nORDER BY DESC(?score)\nLIMIT 200\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/author_topic-scores.sparql",
      "title": "author_topic-scores",
      "description": null
    },
    {
      "query_id": "scholia.author_topics-works-matrix",
      "namespace": "scholia",
      "name": "author_topics-works-matrix",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?work ?workLabel ?topic ?topicLabel WHERE {\n?work wdt:P50 target: .\n?work wdt:P921 ?topic .\nOPTIONAL { ?work wdt:P577 ?publication_date }\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,cz,da,de,es,fr,hi,jp,nl,nn,ru,sv,zh\". }\n}\nORDER BY ?publication_date",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/author_topics-works-matrix.sparql",
      "title": "author_topics-works-matrix",
      "description": null
    },
    {
      "query_id": "scholia.author_topics",
      "namespace": "scholia",
      "name": "author_topics",
      "sparql": "#defaultView:Table\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?count ?theme ?themeLabel ?example_work ?example_workLabel\nWITH {\n  SELECT (COUNT(?work) AS ?count) ?theme (SAMPLE(?work) AS ?example_work)\n  WHERE {\n    ?work wdt:P50 target: .\n    ?work wdt:P921 ?theme .\n  }\n  GROUP BY ?theme\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\" . } \n}\nORDER BY DESC(?count) \n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/author_topics.sparql",
      "title": "author_topics",
      "description": null
    },
    {
      "query_id": "scholia.author_use",
      "namespace": "scholia",
      "name": "author_use",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?count\n  ?use ?useLabel (CONCAT(\"/use/\", SUBSTR(STR(?use), 32)) AS ?useUrl)\n  (\"\ud83d\udd0e\" AS ?zoom)\n  (CONCAT(\"{{ q }}/use/\", SUBSTR(STR(?use), 32)) AS ?zoomUrl)\n  ?useDescription\n\n  ?example_work ?example_workLabel\nWITH {\n  SELECT\n    (COUNT(?work) AS ?count)\n    ?use\n    (SAMPLE(?work) AS ?example_work)\n  {\n    ?work wdt:P50 target: ;\n          wdt:P4510 ?use .\n  }\n  GROUP BY ?use\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?count)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/author_use.sparql",
      "title": "author_use",
      "description": null
    },
    {
      "query_id": "scholia.author_venue-statistics-chart",
      "namespace": "scholia",
      "name": "author_venue-statistics-chart",
      "sparql": "#defaultView:BubbleChart\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?count ?venue (SAMPLE(?venue_label_) AS ?venue_label) \nWITH {\n  SELECT (COUNT(?work) as ?count) ?venue WHERE {\n    ?work wdt:P50 target: .\n    ?work wdt:P1433 ?venue .\n  }\n  GROUP BY ?venue\n} AS %counts\nWHERE {\n  INCLUDE %counts\n  ?venue rdfs:label ?long_venue_label FILTER(LANG(?long_venue_label) = 'en')\n  OPTIONAL { ?venue wdt:P1813 ?short_name . }\n  BIND(COALESCE(?short_name, ?long_venue_label) AS ?venue_label_)\n}\nGROUP BY ?venue ?count\nORDER BY DESC(?count)  \n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/author_venue-statistics-chart.sparql",
      "title": "author_venue-statistics-chart",
      "description": null
    },
    {
      "query_id": "scholia.author_venue-statistics",
      "namespace": "scholia",
      "name": "author_venue-statistics",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n# Venue statistics for a specific author\nSELECT\n  ?count (SAMPLE(?short_name_) AS ?short_name)\n  ?venue ?venueLabel (CONCAT(\"/venue/\", SUBSTR(STR(?venue), 32)) AS ?venueUrl)\n  ?topics ?topicsUrl\nWITH {\n  SELECT\n    (COUNT(DISTINCT ?work) as ?count)\n    ?venue\n    (GROUP_CONCAT(DISTINCT ?topic_label; separator=\", \") AS ?topics)\n    (CONCAT(\"../topics/\", GROUP_CONCAT(DISTINCT SUBSTR(STR(?topic), 32); separator=\",\")) AS ?topicsUrl)\n  WHERE {\n    ?work wdt:P50 target: .\n    ?work wdt:P1433 ?venue .\n    OPTIONAL {\n      ?venue wdt:P921 ?topic .\n      ?topic rdfs:label ?topic_label . FILTER(LANG(?topic_label) = 'en') }\n  }\n  GROUP BY ?venue\n} AS %result\nWHERE {\n  INCLUDE %result\n  OPTIONAL { ?venue wdt:P1813 ?short_name_ . }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\". }  \n} \nGROUP BY ?count ?venue ?venueLabel ?topics ?topicsUrl\nORDER BY DESC(?count)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/author_venue-statistics.sparql",
      "title": "author_venue-statistics",
      "description": null
    },
    {
      "query_id": "scholia.authors_citations-per-publication-year",
      "namespace": "scholia",
      "name": "authors_citations-per-publication-year",
      "sparql": "#defaultView:BarChart\nSELECT ?year ?number_of_citations ?author_label WHERE {\n  {\n    SELECT ?year ?number_of_citations ?author ?author_label_\n    WHERE {\n      {\n        SELECT\n\t  ?author\n\t  ?year\n\n          # DISTINCT to avoid count citations whether ther are multiple\n\t  # publication dates\n\t  (COUNT(DISTINCT ?citation) AS ?number_of_citations)\n\tWHERE {\n          hint:Query hint:optimizer \"None\".\n          VALUES ?author {  {% for q in qs %} wd:{{ q }} {% endfor %}  }\n          ?work wdt:P50 ?author ;\n                wdt:P577 ?publication_date .\n          ?citing_work wdt:P2860 ?work\n          BIND(STR(YEAR(?publication_date)) AS ?year)\n\n\t  # We want to count the number of citations rather than the number of\n\t  # citing works or the number of cited works\n          BIND(CONCAT(STR(?work), STR(?citing_work)) AS ?citation)\n        }\n        GROUP BY ?author ?year \n      } \n      ?author rdfs:label ?author_label_ .\n      FILTER (LANG(?author_label_) = 'en')\n    }\n  }\n  # Represent the author by name and Q identifier\n  BIND (CONCAT(?author_label_, \" (\", SUBSTR(STR(?author), 32), \")\") AS ?author_label)\n}\nORDER BY ?year\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/authors_citations-per-publication-year.sparql",
      "title": "authors_citations-per-publication-year",
      "description": null
    },
    {
      "query_id": "scholia.authors_co-author",
      "namespace": "scholia",
      "name": "authors_co-author",
      "sparql": "#defaultView:Graph\nPREFIX gas: <http://www.bigdata.com/rdf/gas#>\n\nSELECT ?author ?authorLabel ?work ?workLabel \nWITH {\n SELECT ?work ?author WHERE { \n  { }\n  {% for q1 in qs %} {% for q2 in qs %} {% if q1 < q2 %} UNION {\n   SELECT ?work ?author WHERE {\n    SERVICE gas:service {\n     gas:program gas:gasClass \"com.bigdata.rdf.graph.analytics.BFS\" ;\n           gas:in wd:{{ q1 }} ;\n           gas:target wd:{{ q2 }} ;\n           gas:traversalDirection \"Undirected\" ;\n           gas:out ?work ;\n           gas:linkType wdt:P50 ;\n          gas:maxVisited 5000 .\n    }\n    ?work wdt:P50 ?author\n   }\n  } # UNION END\n  {% endif %} {% endfor %}  {% endfor %}  } \n} AS %result \nWHERE {\n INCLUDE %result \n SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,he,jp,nl,no,ru,sv,zh\" . }\n}\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/authors_co-author.sparql",
      "title": "authors_co-author",
      "description": null
    },
    {
      "query_id": "scholia.authors_list-of-authors",
      "namespace": "scholia",
      "name": "authors_list-of-authors",
      "sparql": "SELECT ?author ?authorLabel ?authorDescription ?example_work ?example_workLabel\nWITH {\n  SELECT ?author (SAMPLE(?work) AS ?example_work) WHERE {\n    VALUES ?author { {% for q in qs %} wd:{{ q }} {% endfor %} }\n    OPTIONAL { ?work wdt:P50 ?author }\n  }\n  GROUP BY ?author\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,es,fr,nl,no,ru,sv,zh\". }\n}",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/authors_list-of-authors.sparql",
      "title": "authors_list-of-authors",
      "description": null
    },
    {
      "query_id": "scholia.authors_list-of-jointly-authored-works",
      "namespace": "scholia",
      "name": "authors_list-of-jointly-authored-works",
      "sparql": "SELECT\n  ?coauthor_count\n  ?work ?workLabel\n  ?authors ?authorsUrl\nWITH {\n  SELECT \n    (COUNT(?author) AS ?coauthor_count)\n    ?work \n    (GROUP_CONCAT(?author_label; separator=\", \") AS ?authors)\n    (GROUP_CONCAT(SUBSTR(STR(?author), 32); separator=\",\") AS ?authorsUrl)\n  {\n    VALUES ?author { {% for q in qs %} wd:{{ q }} {% endfor %} }\n    ?work wdt:P50 ?author .\n    OPTIONAL { ?author rdfs:label ?author_label . FILTER(LANG(?author_label) = 'en') }\n  }\n  GROUP BY ?work\n  HAVING(?coauthor_count > 1)\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,es,fr,nl,no,ru,sv,zh\". }\n}\nORDER BY DESC(?coauthor_count)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/authors_list-of-jointly-authored-works.sparql",
      "title": "authors_list-of-jointly-authored-works",
      "description": null
    },
    {
      "query_id": "scholia.authors_works-per-publication-year",
      "namespace": "scholia",
      "name": "authors_works-per-publication-year",
      "sparql": "#defaultView:BarChart\nSELECT ?year ?number_of_works ?author_label WHERE {\n  {\n    SELECT ?year ?number_of_works ?author ?author_label_\n    WHERE {\n      {\n        SELECT ?author ?year (COUNT(DISTINCT ?work) AS ?number_of_works) WHERE {\n          hint:Query hint:optimizer \"None\".\n          VALUES ?author {   {% for q in qs %} wd:{{ q }} {% endfor %}   }\n          ?work wdt:P50 ?author .\n          ?work wdt:P577 ?publication_date .\n          BIND(STR(YEAR(?publication_date)) AS ?year)\n        }\n        GROUP BY ?author ?year \n      } \n      ?author rdfs:label ?author_label_ .\n      FILTER (LANG(?author_label_) = 'en')\n    }\n  }\n  # Represent the author by name and Q identifier\n  BIND (CONCAT(?author_label_, \" (\", SUBSTR(STR(?author), 32), \")\") AS ?author_label)\n}\nORDER BY ?year",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/authors_works-per-publication-year.sparql",
      "title": "authors_works-per-publication-year",
      "description": null
    },
    {
      "query_id": "scholia.award-curation_missing-author-items",
      "namespace": "scholia",
      "name": "award-curation_missing-author-items",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n(COUNT(?work) AS ?count) \n?string\n(CONCAT(\n  'https://author-disambiguator.toolforge.org/names_oauth.php?doit=Look+for+author&name=',\n  ENCODE_FOR_URI(?string)) AS ?author_resolver_url)\nWITH {\n  SELECT DISTINCT ?author_name {\n    ?recipient p:P166 ?award_statement . \n    ?award_statement ps:P166 target: .\n\n    ?recipient skos:altLabel | rdfs:label ?author_name_ .\n\n    # The SELECT-DISTINCT-BIND trick here is due to Stanislav Kralin\n    # https://stackoverflow.com/questions/53933564\n    BIND (STR(?author_name_) AS ?author_name)\n  }\n  LIMIT 2000\n} AS %RAWstrings\nWITH\n# This part is due to Dipsacus fullonum, as per https://w.wiki/5Brk\n{\n  # Calculate capitalization variants of these raw strings\n  SELECT \n    DISTINCT \n      ?string\n  WHERE\n  {\n    {\n      INCLUDE %RAWstrings\n      BIND(STR(?author_name) AS ?string) # the raw strings\n    }\n    UNION\n    {\n      INCLUDE %RAWstrings\n      BIND(UCASE(STR(?author_name)) AS ?string) # uppercased versions of the raw strings\n    }\n    UNION\n    {\n      INCLUDE %RAWstrings\n      BIND(LCASE(STR(?author_name)) AS ?string) # lowercased versions of the raw strings\n    }\n  }\n} AS %NORMALIZEDstrings\nWHERE {\n  # Find works that have \"author name string\" values equal to these normalized strings\n  INCLUDE %NORMALIZEDstrings\n  ?work wdt:P2093 ?string. \n}\nGROUP BY ?string\nORDER BY DESC (?count)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/award-curation_missing-author-items.sparql",
      "title": "award-curation_missing-author-items",
      "description": null
    },
    {
      "query_id": "scholia.award-curation_missing-coauthor-items",
      "namespace": "scholia",
      "name": "award-curation_missing-coauthor-items",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  # Number of works with the coauthor\n  ?count\n\n  # The coauthor as a string, - rather than as an item\n  ?coauthor\n\n  # Build URL to the Author disambiguator tool\n  (CONCAT(\n      'https://author-disambiguator.toolforge.org/names_oauth.php?doit=Look+for+author&name=',\n      ENCODE_FOR_URI(?coauthor)) AS ?resolver_url)\nWITH {\n  SELECT (COUNT(?work) as ?count) ?coauthor WHERE {\n    ?work wdt:P50 ?author .\n\t  ?author wdt:P166 target: .\n    ?work wdt:P2093 ?coauthor .\n  }\n  GROUP BY ?coauthor\n  LIMIT 2000\n} AS %result\nWHERE {\n  INCLUDE %result\n  # Label the results\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\". }\n}\nORDER BY DESC(?count)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/award-curation_missing-coauthor-items.sparql",
      "title": "award-curation_missing-coauthor-items",
      "description": null
    },
    {
      "query_id": "scholia.award-curation_missing-topics",
      "namespace": "scholia",
      "name": "award-curation_missing-topics",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n?citations  ?work ?workLabel (?work AS ?wikidata_url)\nWITH {\n  SELECT (COUNT(?author) as ?count) ?work WHERE {\n  # Works by author\n    ?work wdt:P50 ?author .\n  # Author who received an award\n    ?author wdt:P166 target: .\n  # Work does not have a main subject statement\n    FILTER NOT EXISTS { ?work wdt:P921 ?topic . }\n  }\n  GROUP BY ?work\n  ORDER BY DESC(?count)\n  LIMIT 2000\n} AS %works\nWITH {\n  SELECT (COUNT(?work1) as ?citations) ?work WHERE {\n  INCLUDE %works\n  # Works cited\n    OPTIONAL { ?work1 wdt:P2860 ?work }.\n  }\n  GROUP BY ?work\n  ORDER BY DESC(?citations)\n  LIMIT 200\n} AS %result\nWHERE {\n  INCLUDE %result\n  \n  # Label the results\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\". }\n}\nORDER BY DESC(?citations)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/award-curation_missing-topics.sparql",
      "title": "award-curation_missing-topics",
      "description": null
    },
    {
      "query_id": "scholia.award-index_statistics",
      "namespace": "scholia",
      "name": "award-index_statistics",
      "sparql": "# tool: scholia\n#defaultView:ScatterChart\n# Statistics on number of recipients for award wrt. gender\nSELECT ?males ?females ?award ?awardLabel \nWITH {\n  SELECT (COUNT(?recipient_male) AS ?males) (COUNT(?recipient_female) AS ?females) ?award WHERE {\n    ?award wdt:P31 wd:Q11448906 .\n    { \n      ?recipient_male wdt:P166 ?award .\n      ?recipient_male wdt:P21 wd:Q6581097 .\n    }\n    UNION \n    {\n      ?recipient_female wdt:P166 ?award .\n      ?recipient_female wdt:P21 wd:Q6581072 .\n    }  \n  }\n  GROUP BY ?award\n} AS %result\nWHERE {\n  {INCLUDE %result}\n  UNION\n  {\n    VALUES (?males ?females ?award ?awardLabel) {\n      (2000 2000 wd:Q10578722 \"Fictive Award Label for axis\")\n    }\n  }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,da,de,es,fr,jp,nl,no,ru,sv,zh\". }\n} \nORDER BY DESC(?males) DESC(?female)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/award-index_statistics.sparql",
      "title": "award-index_statistics",
      "description": null
    },
    {
      "query_id": "scholia.award_coawards",
      "namespace": "scholia",
      "name": "award_coawards",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?number_of_corecipients\n  ?award ?awardLabel ?awardDescription\nWITH {\n     SELECT DISTINCT ?award (COUNT(?recipient) AS ?number_of_corecipients) WHERE {\n    ?recipient wdt:P166 target: .\n\t?recipient wdt:P166 ?award .\n\t\t\t       FILTER (?award != target:)\n     }\n     GROUP BY ?award\n} AS %result\nWHERE {\n  INCLUDE %result \n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,da,de,es,fr,jp,no,ru,sv,zh\" . }  \n}\nORDER BY DESC(?number_of_corecipients)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/award_coawards.sparql",
      "title": "award_coawards",
      "description": null
    },
    {
      "query_id": "scholia.award_gender-distribution",
      "namespace": "scholia",
      "name": "award_gender-distribution",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n ?count ?gender ?genderLabel \nWITH {\n  SELECT (COUNT(DISTINCT ?recipient) AS ?count) ?gender WHERE {\n    ?recipient wdt:P166 target: .\n    ?recipient wdt:P21 ?gender . \n  } \n  GROUP BY ?gender\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,da,de,ep,fr,jp,nl,no,ru,sv,zh\" . } \n} \nORDER BY DESC(?count)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/award_gender-distribution.sparql",
      "title": "award_gender-distribution",
      "description": null
    },
    {
      "query_id": "scholia.award_images-of-recipients",
      "namespace": "scholia",
      "name": "award_images-of-recipients",
      "sparql": "#defaultView:ImageGrid\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?year\n  ?recipient ?recipientLabel \n  ?image\nWITH {\n  SELECT ?recipient ?year (SAMPLE(?image_) AS ?image) WHERE {\n    ?recipient p:P166 ?award_statement . \n    ?award_statement ps:P166 target: .\n    OPTIONAL {\n      ?award_statement pq:P585 ?time .\n\t  BIND(YEAR(?time) AS ?year)\n\t}\n    ?recipient wdt:P18 ?image_ .\n  }\n  GROUP BY ?recipient ?year\n} AS %result\nWHERE {\n  INCLUDE %result \n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,no,ru,sv,zh\" . }  \n}\nORDER BY DESC(?year)\n  ",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/award_images-of-recipients.sparql",
      "title": "award_images-of-recipients",
      "description": null
    },
    {
      "query_id": "scholia.award_list-of-recipients",
      "namespace": "scholia",
      "name": "award_list-of-recipients",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?year\n  ?recipient ?recipientLabel ?recipientDescription\n  ?example_work ?example_workLabel\nWITH {\n  SELECT DISTINCT ?recipient ?year (SAMPLE(?work) AS ?example_work) WHERE {\n    ?recipient p:P166 ?award_statement . \n    ?award_statement ps:P166 target: .\n    OPTIONAL {\n      { ?award_statement pq:P585 ?time }\n      UNION\n      { ?award_statement pq:P580 ?time }\n      BIND(YEAR(?time) AS ?year)\n    }\n    OPTIONAL { ?work wdt:P50 ?recipient . }\n  }\n  GROUP BY ?recipient ?year\n} AS %result\nWHERE {\n  INCLUDE %result \n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,da,de,es,fr,jp,no,ru,sv,zh\" . }  \n}\nORDER BY DESC(?year)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/award_list-of-recipients.sparql",
      "title": "award_list-of-recipients",
      "description": null
    },
    {
      "query_id": "scholia.award_locations-of-recipients",
      "namespace": "scholia",
      "name": "award_locations-of-recipients",
      "sparql": "#defaultView:Map\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT DISTINCT ?recipient ?recipientLabel ?image ?item ?itemLabel ?geo ?layer\nWITH {\n  SELECT DISTINCT ?recipient ?image ?item ?geo (?property_item_label AS ?layer) WHERE {\n    ?recipient wdt:P166 target: .\n    ?recipient ?property ?item . \n    ?item wdt:P625 ?geo .\n    ?property_item wikibase:directClaim ?property .\n    ?property_item rdfs:label ?property_item_label . FILTER (LANG(?property_item_label) = 'en')\n    OPTIONAL { ?item wdt:P18 ?image . }\n  }\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\" . } \n}",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/award_locations-of-recipients.sparql",
      "title": "award_locations-of-recipients",
      "description": null
    },
    {
      "query_id": "scholia.award_recent-publications-by-recipients",
      "namespace": "scholia",
      "name": "award_recent-publications-by-recipients",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?publication_date ?work ?workLabel ?recipient ?recipientLabel\nWITH {\n  SELECT\n    (MAX(?publication_datetimes) AS ?publication_datetime)\n    ?work ?recipient\n  WHERE {\n    ?recipient wdt:P166 target: .\n    ?work wdt:P50 ?recipient .\n    OPTIONAL { ?work wdt:P577 ?publication_datetimes . }\n  }\n  GROUP BY ?work ?recipient\n} AS %result\nWHERE {\n  INCLUDE %result \n  BIND(xsd:date(?publication_datetime) AS ?publication_date)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,da,de,es,fr,jp,no,ru,sv,zh\" . }  \n}\nORDER BY DESC(?publication_date)\nLIMIT 500\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/award_recent-publications-by-recipients.sparql",
      "title": "award_recent-publications-by-recipients",
      "description": null
    },
    {
      "query_id": "scholia.award_topics-of-works-by-recipients",
      "namespace": "scholia",
      "name": "award_topics-of-works-by-recipients",
      "sparql": "#defaultView:BubbleChart\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n# Count the number of time works by award recipients have set a main topic\nSELECT ?count ?topic ?topicLabel \nWITH {\n  SELECT ?topic (COUNT(?work) AS ?count) WHERE {\n    ?recipient wdt:P166 target: .\n    ?work wdt:P50 ?recipient .\n    ?work wdt:P921 ?topic .\n  }\n  GROUP BY ?topic\n} AS %result\nWHERE {\n  INCLUDE %result \n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,no,ru,sv,zh\" . }  \n}\nORDER BY DESC(?count)\nLIMIT 50",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/award_topics-of-works-by-recipients.sparql",
      "title": "award_topics-of-works-by-recipients",
      "description": null
    },
    {
      "query_id": "scholia.catalogue_images",
      "namespace": "scholia",
      "name": "catalogue_images",
      "sparql": "#defaultView:ImageGrid\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?image\n  ?item ?itemLabel\nWHERE {\n  ?item wdt:P972 target: ;\n        wdt:P18 ?image .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,da,es,fr,jp,nl,no,ru,sv,zh\". }\n}\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/catalogue_images.sparql",
      "title": "catalogue_images",
      "description": null
    },
    {
      "query_id": "scholia.catalogue_items",
      "namespace": "scholia",
      "name": "catalogue_items",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?number\n  ?code\n  ?item ?itemLabel ?itemDescription\nWHERE {\n  # Find catalogue items\n  ?item p:P972 ?catalogue_statement .\n  ?catalogue_statement ps:P972 target: .\n\n  # Optionally the catalogue code or the serial order\n  OPTIONAL { ?catalogue_statement pq:P528 | pq:P1545 ?code }\n\n  # For numerical sorting the catalogue code should be converted to an integer\n  BIND(xsd:integer(?code) AS ?number)\n\n  # Label the result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,da,es,fr,jp,nl,no,ru,sv,zh\". }\n}\nORDER BY ?number ?code\nLIMIT 1000\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/catalogue_items.sparql",
      "title": "catalogue_items",
      "description": null
    },
    {
      "query_id": "scholia.chemical-class_class-hierarchy",
      "namespace": "scholia",
      "name": "chemical-class_class-hierarchy",
      "sparql": "#defaultView:Graph\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?child ?childLabel\n  ?rgb \n  ?parent ?parentLabel\nWITH {\n  SELECT ?child ?rgb ?parent WHERE {\n    { \n      SELECT ?child ?rgb ?parent  WHERE {\n        SERVICE gas:service {\n          gas:program gas:gasClass \"com.bigdata.rdf.graph.analytics.BFS\" ;\n                  gas:in target: ;\n                  gas:traversalDirection \"Forward\" ;\n                  gas:out ?child ;\n                  gas:out1 ?depth ;\n                  gas:out2 ?parent1 ;\n                  gas:linkType wdt:P279 ;\n        }\n        ?child wdt:P279 ?parent .\n        BIND(IF(?child = target:, \"FF0000\", \"FFFFFF\") AS ?rgb)\n      }\n    }\n    UNION\n    {\n      SELECT ?child ?rgb ?parent WHERE {\n        BIND(target: AS ?parent)\n        ?child wdt:P279 ?parent . \n        BIND(\"DDDDDD\" AS ?rgb)\n      }\n      LIMIT 10\n    }\n  }\n} AS %results\nWHERE {\n  INCLUDE %results   \n  VALUES ?classes {\n    wd:Q15711994 # group of isomeric entities\n    wd:Q17339814 # group or class of chemical substances\n    wd:Q47154513 # structural class of chemical entities\n    wd:Q55640599 # group of chemical entities\n    wd:Q56256173 # class of chemical entities with similar applications or functions\n    wd:Q56256178 # class of chemical entities with similar source or occurrence\n    wd:Q55662456 # group of ortho, meta, para isomers\n    wd:Q59199015 # group of stereoisomers\n    wd:Q72070508 # group or class of chemical entities\n    wd:Q74892521 # imprecise class of chemical entities\n  }\n  ?parent wdt:P31 ?classes. hint:Prior hint:runFirst TRUE.\n  ?child rdfs:label ?childLabel . FILTER(LANG(?childLabel) = \"en\")\n  ?parent rdfs:label ?parentLabel . FILTER(LANG(?parentLabel) = \"en\")\n}",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/chemical-class_class-hierarchy.sparql",
      "title": "chemical-class_class-hierarchy",
      "description": null
    },
    {
      "query_id": "scholia.chemical-class_found-in-taxon",
      "namespace": "scholia",
      "name": "chemical-class_found-in-taxon",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?chemicals\n\n  ?example_chemical ?example_chemicalLabel\n  (CONCAT(\"/chemical/\", SUBSTR(STR(?example_chemical), 32)) AS ?example_chemicalUrl)\n\n  ?taxon ?taxonLabel\n  (CONCAT(\"/taxon/\", SUBSTR(STR(?taxon), 32)) AS ?taxonUrl)\n  ?taxonDescription\nWITH {\n  SELECT DISTINCT \n    (COUNT(DISTINCT(?chemical)) AS ?chemicals)\n    ?taxon\n    (SAMPLE(?chemical) AS ?example_chemical)\n  WHERE {\n    ?chemical wdt:P279* target: ;\n              p:P703 ?taxonStatement .\n    ?taxonStatement ps:P703 ?taxon .\n  }\n  GROUP BY ?taxon\n  ORDER BY DESC(?chemicals)\n  LIMIT 250\n} AS %taxons\nWHERE {\n  INCLUDE %taxons\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} \nORDER BY DESC(?chemicals)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/chemical-class_found-in-taxon.sparql",
      "title": "chemical-class_found-in-taxon",
      "description": null
    },
    {
      "query_id": "scholia.chemical-class_identifiers",
      "namespace": "scholia",
      "name": "chemical-class_identifiers",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?IDpred ?IDpredLabel\n  ?id ?idUrl\n  ?IDpredDescription\n{\n  target: ?IDdir ?id .\n  ?IDpred wikibase:directClaim ?IDdir ;\n            wdt:P31 wd:Q19833835 .\n  OPTIONAL {\n    ?IDpred wdt:P1630 ?formatterurl .\n  }\n  BIND(IRI(REPLACE(?formatterurl, '\\\\\\\\$1', str(?id))) AS ?idUrl).\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\" . }\n}\nORDER BY ASC(?IDpredLabel)\nLIMIT 500\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/chemical-class_identifiers.sparql",
      "title": "chemical-class_identifiers",
      "description": null
    },
    {
      "query_id": "scholia.chemical-class_publications-per-year",
      "namespace": "scholia",
      "name": "chemical-class_publications-per-year",
      "sparql": "#defaultView:BarChart\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n# Inspired from LEGOLAS - http://abel.lis.illinois.edu/legolas/\n# Shubhanshu Mishra, Vetle Torvik\nselect ?year (count(?work) as ?number_of_publications) where {\n  {\n    select (str(?year_) as ?year) (0 as ?pages) where {\n      # default values = 0\n      ?year_item wdt:P31 wd:Q577 . \n      ?year_item wdt:P585 ?date .\n      bind(year(?date) as ?year_)\n      {\n        select (min(?year_) as ?earliest_year) where {\n          { ?work wdt:P921/wdt:P279* target: . }\n          union { ?work wdt:P921/wdt:P361+ target: . }\n          union { ?work wdt:P921/wdt:P1269+ target: . }\n          union { target: ?propp ?statement .\n                  ?statement a wikibase:BestRank ;\n                             prov:wasDerivedFrom/pr:P248 ?work . }\n          ?work wdt:P577 ?publication_date . \n          bind(year(?publication_date) as ?year_)\n        }\n      }\n      bind(year(now()) as ?next_year)\n      filter (?year_ >= ?earliest_year && ?year_ <= ?next_year)\n    }\n  }\n  union {\n    select ?work (min(?years) as ?year) where {\n      { ?work wdt:P921/wdt:P279* target: . }\n      union { ?work wdt:P921/wdt:P361+ target: . }\n      union { ?work wdt:P921/wdt:P1269+ target: . }\n      union { target: ?propp ?statement .\n              ?statement a wikibase:BestRank ;\n                         prov:wasDerivedFrom/pr:P248 ?work . }\n      ?work wdt:P577 ?dates .\n      bind(str(year(?dates)) as ?years) .\n    }\n    group by ?work \n  }\n}\ngroup by ?year \norder by ?year\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/chemical-class_publications-per-year.sparql",
      "title": "chemical-class_publications-per-year",
      "description": null
    },
    {
      "query_id": "scholia.chemical-class_recent-literature",
      "namespace": "scholia",
      "name": "chemical-class_recent-literature",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?date ?work ?workLabel ?type ?via ?topics\nWITH {\n  SELECT DISTINCT (MAX(?dates) as ?datetime) ?work ?via WHERE {\n    { VALUES ?topic { target:}\n      ?work wdt:P921 ?topic . BIND (\"main topic\" AS ?via) }\n    UNION\n    { ?work wdt:P921 ?topic . ?topic ((^wdt:P361)+) target: . BIND (\"part\" AS ?via) }\n    UNION\n    { ?work wdt:P921 ?topic . ?topic (wdt:P279* ) target: . BIND (\"subclass\" AS ?via). FILTER (?topic != target:) }\n    UNION\n    { ?work wdt:P921 ?topic . ?topic (wdt:P1269+ ) target: . BIND (\"facet\" AS ?via)}\n    UNION\n    {\n      target: ?propp ?statement .\n      ?statement a wikibase:BestRank ;\n                 prov:wasDerivedFrom/pr:P248 ?work .\n      BIND (\"statement\" AS ?via)\n    }\n    OPTIONAL { ?work wdt:P577 ?dateLits . BIND(xsd:date(?dateLits) AS ?dates) }\n  }\n  GROUP BY ?work ?via\n  ORDER BY DESC(?datetime)\n  LIMIT 250\n} AS %works\nWITH {\n  SELECT (MAX(?dates) as ?datetime) ?work (GROUP_CONCAT(DISTINCT ?type_label; separator=\", \") AS ?type) ?via (GROUP_CONCAT(DISTINCT ?topic_label; separator=\" // \") AS ?topics) WHERE {\n    INCLUDE %works\n    ?work wdt:P921 ?topic . \n    OPTIONAL { ?work wdt:P31 ?type_ . ?type_ rdfs:label ?type_label . FILTER (LANG(?type_label) = 'en') }\n    OPTIONAL { ?work wdt:P577 ?dates . }\n    ?topic rdfs:label ?topic_label .  FILTER (lang(?topic_label) = 'en')\n  }\n  GROUP BY ?work ?via\n} AS %result\nWHERE {\n  INCLUDE %result\n  BIND(xsd:date(?datetime) AS ?date)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\". }\n}\nORDER BY DESC(?date)\nLIMIT 500\n\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/chemical-class_recent-literature.sparql",
      "title": "chemical-class_recent-literature",
      "description": null
    },
    {
      "query_id": "scholia.chemical-class_related-chemicals",
      "namespace": "scholia",
      "name": "chemical-class_related-chemicals",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?mol ?molLabel ?InChIKey ?CAS ?CASUrl ?ChemSpider ?ChemSpiderUrl ?PubChem_CID ?PubChem_CIDUrl WITH {\nSELECT DISTINCT ?mol WHERE {\n  ?mol wdt:P279* target: .\n  MINUS { [] wdt:P279 ?mol }\n} LIMIT 500\n} AS %result\nWHERE {\nINCLUDE %result\nOPTIONAL { ?mol wdt:P235 ?InChIKey }\nOPTIONAL {\n  VALUES ?CASIDdir { wdt:P231 }\n  ?mol ?CASIDdir ?CAS .\n  OPTIONAL {\n    ?CASIDpred wikibase:directClaim ?CASIDdir .\n    ?CASIDpred wdt:P1630 ?CASformatterurl .\n  }\n  BIND(IRI(REPLACE(?CASformatterurl, '\\\\\\\\$1', str(?CAS))) AS ?CASUrl).\n}\nOPTIONAL {\n  VALUES ?IDdir { wdt:P661 }\n  ?mol ?IDdir ?ChemSpider .\n  OPTIONAL {\n    ?IDpred wikibase:directClaim ?IDdir .\n    ?IDpred wdt:P1630 ?formatterurl .\n  }\n  BIND(IRI(REPLACE(?formatterurl, '\\\\\\\\$1', str(?ChemSpider))) AS ?ChemSpiderUrl).\n}\nOPTIONAL { ?mol wdt:P662 ?PubChem_CID }\nOPTIONAL {\n  VALUES ?PCIDdir { wdt:P662 }\n  ?mol ?PCIDdir ?PubChem_CID .\n  OPTIONAL {\n    ?PCIDpred wikibase:directClaim ?PCIDdir .\n    ?PCIDpred wdt:P1630 ?PCformatterurl .\n  }\n  BIND(IRI(REPLACE(?PCformatterurl, '\\\\\\\\$1', str(?PubChem_CID))) AS ?PubChem_CIDUrl).\n}\nSERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/chemical-class_related-chemicals.sparql",
      "title": "chemical-class_related-chemicals",
      "description": null
    },
    {
      "query_id": "scholia.chemical-curation_missing-main-subjects",
      "namespace": "scholia",
      "name": "chemical-curation_missing-main-subjects",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT DISTINCT ?work ?workLabel (CONCAT(\"/work/\", SUBSTR(STR(?work),32)) AS ?workUrl)\n  ?chemicalname\n  (CONCAT(SUBSTR(STR(?work),32), \"\\tP921\\t{{ q }}\\tS887\\tQ69652283\") AS ?quickStatements)\n  (CONCAT(\"https://quickstatements.toolforge.org/#/v1=\",\n          SUBSTR(STR(?work),32), \"%7CP921%7C{{ q }}%7CS887%7CQ69652283\") AS ?quickStatementsUrl)\nWITH {\n  SELECT  ?work ?chemicalname WHERE {\n    VALUES ?chemicalType {\n      wd:Q113145171 # type of a chemical entity\n      wd:Q59199015 # group of stereoisomers\n    }\n    target: wdt:P31 ?chemicalType ; rdfs:label ?chemicalname .\n    FILTER(lang(?chemicalname) = \"en\")\n    SERVICE wikibase:mwapi {\n      bd:serviceParam wikibase:endpoint \"www.wikidata.org\";\n      wikibase:api \"Generator\";\n      mwapi:generator \"search\";\n      mwapi:gsrsearch ?chemicalname;\n      mwapi:gsrlimit \"max\".\n      ?work wikibase:apiOutputItem mwapi:title.\n    }\n    ?work wdt:P1476 ?title .\n    MINUS {?work wdt:P921 target: }\n    FILTER (REGEX(LCASE(?title), LCASE(CONCAT( \"\\\\\\\\\", \"b\", ?chemicalname ,\"\\\\\\\\\", \"b\"))))\n  } LIMIT 200\n} AS %works WHERE {\n  INCLUDE %works\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/chemical-curation_missing-main-subjects.sparql",
      "title": "chemical-curation_missing-main-subjects",
      "description": null
    },
    {
      "query_id": "scholia.chemical-curation_missing-properties",
      "namespace": "scholia",
      "name": "chemical-curation_missing-properties",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?property ?propertyLabel WHERE {\n  VALUES ?property {\n    wdt:P2177 wdt:P2102 wdt:P2101 wdt:p3078 wdt:P2119\n    wdt:P3071 wdt:P2054 wdt:P2128 wdt:P1117\n  }\n  MINUS { target: ?property [] }\n  ?property ^wikibase:directClaim / wdt:P1629 / rdfs:label ?propertyLabel .\n  FILTER (lang(?propertyLabel) = \"en\")\n}\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/chemical-curation_missing-properties.sparql",
      "title": "chemical-curation_missing-properties",
      "description": null
    },
    {
      "query_id": "scholia.chemical-element_allotropes",
      "namespace": "scholia",
      "name": "chemical-element_allotropes",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT DISTINCT ?allotrope ?allotropeLabel ?density ?densityUnit ?densityUnitLabel WITH {\n  SELECT ?allotrope (SAMPLE(?densityStats) AS ?densityStat) WHERE {\n    ?allotrope wdt:P31|wdt:P279 ?allotropeType .\n    ?allotropeType p:P279 ?allotropeSpecsStatement .\n    ?allotropeSpecsStatement ps:P279 wd:Q21198401 ;\n                             pq:P642 target: .\n    OPTIONAL {\n      ?allotrope p:P2054 ?densityStats .\n    }\n  } GROUP BY ?allotrope\n} AS %ALLOTROPES {\n  INCLUDE %ALLOTROPES\n  OPTIONAL {\n    ?allotrope p:P2054 ?densityStat .\n    ?densityStat psv:P2054 ?densityValNode .\n    ?densityValNode wikibase:quantityAmount ?density ;\n                    wikibase:quantityUnit ?densityUnit .\n  }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ASC(?allotropeLabel)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/chemical-element_allotropes.sparql",
      "title": "chemical-element_allotropes",
      "description": null
    },
    {
      "query_id": "scholia.chemical-element_data",
      "namespace": "scholia",
      "name": "chemical-element_data",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT DISTINCT ?description ?value ?valueUrl\nWHERE {\n  {\n    SELECT\n      (1 AS ?order)\n      (\"Named after\" AS ?description)\n      (GROUP_CONCAT(?value_; separator=\", \") AS ?value)\n      (CONCAT(\"../topic/\", GROUP_CONCAT(?q; separator=\",\")) AS ?valueUrl)\n    {\n      BIND(1 AS ?dummy)\n      target: wdt:P138 ?iri .\n      BIND(SUBSTR(STR(?iri), 32) AS ?q) \n      ?iri rdfs:label ?value_string . \n      FILTER (LANG(?value_string) = 'en')\n      BIND(COALESCE(?value_string, ?q) AS ?value_)\n    }\n    GROUP BY ?dummy\n  }\n  UNION\n  {\n    SELECT\n      (2 AS ?order)\n      (\"Discoverer\" AS ?description)\n      (GROUP_CONCAT(?value_; separator=\", \") AS ?value)\n      (CONCAT(\"../topic/\", GROUP_CONCAT(?q; separator=\",\")) AS ?valueUrl)\n    {\n      BIND(1 AS ?dummy)\n      target: wdt:P61 ?iri .\n      BIND(SUBSTR(STR(?iri), 32) AS ?q) \n      ?iri rdfs:label ?value_string . \n      FILTER (LANG(?value_string) = 'en')\n      BIND(COALESCE(?value_string, ?q) AS ?value_)\n    }\n    GROUP BY ?dummy\n  }\n  UNION\n  {\n    SELECT\n      (3 AS ?order)\n      (\"Oxidation states\" AS ?description)\n      (GROUP_CONCAT(?value_; separator=\", \") AS ?value)\n    {\n      BIND(1 AS ?dummy)\n      target: wdt:P1121 ?value_ .\n    }\n    GROUP BY ?dummy\n  }\n  UNION\n  {\n    SELECT\n      (4 AS ?order)\n      (\"Electron configuration\" AS ?description)\n      (GROUP_CONCAT(?value_; separator=\", \") AS ?value)\n    {\n      BIND(1 AS ?dummy)\n      target: wdt:P8000 ?value_ .\n    }\n    GROUP BY ?dummy\n  }\n} \nORDER BY ?order\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/chemical-element_data.sparql",
      "title": "chemical-element_data",
      "description": null
    },
    {
      "query_id": "scholia.chemical-element_isotopes",
      "namespace": "scholia",
      "name": "chemical-element_isotopes",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?isotope ?isotopeLabel ?protons ?neutrons ?mass ?massUnit ?massUnitLabel ?halflife ?halflifeUnit?halflifeUnitLabel\nWHERE {\n  VALUES ?element { target: }\n  ?element wdt:P1086 ?protons .\n  ?isotope wdt:P279 ?element ;\n           wdt:P1148 ?neutrons ;\n           p:P2067 ?massStat ;\n           p:P2114 ?halflifeStat .\n  ?massStat psv:P2067 ?massValNode .\n  ?massValNode wikibase:quantityAmount ?mass ;\n               wikibase:quantityUnit ?massUnit .\n  ?halflifeStat psv:P2114 ?halflifeValNode .\n  ?halflifeValNode wikibase:quantityAmount ?halflife ;\n                   wikibase:quantityUnit ?halflifeUnit .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ?neutrons\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/chemical-element_isotopes.sparql",
      "title": "chemical-element_isotopes",
      "description": null
    },
    {
      "query_id": "scholia.chemical-element_recent-literature",
      "namespace": "scholia",
      "name": "chemical-element_recent-literature",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?date ?work ?workLabel ?type ?topics\nWITH {\n  SELECT DISTINCT ?work WHERE {\n    {\n      ?work wdt:P921 / (wdt:P527+ | wdt:P1269+ | (wdt:P31* / wdt:P279*) ) target: .\n    } UNION {\n      target: ?propp ?statement .\n      ?statement a wikibase:BestRank ;\n                 prov:wasDerivedFrom/pr:P248 ?work .\n    }\n  }\n} AS %works\nWITH {\n  SELECT (MAX(?dates) as ?datetime) ?work (GROUP_CONCAT(DISTINCT ?type_label; separator=\", \") AS ?type) (GROUP_CONCAT(DISTINCT ?topic_label; separator=\" // \") AS ?topics) WHERE {\n    INCLUDE %works\n    ?work wdt:P921 ?topic . \n    OPTIONAL { ?work wdt:P31 ?type_ . ?type_ rdfs:label ?type_label . FILTER (LANG(?type_label) = 'en') }\n    OPTIONAL { ?work wdt:P577 ?dates . }\n    ?topic rdfs:label ?topic_label .  FILTER (lang(?topic_label) = 'en')\n  }\n  GROUP BY ?work\n} AS %result\nWHERE {\n  INCLUDE %result\n  BIND(xsd:date(?datetime) AS ?date)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\". }\n}\nORDER BY DESC(?date)\nLIMIT 500\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/chemical-element_recent-literature.sparql",
      "title": "chemical-element_recent-literature",
      "description": null
    },
    {
      "query_id": "scholia.chemical-index-curation_missing-boiling-points",
      "namespace": "scholia",
      "name": "chemical-index-curation_missing-boiling-points",
      "sparql": "SELECT ?wikis ?compound ?compoundLabel ?formula WITH {\n  SELECT ?wikis ?compound WHERE {\n    ?compound wdt:P31 wd:Q113145171 ;\n              wikibase:sitelinks ?wikis . hint:Prior hint:rangeSafe true .\n    MINUS { ?compound wdt:P2113 [] } # compounds sublimates\n    FILTER(?wikis >= 40)\n    FILTER(NOT EXISTS {?compound wdt:P2102 []})\n  } ORDER BY DESC(?wikis)\n  LIMIT 100\n} AS %CHEMICALS WHERE {\n  INCLUDE %CHEMICALS\n  OPTIONAL { ?compound wdt:P274 ?formula }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY DESC(?wikis)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/chemical-index-curation_missing-boiling-points.sparql",
      "title": "chemical-index-curation_missing-boiling-points",
      "description": null
    },
    {
      "query_id": "scholia.chemical-index-curation_missing-chemical-structure",
      "namespace": "scholia",
      "name": "chemical-index-curation_missing-chemical-structure",
      "sparql": "SELECT ?wikis ?compound ?compoundLabel ?formula WITH {\n  SELECT ?wikis ?compound WHERE {\n    ?compound wdt:P31 wd:Q113145171 ;\n              wikibase:sitelinks ?wikis . hint:Prior hint:rangeSafe true .\n    FILTER(?wikis >= 40)\n    FILTER(NOT EXISTS {?compound wdt:P117 []})\n  } ORDER BY DESC(?wikis)\n  LIMIT 100\n} AS %CHEMICALS WHERE {\n  INCLUDE %CHEMICALS\n  OPTIONAL { ?compound wdt:P274 ?formula }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY DESC(?wikis)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/chemical-index-curation_missing-chemical-structure.sparql",
      "title": "chemical-index-curation_missing-chemical-structure",
      "description": null
    },
    {
      "query_id": "scholia.chemical-index-curation_missing-combustion-enthalpy",
      "namespace": "scholia",
      "name": "chemical-index-curation_missing-combustion-enthalpy",
      "sparql": "SELECT ?wikis ?compound ?compoundLabel ?formula WITH {\n  SELECT ?wikis ?compound WHERE {\n    ?compound wdt:P31 wd:Q113145171 ;\n              wikibase:sitelinks ?wikis . hint:Prior hint:rangeSafe true .\n    FILTER(?wikis >= 40)\n    FILTER(NOT EXISTS {?compound wdt:P2117 []})\n  } ORDER BY DESC(?wikis)\n  LIMIT 100\n} AS %CHEMICALS WHERE {\n  INCLUDE %CHEMICALS\n  OPTIONAL { ?compound wdt:P274 ?formula }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY DESC(?wikis)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/chemical-index-curation_missing-combustion-enthalpy.sparql",
      "title": "chemical-index-curation_missing-combustion-enthalpy",
      "description": null
    },
    {
      "query_id": "scholia.chemical-index-curation_missing-density",
      "namespace": "scholia",
      "name": "chemical-index-curation_missing-density",
      "sparql": "SELECT ?wikis ?compound ?compoundLabel ?formula WITH {\n  SELECT ?wikis ?compound WHERE {\n    ?compound wdt:P31 wd:Q113145171 ;\n              wikibase:sitelinks ?wikis . hint:Prior hint:rangeSafe true .\n    FILTER(?wikis >= 40)\n    FILTER(NOT EXISTS {?compound wdt:P2054 []})\n  } ORDER BY DESC(?wikis)\n  LIMIT 100\n} AS %CHEMICALS WHERE {\n  INCLUDE %CHEMICALS\n  OPTIONAL { ?compound wdt:P274 ?formula }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY DESC(?wikis)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/chemical-index-curation_missing-density.sparql",
      "title": "chemical-index-curation_missing-density",
      "description": null
    },
    {
      "query_id": "scholia.chemical-index-curation_missing-enthalpy-of-formation",
      "namespace": "scholia",
      "name": "chemical-index-curation_missing-enthalpy-of-formation",
      "sparql": "SELECT ?wikis ?compound ?compoundLabel ?formula WITH {\n  SELECT ?wikis ?compound WHERE {\n    ?compound wdt:P31 wd:Q113145171 ;\n              wikibase:sitelinks ?wikis . hint:Prior hint:rangeSafe true .\n    FILTER(?wikis >= 40)\n    FILTER(NOT EXISTS {?compound wdt:P3078 []})\n  } ORDER BY DESC(?wikis)\n  LIMIT 100\n} AS %CHEMICALS WHERE {\n  INCLUDE %CHEMICALS\n  OPTIONAL { ?compound wdt:P274 ?formula }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY DESC(?wikis)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/chemical-index-curation_missing-enthalpy-of-formation.sparql",
      "title": "chemical-index-curation_missing-enthalpy-of-formation",
      "description": null
    },
    {
      "query_id": "scholia.chemical-index-curation_missing-flash-point",
      "namespace": "scholia",
      "name": "chemical-index-curation_missing-flash-point",
      "sparql": "SELECT ?wikis ?compound ?compoundLabel ?formula WITH {\n  SELECT ?wikis ?compound WHERE {\n    ?compound wdt:P31 wd:Q113145171 ;\n              wikibase:sitelinks ?wikis . hint:Prior hint:rangeSafe true .\n    FILTER(?wikis >= 40)\n    FILTER(NOT EXISTS {?compound wdt:P2128 []})\n  } ORDER BY DESC(?wikis)\n  LIMIT 100\n} AS %CHEMICALS WHERE {\n  INCLUDE %CHEMICALS\n  OPTIONAL { ?compound wdt:P274 ?formula }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY DESC(?wikis)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/chemical-index-curation_missing-flash-point.sparql",
      "title": "chemical-index-curation_missing-flash-point",
      "description": null
    },
    {
      "query_id": "scholia.chemical-index-curation_missing-idlh",
      "namespace": "scholia",
      "name": "chemical-index-curation_missing-idlh",
      "sparql": "SELECT ?wikis ?compound ?compoundLabel ?formula WITH {\n  SELECT ?wikis ?compound WHERE {\n    ?compound wdt:P31 wd:Q113145171 ;\n              wikibase:sitelinks ?wikis . hint:Prior hint:rangeSafe true .\n    FILTER(?wikis >= 40)\n    FILTER(NOT EXISTS {?compound wdt:P2129 []})\n  } ORDER BY DESC(?wikis)\n  LIMIT 100\n} AS %CHEMICALS WHERE {\n  INCLUDE %CHEMICALS\n  OPTIONAL { ?compound wdt:P274 ?formula }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY DESC(?wikis)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/chemical-index-curation_missing-idlh.sparql",
      "title": "chemical-index-curation_missing-idlh",
      "description": null
    },
    {
      "query_id": "scholia.chemical-index-curation_missing-mass",
      "namespace": "scholia",
      "name": "chemical-index-curation_missing-mass",
      "sparql": "SELECT ?wikis ?compound ?compoundLabel ?formula WITH {\n  SELECT ?wikis ?compound WHERE {\n    ?compound wdt:P31 wd:Q113145171 ;\n              wikibase:sitelinks ?wikis . hint:Prior hint:rangeSafe true .\n    FILTER(?wikis >= 30)\n    FILTER(NOT EXISTS {?compound wdt:P2067 []})\n  } ORDER BY DESC(?wikis)\n  LIMIT 100\n} AS %CHEMICALS WHERE {\n  INCLUDE %CHEMICALS\n  OPTIONAL { ?compound wdt:P274 ?formula }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY DESC(?wikis)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/chemical-index-curation_missing-mass.sparql",
      "title": "chemical-index-curation_missing-mass",
      "description": null
    },
    {
      "query_id": "scholia.chemical-index-curation_missing-melting-points",
      "namespace": "scholia",
      "name": "chemical-index-curation_missing-melting-points",
      "sparql": "SELECT ?wikis ?compound ?compoundLabel ?formula WITH {\n  SELECT ?wikis ?compound WHERE {\n    ?compound wdt:P31 wd:Q113145171 ;\n              wikibase:sitelinks ?wikis . hint:Prior hint:rangeSafe true .\n    FILTER(?wikis >= 40)\n    FILTER(NOT EXISTS {?compound wdt:P2101 []})\n  } ORDER BY DESC(?wikis)\n  LIMIT 100\n} AS %CHEMICALS WHERE {\n  INCLUDE %CHEMICALS\n  OPTIONAL { ?compound wdt:P274 ?formula }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY DESC(?wikis)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/chemical-index-curation_missing-melting-points.sparql",
      "title": "chemical-index-curation_missing-melting-points",
      "description": null
    },
    {
      "query_id": "scholia.chemical-index-curation_missing-molar-entropy",
      "namespace": "scholia",
      "name": "chemical-index-curation_missing-molar-entropy",
      "sparql": "SELECT ?wikis ?compound ?compoundLabel ?formula WITH {\n  SELECT ?wikis ?compound WHERE {\n    ?compound wdt:P31 wd:Q113145171 ;\n              wikibase:sitelinks ?wikis . hint:Prior hint:rangeSafe true .\n    FILTER(?wikis >= 40)\n    FILTER(NOT EXISTS {?compound wdt:P3071 []})\n  } ORDER BY DESC(?wikis)\n  LIMIT 100\n} AS %CHEMICALS WHERE {\n  INCLUDE %CHEMICALS\n  OPTIONAL { ?compound wdt:P274 ?formula }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY DESC(?wikis)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/chemical-index-curation_missing-molar-entropy.sparql",
      "title": "chemical-index-curation_missing-molar-entropy",
      "description": null
    },
    {
      "query_id": "scholia.chemical-index-curation_missing-pKa",
      "namespace": "scholia",
      "name": "chemical-index-curation_missing-pKa",
      "sparql": "SELECT ?wikis ?compound ?compoundLabel ?formula WITH {\n  SELECT ?wikis ?compound WHERE {\n    ?compound wdt:P31 wd:Q113145171 ;\n              wikibase:sitelinks ?wikis . hint:Prior hint:rangeSafe true .\n    FILTER(?wikis >= 40)\n    FILTER(NOT EXISTS {?compound wdt:P1117 []})\n  } ORDER BY DESC(?wikis)\n  LIMIT 100\n} AS %CHEMICALS WHERE {\n  INCLUDE %CHEMICALS\n  OPTIONAL { ?compound wdt:P274 ?formula }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY DESC(?wikis)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/chemical-index-curation_missing-pKa.sparql",
      "title": "chemical-index-curation_missing-pKa",
      "description": null
    },
    {
      "query_id": "scholia.chemical-index-curation_missing-solubility",
      "namespace": "scholia",
      "name": "chemical-index-curation_missing-solubility",
      "sparql": "SELECT ?wikis ?compound ?compoundLabel ?formula WITH {\n  SELECT ?wikis ?compound WHERE {\n    ?compound wdt:P31 wd:Q113145171 ;\n              wikibase:sitelinks ?wikis . hint:Prior hint:rangeSafe true .\n    FILTER(?wikis >= 40)\n    FILTER(NOT EXISTS {?compound wdt:P2177 []})\n  } ORDER BY DESC(?wikis)\n  LIMIT 100\n} AS %CHEMICALS WHERE {\n  INCLUDE %CHEMICALS\n  OPTIONAL { ?compound wdt:P274 ?formula }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY DESC(?wikis)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/chemical-index-curation_missing-solubility.sparql",
      "title": "chemical-index-curation_missing-solubility",
      "description": null
    },
    {
      "query_id": "scholia.chemical-index-curation_missing-vapor-pressure",
      "namespace": "scholia",
      "name": "chemical-index-curation_missing-vapor-pressure",
      "sparql": "SELECT ?wikis ?compound ?compoundLabel ?formula WITH {\n  SELECT ?wikis ?compound WHERE {\n    ?compound wdt:P31 wd:Q113145171 ;\n              wikibase:sitelinks ?wikis . hint:Prior hint:rangeSafe true .\n    FILTER(?wikis >= 40)\n    FILTER(NOT EXISTS {?compound wdt:P2119 []})\n  } ORDER BY DESC(?wikis)\n  LIMIT 100\n} AS %CHEMICALS WHERE {\n  INCLUDE %CHEMICALS\n  OPTIONAL { ?compound wdt:P274 ?formula }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY DESC(?wikis)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/chemical-index-curation_missing-vapor-pressure.sparql",
      "title": "chemical-index-curation_missing-vapor-pressure",
      "description": null
    },
    {
      "query_id": "scholia.chemical-index_statistics",
      "namespace": "scholia",
      "name": "chemical-index_statistics",
      "sparql": "SELECT\n  (xsd:integer(?count_) AS ?count)\n  (CONCAT(\"Total chemicals with \", ?description_) AS ?description)\nWHERE {\n  BIND(\"haswbstatement:P31=Q113145171|P31=Q59199015\" AS ?constraint)\n  VALUES (?description_ ?property_query_term) {\n    (\"or without stereochemistry\" \"\")\n    (\"fully defined stereochemistry\" \"P31=Q113145171\")\n    (\"undefined stereochemistry\" \"P31=Q59199015\")\n    (\"CAS registry number\" \"P231\")\n    (\"canonical SMILES\" \"P233\")\n    (\"InChI\" \"P234\")\n    (\"InChIKey\" \"P235\")\n    (\"chemical formula\" \"P274\")\n    # (\"ChEMBL ID\" \"P592\") # limit IDs\n    # (\"ChemSpider ID\" \"P661\") # limit IDs\n    (\"PubChem ID\" \"P662\")\n    # (\"KEGG ID\" \"P665\") # limit IDs\n    (\"ChEBI ID\" \"P683\")\n    (\"found in taxon\" \"P703\")\n    (\"isomeric SMILES\" \"P2017\")\n    # (\"ZINC ID\" \"P2084\") # limit IDs\n    (\"crystal structure\" \"haswbstatement:P3636|P11375\")\n    (\"safety classification and labelling\" \"P4952\")\n    (\"mass spectrum\" \"haswbstatement:P4964|P6689|P12472\")\n    # (\"SMARTS notation\" \"P8533\") # not for now\n    (\"NMR spectrum\" \"P9405\")\n    # hacky way to get quantity properties.\n    (\"pKa\" \"linksto:Property:P1117\")\n    (\"mass\" \"linksto:Property:P2067\")\n    (\"solubility\" \"linksto:Property:P2177\")\n    (\"melting point\" \"linksto:Property:P2101\")\n    (\"boiling point\" \"linksto:Property:P2102\")\n    (\"electric dipole moment\" \"linksto:Property:P2201\")\n    (\"ionization energy\" \"linksto:Property:P2260\")\n    # (\"minimum explosive concentration\" \"linksto:Property:P2204\") # safety\n    # (\"time-weighted average exposure limit\" \"linksto:Property:P2404\") # safety\n    # (\"ceiling exposure limit\" \"linksto:Property:P2405\") # safety\n    # (\"maximum peak exposure limit\" \"linksto:Property:P2406\") # safety\n    # (\"short-term exposure limit\" \"linksto:Property:P2407\") # safety\n    # (\"solubility product constant\" \"linksto:Property:P11813\") # less than 5 statements\n  }\n  BIND(CONCAT(?property_query_term, \" \", ?constraint) AS ?search_query)\n  SERVICE wikibase:mwapi {\n    bd:serviceParam wikibase:endpoint \"www.wikidata.org\" ; \n                    wikibase:api \"Search\" ; \n                    wikibase:limit \"once\" ; \n                    mwapi:srsearch ?search_query;\n                    mwapi:srlimit \"1\".\n    ?count_ wikibase:apiOutput \"//searchinfo[1]/@totalhits\".\n  }\n}\nORDER BY DESC(?count)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/chemical-index_statistics.sparql",
      "title": "chemical-index_statistics",
      "description": null
    },
    {
      "query_id": "scholia.chemical_found-in-taxon",
      "namespace": "scholia",
      "name": "chemical_found-in-taxon",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT DISTINCT ?taxon ?taxonLabel (CONCAT(\"/taxon/\", SUBSTR(STR(?taxon), 32)) AS ?taxonUrl)\n?source ?sourceLabel (CONCAT(\"/work/\", SUBSTR(STR(?source), 32)) AS ?sourceUrl)\n?doi WHERE {\n  VALUES ?chemical { target: }\n  ?chemical p:P703 ?taxonStatement .\n  ?taxonStatement ps:P703 ?taxon .\n  OPTIONAL {\n      ?taxonStatement prov:wasDerivedFrom/pr:P248 ?source .\n      OPTIONAL { ?source wdt:P356 ?doi . }\n    }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY ASC(?taxonLabel)\n  LIMIT 250\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/chemical_found-in-taxon.sparql",
      "title": "chemical_found-in-taxon",
      "description": null
    },
    {
      "query_id": "scholia.chemical_identifiers",
      "namespace": "scholia",
      "name": "chemical_identifiers",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n# title: identifiers for this chemical\nSELECT\n  ?Identifier ?IdentifierLabel\n  ?Value (SAMPLE(?idUrls) as ?ValueUrl)\n  ?IdentifierDescription\nWITH {\n  SELECT ?Identifier ?Value ?formatterurl WHERE {\n    target: ?IDdir ?Value .\n    ?Identifier wikibase:directClaim ?IDdir ;\n            wdt:P31 wd:Q19833835 .\n    OPTIONAL { \n      ?Identifier wdt:P1630 ?formatterurl .\n    }\n    FILTER (?Identifier != wd:P233)\n    FILTER (?Identifier != wd:P234)\n    FILTER (?Identifier != wd:P2017)\n  } LIMIT 500\n} AS %RESULTS {\n  { SELECT * WHERE {\n      INCLUDE %RESULTS\n      FILTER (?Identifier = wd:P234)\n      BIND(IRI(REPLACE(?formatterurl, '\\\\\\\\$1', ENCODE_FOR_URI(str(?Value)))) AS ?idUrls).\n    }\n  } UNION {\n    SELECT * WHERE {\n      INCLUDE %RESULTS\n      FILTER (?Identifier != wd:P234)\n      BIND(IRI(REPLACE(?formatterurl, '\\\\\\\\$1', str(?Value))) AS ?idUrls).\n    }\n  }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?Identifier ?IdentifierLabel ?IdentifierDescription ?Value\nORDER BY ASC(?IdentifierLabel)\n\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/chemical_identifiers.sparql",
      "title": "chemical_identifiers",
      "description": null
    },
    {
      "query_id": "scholia.chemical_physchem-properties",
      "namespace": "scholia",
      "name": "chemical_physchem-properties",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n# title: physicochemical properties of this chemical\nSELECT DISTINCT ?propEntity ?propEntityLabel ?value ?units ?unitsLabel ?qualifiers ?source ?sourceLabel ?doi\nWITH {\n  SELECT DISTINCT ?propEntity ?value ?units ?source ?doi (GROUP_CONCAT(?qualifierStr; separator=\", \") AS ?qualifiers) WHERE {\n    target: ?propp ?statement .\n    ?statement a wikibase:BestRank ;\n      ?proppsv [\n        wikibase:quantityAmount ?value ;\n        wikibase:quantityUnit ?units\n      ] .\n    OPTIONAL {\n      ?statement prov:wasDerivedFrom/pr:P248 ?source .\n      OPTIONAL { ?source wdt:P356 ?doi . }\n    }\n    ?property wikibase:claim ?propp ;\n            wikibase:statementValue ?proppsv ;\n            wdt:P1629 ?propEntity ;\n            wdt:P31 wd:Q21077852 .\n    OPTIONAL {\n      {\n        ?qualifierProp wikibase:qualifier ?qualifier ;\n                       rdfs:label ?qProplabel; FILTER (lang(?qProplabel) = \"en\") .\n        ?qualifier a owl:DatatypeProperty .\n        ?statement ?qualifier ?qualifierVal .\n        BIND (CONCAT(str(?qProplabel), \": \", str(?qualifierVal)) AS ?qualifierStr)\n      } UNION {\n        ?qualifierProp wikibase:qualifier ?qualifier ;\n                       rdfs:label ?qProplabel; FILTER (lang(?qProplabel) = \"en\") .\n        ?qualifier a owl:ObjectProperty .\n        ?statement ?qualifier ?qualifierVal .\n        ?qualifierVal rdfs:label ?qVallabel; FILTER (lang(?qVallabel) = \"en\") .\n        BIND (CONCAT(str(?qProplabel), \": \", str(?qVallabel)) AS ?qualifierStr)\n      }\n    }\n  } GROUP BY ?propEntity ?value ?units ?source ?doi\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} \nORDER BY ASC(?propEntityLabel)\n\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/chemical_physchem-properties.sparql",
      "title": "chemical_physchem-properties",
      "description": null
    },
    {
      "query_id": "scholia.chemical_publications-per-year",
      "namespace": "scholia",
      "name": "chemical_publications-per-year",
      "sparql": "#defaultView:BarChart\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n# title: publications per year for this chemical\n# Inspired from LEGOLAS - http://abel.lis.illinois.edu/legolas/\n# Shubhanshu Mishra, Vetle Torvik\nselect ?year (count(?work) as ?number_of_publications) where {\n  {\n    select (str(?year_) as ?year) (0 as ?pages) where {\n      # default values = 0\n      ?year_item wdt:P31 wd:Q577 . \n      ?year_item wdt:P585 ?date .\n      bind(year(?date) as ?year_)\n      {\n        select (min(?year_) as ?earliest_year) where {\n          { ?work wdt:P921/wdt:P31*/wdt:P279* target: . }\n          union { ?work wdt:P921/(^wdt:P361)+ target: . }\n          union { ?work wdt:P921/wdt:P1269+ target: . }\n          union { target: ?propp ?statement .\n                  ?statement a wikibase:BestRank ;\n                             prov:wasDerivedFrom/pr:P248 ?work . }\n          ?work wdt:P577 ?publication_date . \n          bind(year(?publication_date) as ?year_)\n        }\n      }\n      bind(year(now()) as ?next_year)\n      filter (?year_ >= ?earliest_year && ?year_ <= ?next_year)\n    }\n  }\n  union {\n    select ?work (min(?years) as ?year) where {\n      { ?work wdt:P921/wdt:P31*/wdt:P279* target: . }\n      union { ?work wdt:P921/wdt:P527+ target: . }\n      union { ?work wdt:P921/wdt:P1269+ target: . }\n      union { target: ?propp ?statement .\n              ?statement a wikibase:BestRank ;\n                         prov:wasDerivedFrom/pr:P248 ?work . }\n      ?work wdt:P577 ?dates .\n      bind(str(year(?dates)) as ?years) .\n    }\n    group by ?work \n  }\n}\ngroup by ?year \norder by ?year\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/chemical_publications-per-year.sparql",
      "title": "chemical_publications-per-year",
      "description": null
    },
    {
      "query_id": "scholia.chemical_recent-literature",
      "namespace": "scholia",
      "name": "chemical_recent-literature",
      "sparql": "# title: recent literature about this chemical\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?date ?work ?workLabel ?type ?via ?topics\nWITH {\n  SELECT DISTINCT ?work  ?via ?topic WHERE {\n    { VALUES ?topic { target:}\n      ?work wdt:P921 ?topic . BIND (\"main topic\" AS ?via) }\n    UNION\n    { ?work wdt:P921 ?topic . ?topic ((^wdt:P361)+) target: . BIND (\"part\" AS ?via) }\n    UNION\n    { ?work wdt:P921 ?topic . ?topic (wdt:P31* / wdt:P279* ) target: . BIND (\"subclass\" AS ?via). FILTER (?topic != target:) }\n    UNION\n    { ?work wdt:P921 ?topic . ?topic (wdt:P1269+ ) target: . BIND (\"facet\" AS ?via)}\n    UNION\n    {\n      target: ?propp ?statement .\n      ?statement a wikibase:BestRank ;\n                 prov:wasDerivedFrom/pr:P248 ?work .\n      BIND (\"statement\" AS ?via)\n    }\n  }\n} AS %works\nWITH {\n  SELECT (MAX(?dates) as ?datetime) ?work (GROUP_CONCAT(DISTINCT ?type_label; separator=\", \") AS ?type) ?via (GROUP_CONCAT(DISTINCT ?topic_label; separator=\" // \") AS ?topics) WHERE {\n    INCLUDE %works\n    ?work wdt:P921 ?topic . \n    OPTIONAL { ?work wdt:P31 ?type_ . ?type_ rdfs:label ?type_label . FILTER (LANG(?type_label) = 'en') }\n    OPTIONAL { ?work wdt:P577 ?dates . }\n    ?topic rdfs:label ?topic_label .  FILTER (lang(?topic_label) = 'en')\n  }\n  GROUP BY ?work ?via\n} AS %result\nWHERE {\n  INCLUDE %result\n  BIND(xsd:date(?datetime) AS ?date)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\". }\n}\nORDER BY DESC(?date)\nLIMIT 500\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/chemical_recent-literature.sparql",
      "title": "chemical_recent-literature",
      "description": null
    },
    {
      "query_id": "scholia.chemical_related",
      "namespace": "scholia",
      "name": "chemical_related",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n# title: related chemical structures\nSELECT ?mol ?molLabel ?InChIKey ?CAS ?ChemSpider ?PubChem_CID WITH {\n  SELECT ?queryKey ?srsearch ?filter WHERE {\n    target: wdt:P235 ?queryKey .\n    BIND (CONCAT(substr($queryKey,1,14), \" haswbstatement:P235\") AS ?srsearch)\n    BIND (CONCAT(\"^\", substr($queryKey,1,14)) AS ?filter)\n  }\n} AS %MOLS WITH {\n  SELECT ?mol ?InChIKey WHERE {\n    INCLUDE %MOLS\n    SERVICE wikibase:mwapi {\n        bd:serviceParam wikibase:endpoint \"www.wikidata.org\";\n        wikibase:api \"Search\";\n        mwapi:srsearch ?srsearch;\n        mwapi:srlimit \"max\".\n        ?mol wikibase:apiOutputItem mwapi:title.\n      }\n    ?mol wdt:P235 ?InChIKey .\n    FILTER (regex(str(?InChIKey), ?filter))\n    FILTER (?InChIKey != ?queryKey)\n  }\n} AS %MOLS2 {\n  INCLUDE %MOLS2\n  OPTIONAL { ?mol wdt:P231 ?CAS }\n  OPTIONAL { ?mol wdt:P661 ?ChemSpider }\n  OPTIONAL { ?mol wdt:P662 ?PubChem_CID }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/chemical_related.sparql",
      "title": "chemical_related",
      "description": null
    },
    {
      "query_id": "scholia.chemical_relates",
      "namespace": "scholia",
      "name": "chemical_relates",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n# title: related chemical structures\nSELECT ?mol ?molLabel ?InChIKey ?CAS ?ChemSpider ?PubChem_CID WHERE {\n  target: wdt:P235 ?queryKey .\n  ?mol wdt:P235 ?InChIKey .\n  OPTIONAL { ?mol wdt:P231 ?CAS }\n  OPTIONAL { ?mol wdt:P661 ?ChemSpider }\n  OPTIONAL { ?mol wdt:P662 ?PubChem_CID }\n  FILTER (regex(str(?InChIKey), concat(\"^\", substr($queryKey,1,14), \"-\")))\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/chemical_relates.sparql",
      "title": "chemical_relates",
      "description": null
    },
    {
      "query_id": "scholia.chemical_structural-identifiers",
      "namespace": "scholia",
      "name": "chemical_structural-identifiers",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n# title: structural identifiers for this chemical structure\nSELECT\n  ?Structural_identifier ?Structural_identifierLabel\n  ?idLit (SAMPLE(?idUrls) as ?idUrl)\nWITH {\n  SELECT ?Structural_identifier ?idLit ?formatterurl WHERE {\n    VALUES ?Structural_identifier { wd:P233 wd:P234 wd:P2017 }\n    target: ?IDdir ?idLit .\n    ?Structural_identifier wikibase:directClaim ?IDdir ;\n            wdt:P31 wd:Q19833835 .\n    OPTIONAL {\n      ?Structural_identifier wdt:P1630 ?formatterurl .\n    }\n  } LIMIT 500\n} AS %RESULTS {\n  INCLUDE %RESULTS\n  BIND(IRI(REPLACE(?formatterurl, '\\\\\\\\$1', str(?idLit))) AS ?idUrls).\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?Structural_identifier ?Structural_identifierLabel ?idLit\nORDER BY ASC(?ID_TypeLabel)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/chemical_structural-identifiers.sparql",
      "title": "chemical_structural-identifiers",
      "description": null
    },
    {
      "query_id": "scholia.cito-index_article-counts",
      "namespace": "scholia",
      "name": "cito-index_article-counts",
      "sparql": "SELECT ?intention ?intentionLabel (CONCAT(\"/cito/\", SUBSTR(STR(?intention), 32)) AS ?intentionUrl)\n(COUNT(DISTINCT ?citationStatement) AS ?citations) \n(COUNT(DISTINCT ?citingArticle) AS ?articles) WHERE {\n  ?citingArticle p:P2860 ?citationStatement .\n  ?citationStatement pq:P3712 ?intention ;\n                     ps:P2860 ?citedArticle .\n  ?intention wdt:P31 wd:Q96471816 ;\n             wdt:P2888 ?cito .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?cito ?intention ?intentionLabel\n  ORDER BY DESC(?citations)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/cito-index_article-counts.sparql",
      "title": "cito-index_article-counts",
      "description": null
    },
    {
      "query_id": "scholia.cito-index_articles-by-year",
      "namespace": "scholia",
      "name": "cito-index_articles-by-year",
      "sparql": "#defaultView:BarChart\nselect ?year (count(?work) as ?number_of_publications) ?role where {\n  {\n    select ?work (min(?years) as ?year) ?type_ ?venue where {\n      ?work wdt:P577 ?dates ;\n            p:P2860 ?citesStatement .\n      ?citesStatement pq:P3712 / wdt:P31 wd:Q96471816 .\n      bind(str(year(?dates)) as ?years) .\n      OPTIONAL {\n        ?work wdt:P31 wd:Q109229154 . bind(\"explicit\" as ?type_)\n        ?work wdt:P1433 ?venue_ . ?venue_ rdfs:label ?venue . FILTER (LANG(?venue) = \"en\")\n        MINUS { ?venue_ wdt:P31 wd:Q1143604 }\n      }\n      OPTIONAL {\n        bind(\"nanopub\" as ?type_) bind(\"Nanopublication\" as ?venue)\n        ?citesStatement prov:wasDerivedFrom ?reference .\n        ?reference pr:P854 | pr:P12545 ?referenceURL .\n        FILTER (\n          strstarts(str(?referenceURL), \"https://w3id.org/np/\") ||\n          strstarts(str(?referenceURL), \"http://purl.org/np/\")\n        )\n      }\n    }\n    group by ?work ?type_ ?venue\n  }\n  bind(\n    coalesce(\n      if(bound(?type_), ?venue,\n      'other source')\n    ) as ?role\n  )\n}\ngroup by ?year ?role\norder by ?year\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/cito-index_articles-by-year.sparql",
      "title": "cito-index_articles-by-year",
      "description": null
    },
    {
      "query_id": "scholia.cito-index_cited-journal-counts",
      "namespace": "scholia",
      "name": "cito-index_cited-journal-counts",
      "sparql": "SELECT ?citedJournal ?citedJournalLabel (CONCAT(\"/venue/\", SUBSTR(STR(?citedJournal), 32), \"#cito\") AS ?journalUrl)\n(COUNT(DISTINCT ?citationStatement) AS ?citations) \n(COUNT(DISTINCT ?citedArticle) AS ?articles) WHERE {\n  ?citingArticle p:P2860 ?citationStatement .\n  ?citationStatement pq:P3712 ?intention ;\n                     ps:P2860 ?citedArticle .\n  ?citedArticle wdt:P1433 ?citedJournal .\n  ?intention wdt:P31 wd:Q96471816 .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?citedJournal ?citedJournalLabel\n  ORDER BY DESC(?citations)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/cito-index_cited-journal-counts.sparql",
      "title": "cito-index_cited-journal-counts",
      "description": null
    },
    {
      "query_id": "scholia.cito-index_journal-counts",
      "namespace": "scholia",
      "name": "cito-index_journal-counts",
      "sparql": "SELECT ?journal ?journalLabel (CONCAT(\"/venue/\", SUBSTR(STR(?journal), 32), \"#cito\") AS ?journalUrl)\n(COUNT(DISTINCT ?citationStatement) AS ?citations) \n(COUNT(DISTINCT ?citingArticle) AS ?articles) WHERE {\n  ?citingArticle p:P2860 ?citationStatement ;\n                 wdt:P1433 ?journal .\n  ?citationStatement pq:P3712 ?intention ;\n                     ps:P2860 ?citedArticle .\n  ?intention wdt:P31 wd:Q96471816 .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?journal ?journalLabel\n  ORDER BY DESC(?citations)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/cito-index_journal-counts.sparql",
      "title": "cito-index_journal-counts",
      "description": null
    },
    {
      "query_id": "scholia.cito-index_recent-articles",
      "namespace": "scholia",
      "name": "cito-index_recent-articles",
      "sparql": "select distinct ?date ?work ?workLabel ?venue ?venueLabel where {\n  ?work wdt:P577 ?dates ;\n        p:P2860 / pq:P3712 / wdt:P31 wd:Q96471816 .\n  BIND(xsd:date(?dates) AS ?date)\n  ?work wdt:P31 wd:Q109229154 . bind(\"explicit\" as ?type_)\n  ?work wdt:P1433 ?venue .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} ORDER BY DESC(?date)\n  LIMIT 50\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/cito-index_recent-articles.sparql",
      "title": "cito-index_recent-articles",
      "description": null
    },
    {
      "query_id": "scholia.cito-index_statistics",
      "namespace": "scholia",
      "name": "cito-index_statistics",
      "sparql": "SELECT ?count ?description\nWITH {\n  SELECT (COUNT(DISTINCT ?citationStatement) AS ?count) WHERE { [] p:P2860 ?citationStatement . ?citationStatement pq:P3712 / wdt:P31 wd:Q96471816 . }\n} AS %annotedCitations\nWITH {\n  SELECT (COUNT(*) AS ?count) WHERE { [] p:P2860 ?citationStatement . ?citationStatement pq:P3712 / wdt:P31 wd:Q96471816 . }\n} AS %annotions\nWITH {\n  SELECT (COUNT(DISTINCT ?citingArticle) AS ?count) WHERE { ?citingArticle p:P2860 / pq:P3712 / wdt:P31 wd:Q96471816 . }\n} AS %annotedCitingArticles\nWITH {\n  SELECT (COUNT(DISTINCT ?citedArticle) AS ?count) WHERE {\n    ?citingArticle p:P2860 ?citationStatement .\n    ?citationStatement pq:P3712 / wdt:P31 wd:Q96471816 ;\n                       ps:P2860 ?citedArticle .\n  }\n} AS %annotedCitedArticles\nWITH {\n  SELECT (COUNT(DISTINCT ?venue) AS ?count) WHERE {\n    ?citingArticle p:P2860 / pq:P3712 / wdt:P31 wd:Q96471816 ;\n                   wdt:P1433 ?venue .\n  }\n} AS %citoJournals\nWITH {\n  SELECT (COUNT(DISTINCT ?venue) AS ?count) WHERE {\n    ?citingArticle p:P2860 ?citationStatement .\n    ?citationStatement pq:P3712 / wdt:P31 wd:Q96471816 ;\n                       ps:P2860 ?citedArticle .\n    ?citedArticle wdt:P1433 ?venue .\n  }\n} AS %citedJournals\nWITH {\n  SELECT (COUNT(DISTINCT ?citoArticle) AS ?count) WHERE {\n    ?citoArticle wdt:P31 wd:Q109229154 .\n  }\n} AS %citoArticles\nWITH {\n  SELECT (COUNT(DISTINCT ?venue) AS ?count) WHERE {\n    ?citoArticle wdt:P31 wd:Q109229154 ;\n                 wdt:P1433 ?venue .\n  }\n} AS %citoJournalsExplicit\nWITH {\n  SELECT (COUNT(DISTINCT ?citoDataset) AS ?count) WHERE {\n    ?citoDataset wdt:P31 wd:Q117357566 .\n  }\n} AS %citoDatasets\nWITH {\n  SELECT (COUNT(DISTINCT ?citationStatement) AS ?count) WHERE {\n    ?citoNanopub p:P2860 ?citationStatement .\n    ?citationStatement pq:P3712 / wdt:P31 wd:Q96471816 ;\n      prov:wasDerivedFrom / ( pr:P854 | pr:P12545 ) ?referenceURL .\n    FILTER (\n      strstarts(str(?referenceURL), \"https://w3id.org/np/\") ||\n      strstarts(str(?referenceURL), \"http://purl.org/np/\")\n    )\n  }\n} AS %citoCitationFromNanopubs\nWITH {\n  SELECT (COUNT(DISTINCT ?referenceURL) AS ?count) WHERE {\n    ?citoNanopub p:P2860 ?citationStatement .\n    ?citationStatement pq:P3712 / wdt:P31 wd:Q96471816 ;\n      prov:wasDerivedFrom / ( pr:P854 | pr:P12545 ) ?referenceURL .\n    FILTER (\n      strstarts(str(?referenceURL), \"https://w3id.org/np/\") ||\n      strstarts(str(?referenceURL), \"http://purl.org/np/\")\n    )\n  }\n} AS %citoNanopubs\nWITH {\n  SELECT (COUNT(DISTINCT ?citoNanopub) AS ?count) WHERE {\n    ?citoNanopub p:P2860 ?citationStatement .\n    ?citationStatement pq:P3712 / wdt:P31 wd:Q96471816 ;\n      prov:wasDerivedFrom / ( pr:P854 | pr:P12545 ) ?referenceURL .\n    FILTER (\n      strstarts(str(?referenceURL), \"https://w3id.org/np/\") ||\n      strstarts(str(?referenceURL), \"http://purl.org/np/\")\n    )\n  }\n} AS %artsWithcitoNanopubs\nWHERE {\n  {\n    INCLUDE %annotions\n    BIND(\"Total number of annotations\" AS ?description)\n  }\n  UNION\n  {\n    INCLUDE %annotedCitations\n    BIND(\"Total number of annotated citations\" AS ?description)\n  }\n  UNION\n  {\n    INCLUDE %annotedCitingArticles\n    BIND(\"Total number of articles providing annotated citations\" AS ?description)\n  }\n  UNION\n  {\n    INCLUDE %annotedCitedArticles\n    BIND(\"Total number of articles receiving annotated citations\" AS ?description)\n  }\n  UNION\n  {\n    INCLUDE %citoJournals\n    BIND(\"Number of citing venues with annotated citations\" AS ?description)\n  }\n  UNION\n  {\n    INCLUDE %citedJournals\n    BIND(\"Number of cited venues with annotated citations\" AS ?description)\n  }\n  UNION\n  {\n    INCLUDE %citoArticles\n    BIND(\"Number of articles with explicit CiTO annotation\" AS ?description)\n  }\n  UNION\n  {\n    INCLUDE %citoDatasets\n    BIND(\"Number of data sets with explicit CiTO annotation\" AS ?description)\n  }\n  UNION\n  {\n    INCLUDE %citoJournalsExplicit\n    BIND(\"Number of venues with explicit CiTO annotation\" AS ?description)\n  }\n  UNION\n  {\n    INCLUDE %citoCitationFromNanopubs\n    BIND(\"Number of annotations defined in nanopublications\" AS ?description)\n  }\n  UNION\n  {\n    INCLUDE %artsWithcitoNanopubs\n    BIND(\"Number of articles with annotations defined in nanopublications\" AS ?description)\n  }\n  UNION\n  {\n    INCLUDE %citoNanopubs\n    BIND(\"Number of nanopublications that define explicit CiTO annotations\" AS ?description)\n  }\n}\nORDER BY DESC(?count)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/cito-index_statistics.sparql",
      "title": "cito-index_statistics",
      "description": null
    },
    {
      "query_id": "scholia.cito_articles-by-year",
      "namespace": "scholia",
      "name": "cito_articles-by-year",
      "sparql": "#defaultView:BarChart\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT (STR(?year_) AS ?year) (SUM(?count_) AS ?count)\nWHERE {\n  {\n    VALUES ?year_ { 2000 2001 2002 2003 2004 2005 2006 2007 2008 2009\n                   2010 2011 2012 2013 2014 2015 2016 2017 2018 2019 }\n    BIND(0 AS ?count_)\n  }\n  UNION \n  {\n    SELECT\n      ?year_\n      (COUNT(DISTINCT ?citing_work) AS ?count_)\n      ?kind\n    WHERE {\n      VALUES ?INTENTION { target: }\n      ?citing_work wdt:P2860 ?citedArticle ;\n        p:P2860/pq:P3712 ?INTENTION .\n\n      # Year of citation\n      ?citing_work wdt:P577 ?date .\n      BIND(YEAR(?date) AS ?year_)\n    }\n    GROUP BY ?year_ ?kind\n  }\n}\nGROUP BY ?year_\nORDER BY DESC(?year_) \n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/cito_articles-by-year.sparql",
      "title": "cito_articles-by-year",
      "description": null
    },
    {
      "query_id": "scholia.cito_articles",
      "namespace": "scholia",
      "name": "cito_articles",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT (COUNT(?citingArticle) AS ?count) \n?citedArticle ?citedArticleLabel (CONCAT(\"/work/\", SUBSTR(STR(?citedArticle), 32)) AS ?citedArticleUrl) WHERE {\n  VALUES ?INTENTION { target: }\n  ?citingArticle p:P2860 ?citationStatement .\n  ?citationStatement ps:P2860 ?citedArticle ;\n                     pq:P3712 ?INTENTION .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?citedArticle ?citedArticleLabel\n  ORDER BY DESC(?count)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/cito_articles.sparql",
      "title": "cito_articles",
      "description": null
    },
    {
      "query_id": "scholia.cito_journals",
      "namespace": "scholia",
      "name": "cito_journals",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT (COUNT(DISTINCT ?citingArticle) AS ?count) \n?journal ?journalLabel (CONCAT(\"/venue/\", SUBSTR(STR(?journal), 32)) AS ?journalUrl) WHERE {\n  VALUES ?INTENTION { target: }\n  ?citingArticle p:P2860 ?citationStatement ;\n                 wdt:P1433 ?journal .\n  ?citationStatement pq:P3712 ?INTENTION .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?journal ?journalLabel\n  ORDER BY DESC(?count)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/cito_journals.sparql",
      "title": "cito_journals",
      "description": null
    },
    {
      "query_id": "scholia.clinical-trial-index_interventions",
      "namespace": "scholia",
      "name": "clinical-trial-index_interventions",
      "sparql": "SELECT\n  ?count\n  ?intervention ?interventionLabel\n  ?as_chemical ?as_chemicalLabel\n  ?example_trial ?example_trialLabel\n WHERE {\n  {\n    SELECT\n      (COUNT(?trial) AS ?count)\n      ?intervention\n      (SAMPLE(?trial) AS ?example_trial)\n    WHERE {\n      ?trial wdt:P31 wd:Q30612 .\n      ?trial wdt:P4844 ?intervention\n    }\n    GROUP BY ?intervention\n    ORDER BY DESC(?count)\n    LIMIT 500\n  }\n  BIND(IF(EXISTS { ?intervention wdt:P31 wd:Q11173 }, ?intervention, \"\") AS ?as_chemical) \n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,pl,ru,sv,zh\". }\n}\nORDER BY DESC(?count)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/clinical-trial-index_interventions.sparql",
      "title": "clinical-trial-index_interventions",
      "description": null
    },
    {
      "query_id": "scholia.clinical-trial-index_medical-conditions",
      "namespace": "scholia",
      "name": "clinical-trial-index_medical-conditions",
      "sparql": "SELECT\n  ?count\n  ?medical_condition ?medical_conditionLabel (CONCAT(\"/disease/\", SUBSTR(STR(?medical_condition), 32)) AS ?medical_conditionUrl)\n  ?example_trial ?example_trialLabel\nWHERE {\n  {\n    SELECT\n      (COUNT(?trial) AS ?count)\n      ?medical_condition\n      (SAMPLE(?trial) AS ?example_trial)\n    WHERE {\n      ?trial wdt:P31 wd:Q30612 .\n      ?trial wdt:P1050 ?medical_condition\n    }\n    GROUP BY ?medical_condition\n    ORDER BY DESC(?count)\n    LIMIT 500\n  }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,pl,ru,sv,zh\". }\n}\nORDER BY DESC(?count)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/clinical-trial-index_medical-conditions.sparql",
      "title": "clinical-trial-index_medical-conditions",
      "description": null
    },
    {
      "query_id": "scholia.clinical-trial-index_phases",
      "namespace": "scholia",
      "name": "clinical-trial-index_phases",
      "sparql": "#defaultView:BarChart\nSELECT\n  (STR(?year_) AS ?year)\n  ?count\n  ?phase ?phaseLabel\nWHERE {\n  { \n    SELECT\n      ?year_\n      (COUNT(*) AS ?count)\n      ?phase\n    WHERE {\n      ?trial wdt:P6099 ?phase .\n      ?trial wdt:P580 ?start_datetime .\n      BIND(YEAR(?start_datetime) AS ?year_) \n    }\n    GROUP BY ?year_ ?phase\n  }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\". }\n}",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/clinical-trial-index_phases.sparql",
      "title": "clinical-trial-index_phases",
      "description": null
    },
    {
      "query_id": "scholia.clinical-trial-index_recent-clinical-trials",
      "namespace": "scholia",
      "name": "clinical-trial-index_recent-clinical-trials",
      "sparql": "# title: Clinical trials sorted according to date\nSELECT ?start_date ?trial ?trialLabel\nWITH {\n  SELECT * WHERE { \n    ?trial wdt:P31 wd:Q30612 .\n    ?trial wdt:P580 ?start_datetime .\n    hint:Prior hint:rangeSafe true .\n  }\n  ORDER BY DESC(?start_datetime)\n  LIMIT 500\n} AS %trials\nWHERE {\n  INCLUDE %trials\n  BIND(xsd:date(?start_datetime) AS ?start_date)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,da,de,es,fr,jp,nl,no,ru,sv,zh\". }\n}\nORDER BY DESC(?start_datetime)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/clinical-trial-index_recent-clinical-trials.sparql",
      "title": "clinical-trial-index_recent-clinical-trials",
      "description": null
    },
    {
      "query_id": "scholia.clinical-trial-index_statistics",
      "namespace": "scholia",
      "name": "clinical-trial-index_statistics",
      "sparql": "SELECT ?count ?description\nWHERE {\n  {\n    { SELECT (COUNT(*) AS ?count) WHERE { [] wdt:P31 wd:Q30612 . } }\n    BIND(\"Number of clinical trials\" AS ?description)\n  }\n  UNION\n  {\n    { SELECT (COUNT(*) AS ?count) WHERE { [] wdt:P3098 [] . } }\n    BIND(\"Links to ClinicalTrials.gov\" AS ?description)\n  }\n  UNION\n  {\n    { SELECT (COUNT(*) AS ?count) WHERE { [] wdt:P6099 [] . } }\n    BIND(\"Number of clinical trial phases links\" AS ?description)\n  }\n  UNION\n  {\n    { SELECT (COUNT(*) AS ?count) WHERE { [] wdt:P6220 [] . } }\n    BIND(\"Links to OpenTrials\" AS ?description)\n  }\n}\nORDER BY DESC(?count)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/clinical-trial-index_statistics.sparql",
      "title": "clinical-trial-index_statistics",
      "description": null
    },
    {
      "query_id": "scholia.clinical-trial_data",
      "namespace": "scholia",
      "name": "clinical-trial_data",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?description ?value ?valueUrl\nWHERE {\n  BIND(target: AS ?trial)\n  {\n    BIND(1 AS ?order)\n    BIND(\"Title\" AS ?description)\n    ?trial wdt:P1476 ?value .\n  }\n  UNION\n  {\n    BIND(10 AS ?order)\n    BIND(\"Number of participants\" AS ?description)\n    ?trial wdt:P1132 ?value .\n  }\n  UNION\n  {\n    BIND(11 AS ?order)\n    BIND(\"Clinical trial phase\" AS ?description)\n    ?trial wdt:P6099 ?iri .\n\n    BIND(SUBSTR(STR(?iri), 32) AS ?q) \n    ?iri rdfs:label ?value_string . \n    FILTER (LANG(?value_string) = 'en')\n    BIND(COALESCE(?value_string, ?q) AS ?value)\n    BIND(CONCAT(\"../topic/\", ?q) AS ?valueUrl)\n  }\n  UNION\n  {\n    BIND(12 AS ?order)\n    BIND(\"Medical condition\" AS ?description)\n    ?trial wdt:P1050 ?iri .\n\n    BIND(SUBSTR(STR(?iri), 32) AS ?q) \n    ?iri rdfs:label ?value_string . \n    FILTER (LANG(?value_string) = 'en')\n    BIND(COALESCE(?value_string, ?q) AS ?value)\n    BIND(CONCAT(\"../disease/\", ?q) AS ?valueUrl)\n  }\n  UNION\n  {\n    BIND(13 AS ?order)\n    BIND(\"Research intervention\" AS ?description)\n    ?trial wdt:P4844 ?iri .\n\n    BIND(SUBSTR(STR(?iri), 32) AS ?q) \n    ?iri rdfs:label ?value_string . \n    FILTER (LANG(?value_string) = 'en')\n    BIND(COALESCE(?value_string, ?q) AS ?value)\n    BIND(CONCAT(\"../topic/\", ?q) AS ?valueUrl)\n  }\n  UNION\n  {\n    BIND(20 AS ?order)\n    BIND(\"Sponsor\" AS ?description)\n    ?trial wdt:P859 ?iri .\n\n    BIND(SUBSTR(STR(?iri), 32) AS ?q) \n    ?iri rdfs:label ?value_string . \n    FILTER (LANG(?value_string) = 'en')\n    BIND(COALESCE(?value_string, ?q) AS ?value)\n    BIND(CONCAT(\"../sponsor/\", ?q) AS ?valueUrl)\n  }\n\n  UNION\n  {\n    BIND(100 AS ?order)\n    BIND(\"ClinicalTrials.gov\" AS ?description)\n    ?trial wdt:P3098 ?value_ .\n    BIND(CONCAT(?value_, \" \u2197\") AS ?value)\n    BIND(CONCAT(\"https://clinicaltrials.gov/show/\", ?value_) AS ?valueUrl)\n  }\n\n  UNION\n  {\n    BIND(101 AS ?order)\n    BIND(\"ClinWiki\" AS ?description)\n    ?trial wdt:P3098 ?value_ .\n    BIND(CONCAT(?value_, \" \u2197\") AS ?value)\n    BIND(CONCAT(\"https://www.clinwiki.org/study/\", ?value_) AS ?valueUrl)\n  }\n\n  UNION\n  {\n    BIND(103 AS ?order)\n    BIND(\"OpenTrials\" AS ?description)\n    ?trial wdt:P6220 ?value_ .\n    BIND(CONCAT(?value_, \" \u2197\") AS ?value)\n    BIND(CONCAT(\"https://explorer.opentrials.net/trials/\", ?value_) AS ?valueUrl)\n  }\n\n} \nORDER BY ?order",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/clinical-trial_data.sparql",
      "title": "clinical-trial_data",
      "description": null
    },
    {
      "query_id": "scholia.clinical-trial_related-trials",
      "namespace": "scholia",
      "name": "clinical-trial_related-trials",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?score\n  ?trial ?trialLabel\nWHERE {\n  {\n    SELECT\n      (SUM(?score_) AS ?score)\n      ?trial\n    WHERE {\n      BIND(target: AS ?query_trial)\n      ?trial wdt:P31 wd:Q30612 .\n      { \n        ?query_trial wdt:P1050 / ^wdt:P1050 ?trial .\n        BIND(3 AS ?score_)\n      }\n      UNION \n      {\n        ?query_trial wdt:P4844 / ^wdt:P4844 ?trial .\n        BIND(2 AS ?score_)        \n      }\n      UNION \n      {\n        ?query_trial wdt:P859 / ^wdt:P859 ?trial .\n        BIND(1 AS ?score_)        \n      }\n    }\n    GROUP BY ?trial\n    ORDER BY DESC(?score)\n    LIMIT 500\n  }\n  FILTER (target: != ?trial)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,pl,ru,sv,zh\". }\n}\nORDER BY DESC(?score)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/clinical-trial_related-trials.sparql",
      "title": "clinical-trial_related-trials",
      "description": null
    },
    {
      "query_id": "scholia.complex-index_statistics",
      "namespace": "scholia",
      "name": "complex-index_statistics",
      "sparql": "SELECT ?count ?description\nWITH {\n  SELECT (COUNT(*) AS ?count) WHERE { [] wdt:P31/wdt:P279* wd:Q22325163 ; wdt:P7718 []. }\n} AS %complexportal\nWITH {\n  SELECT (COUNT(*) AS ?count) WHERE { [] wdt:P31/wdt:P279* wd:Q22325163 ; wdt:P3937 []. }\n} AS %reactome\nWHERE {\n  {\n    INCLUDE %complexportal\n    BIND(\"Total number of Complex Portal complexes\" AS ?description)\n  }\n  UNION\n  {\n    INCLUDE %reactome\n    BIND(\"Total number of Reactome complexes\" AS ?description)\n  }\n}\nORDER BY DESC(?count)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/complex-index_statistics.sparql",
      "title": "complex-index_statistics",
      "description": null
    },
    {
      "query_id": "scholia.complex_articles-by-year",
      "namespace": "scholia",
      "name": "complex_articles-by-year",
      "sparql": "#defaultView:BarChart\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  (STR(?year_) AS ?year)\n  (COUNT(?work) AS ?number_of_publications)\n\n  # Work type used to color the bar chart\n  ?type\nWITH {\n  # Find works with the topic. Also report the year\n  SELECT\n    ?work (MIN(?years) AS ?year_) (1 AS ?dummy) (SAMPLE(?article_type_) AS ?article_type)\n  WHERE {\n    VALUES ?complex { target: }\n    ?work wdt:P921 / (wdt:P31*/wdt:P279* | wdt:P361+ | wdt:P1269+) ?complex .\n    ?work wdt:P577 ?dates .\n    BIND(YEAR(?dates) AS ?years) .\n\n    ?work wdt:P31 ?article_type_ .\n  }\n  GROUP BY ?work \n} AS %works\nWITH {\n  SELECT ?year_ WHERE {\n    # default values = 0\n    ?year_item wdt:P31 wd:Q577 . \n    ?year_item wdt:P585 ?date .\n    BIND(YEAR(?date) AS ?year_)\n  }\n} AS %default_counts\nWITH {\n  # Find earliest publication year\n  SELECT (MIN(?year_) AS ?earliest_year) WHERE {\n    INCLUDE %works\n  }\n  GROUP BY ?dummy\n} AS %earliest  \nWHERE {\n  {\n    INCLUDE %works\n    ?article_type rdfs:label ?type . FILTER (LANG(?type) = \"en\")\n  }\n  UNION\n  {\n    INCLUDE %default_counts\n    BIND(\"_\" AS ?type)\n  }\n  INCLUDE %earliest\n  BIND(YEAR(NOW()) AS ?this_year)\n  FILTER (?year_ >= ?earliest_year && ?year_ <= ?this_year && ?year_ >= YEAR(\"1900-01-01\"^^xsd:dateTime))\n}\nGROUP BY ?year_ ?type\nORDER BY ?year\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/complex_articles-by-year.sparql",
      "title": "complex_articles-by-year",
      "description": null
    },
    {
      "query_id": "scholia.complex_articles-recent",
      "namespace": "scholia",
      "name": "complex_articles-recent",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?date ?work ?workLabel \n  ?topicsUrl ?topics \nWITH {\n  SELECT DISTINCT ?work WHERE {\n    VALUES ?complex { target: }\n    ?work wdt:P921 / (wdt:P361+ | wdt:P1269+ | (wdt:P31* / wdt:P279*) ) ?complex .\n  }\n} AS %works\nWITH {\n  SELECT (MAX(?dates) as ?datetime) ?work (GROUP_CONCAT(DISTINCT ?topic_label; separator=\" // \") AS ?topics) \n                                    (CONCAT(\"../topics/\", GROUP_CONCAT(DISTINCT SUBSTR(STR(?topic), 32); separator=\",\")) AS ?topicsUrl) \n  WHERE {\n    INCLUDE %works\n    ?work wdt:P921 ?topic . \n    OPTIONAL { ?work wdt:P577 ?dates . }\n    ?topic rdfs:label ?topic_label .  FILTER (lang(?topic_label) = 'en')\n  }\n  GROUP BY ?work\n} AS %result\nWHERE {\n  INCLUDE %result\n\n  # There is a problem with BC dates\n  # BIND(xsd:date(?datetime) AS ?date)\n  BIND(REPLACE(STR(?datetime), 'T.*', '') AS ?date)\n    \n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\". }\n}\nGROUP BY ?date ?work ?workLabel ?topicsUrl ?topics\nORDER BY DESC(?date)\nLIMIT 500\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/complex_articles-recent.sparql",
      "title": "complex_articles-recent",
      "description": null
    },
    {
      "query_id": "scholia.complex_identifiers",
      "namespace": "scholia",
      "name": "complex_identifiers",
      "sparql": "# tool: scholia\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?Identifier ?IdentifierLabel\n  ?id (SAMPLE(?idUrls) as ?idUrl)\n  ?IdentifierDescription\nWITH {\n  SELECT ?Identifier ?id ?formatterurl WHERE {\n    VALUES ?complex { target: }\n    ?complex ?IDdir ?id .\n    ?Identifier wikibase:directClaim ?IDdir ;\n            wdt:P31/wdt:P279* wd:Q19847637 .\n    OPTIONAL {\n      ?Identifier wdt:P1630 ?formatterurl .\n    }\n    FILTER (?Identifier != wd:P233)\n    FILTER (?Identifier != wd:P234)\n    FILTER (?Identifier != wd:P2017)\n  } LIMIT 500\n} AS %RESULTS {\n  { SELECT * WHERE {\n      INCLUDE %RESULTS\n      FILTER (?Identifier = wd:P234)\n      BIND(IRI(REPLACE(?formatterurl, '\\\\\\\\$1', ENCODE_FOR_URI(str(?id)))) AS ?idUrls).\n    }\n  } UNION {\n    SELECT * WHERE {\n      INCLUDE %RESULTS\n      FILTER (?Identifier != wd:P234)\n      BIND(IRI(REPLACE(?formatterurl, '\\\\\\\\$1', str(?id))) AS ?idUrls).\n    }\n  }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?Identifier ?IdentifierLabel ?IdentifierDescription ?id\nORDER BY ASC(?IdentifierLabel)\n\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/complex_identifiers.sparql",
      "title": "complex_identifiers",
      "description": null
    },
    {
      "query_id": "scholia.complex_participants",
      "namespace": "scholia",
      "name": "complex_participants",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?quantity ?part ?partLabel ?partDescription ?type\nWITH {\n  SELECT ?part ?quantity (GROUP_CONCAT(DISTINCT ?type_label; separator=\", \") AS ?type)\n  WHERE {\n    VALUES ?complex { target: }\n    ?complex p:P527 ?partStatement .\n    ?partStatement ps:P527 ?part .\n    OPTIONAL { ?partStatement pq:P1114 ?quantity }\n    OPTIONAL { \n      ?part wdt:P31 ?type_ .\n      ?type_ rdfs:label ?type_label .\n      FILTER (LANG(?type_label) = 'en')\n    }\n  } GROUP BY ?part ?quantity \n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n} ORDER BY ASC(?partLabel)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/complex_participants.sparql",
      "title": "complex_participants",
      "description": null
    },
    {
      "query_id": "scholia.countries_list-of-countries",
      "namespace": "scholia",
      "name": "countries_list-of-countries",
      "sparql": "SELECT \n  ?number_of_publications\n  ?country ?countryLabel\n  ?example_author ?example_authorLabel\n  ?example_work ?example_workLabel\nWITH {\n  SELECT ?country WHERE {\n    VALUES ?country { {% for q in qs %} wd:{{ q }} {% endfor %} }\n  }\n} AS %countries\nWITH {\n  SELECT \n    ?country \n    (COUNT(DISTINCT ?work) AS ?number_of_publications)\n    (SAMPLE(?work) AS ?example_work)\n    (SAMPLE(?author) AS ?example_author)\n  WHERE {\n    INCLUDE %countries\n    OPTIONAL {\n      ?organization wdt:P17 ?country .\n      ?author wdt:P108 | wdt:P463 | wdt:P1416/wdt:P361* ?organization .\n      ?work wdt:P50 ?author .\n    }\n  }\n  GROUP BY ?country\n} AS %results\nWHERE {\n  INCLUDE %results\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,da,es,fr,jp,nl,no,ru,sv,zh\". }\n}\nORDER BY DESC(?number_of_publications)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/countries_list-of-countries.sparql",
      "title": "countries_list-of-countries",
      "description": null
    },
    {
      "query_id": "scholia.countries_tmp",
      "namespace": "scholia",
      "name": "countries_tmp",
      "sparql": "SELECT\n  ?country ?countryLabel ?countryDescription\n  ?example_work ?example_workLabel\nWITH {\n  SELECT ?country WHERE {\n    VALUES ?country { {% for q in qs %} wd:{{ q }} {% endfor %} }\n  }\n  GROUP BY ?country\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,es,fr,nl,no,ru,sv,zh\". }\n}",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/countries_tmp.sparql",
      "title": "countries_tmp",
      "description": null
    },
    {
      "query_id": "scholia.country-topic_authors",
      "namespace": "scholia",
      "name": "country-topic_authors",
      "sparql": "PREFIX target1: <http://www.wikidata.org/entity/{{ q1 }}>\nPREFIX target2: <http://www.wikidata.org/entity/{{ q2 }}>\n\nSELECT\n  ?number_of_works\n  ?author ?authorLabel (CONCAT(\"/author/\", SUBSTR(STR(?author), 32)) AS ?authorUrl)\n  ?example_work ?example_workLabel (CONCAT(\"/work/\", SUBSTR(STR(?example_work), 32)) AS ?example_workUrl)\nWITH {\n  SELECT DISTINCT ?author WHERE {\n    ?author ( wdt:P108 | wdt:P1416 ) / wdt:P17 target1: .\n  }\n} AS %authors\nWITH {\n  SELECT\n    ?author\n    (COUNT(DISTINCT ?work) AS ?number_of_works)\n    (SAMPLE(?work) AS ?example_work)\n  WHERE {\n    INCLUDE %authors\n    ?work wdt:P50 ?author .\n    ?work wdt:P921 / (wdt:P361+ | wdt:P1269+ | (wdt:P31* / wdt:P279*) ) target2: .\n  }\n  GROUP BY ?author\n} AS %results\nWHERE {\n  INCLUDE %results\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\". }\n}\nORDER BY DESC(?number_of_works)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/country-topic_authors.sparql",
      "title": "country-topic_authors",
      "description": null
    },
    {
      "query_id": "scholia.country-topic_coauthors-graph",
      "namespace": "scholia",
      "name": "country-topic_coauthors-graph",
      "sparql": "#defaultView:Graph\n\nPREFIX target1: <http://www.wikidata.org/entity/{{ q1 }}>\nPREFIX target2: <http://www.wikidata.org/entity/{{ q2 }}>\n\nSELECT\n  ?author1 ?author1Label\n  ?author2 ?author2Label\nWITH {  \n  SELECT\n    DISTINCT \n    ?author1\n    ?author2\n  WHERE {\n    ?author1 ( wdt:P108 | wdt:P1416 ) / wdt:P17 target1: .\n    ?author2 ( wdt:P108 | wdt:P1416 ) / wdt:P17 target1: .\n    ?work wdt:P921 / (wdt:P361+ | wdt:P1269+ | (wdt:P31* / wdt:P279*) ) target2: .\n    ?work wdt:P50 ?author1 .  \n    ?work wdt:P50 ?author2 .\n    FILTER (?author1 != ?author2)\n  }\n} AS %results\nWHERE {\n  INCLUDE %results\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\". }\n}",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/country-topic_coauthors-graph.sparql",
      "title": "country-topic_coauthors-graph",
      "description": null
    },
    {
      "query_id": "scholia.country-topic_cocitations-graph",
      "namespace": "scholia",
      "name": "country-topic_cocitations-graph",
      "sparql": "#defaultView:Graph\n\nPREFIX target1: <http://www.wikidata.org/entity/{{ q1 }}>\nPREFIX target2: <http://www.wikidata.org/entity/{{ q2 }}>\n\nSELECT\n  ?author1 ?author1Label\n  ?author2 ?author2Label\nWITH {  \n  SELECT\n    DISTINCT \n    ?author1\n    ?author2\n  WHERE {\n    ?author1 ( wdt:P108 | wdt:P1416 ) / wdt:P17 target1: .\n    ?author2 ( wdt:P108 | wdt:P1416 ) / wdt:P17 target1: .\n    ?work wdt:P921 / (wdt:P361+ | wdt:P1269+ | (wdt:P31* / wdt:P279*) ) target2: .\n    ?work wdt:P50 ?author1 .  \n    ?work wdt:P50 ?author2 .\n    FILTER (?author1 != ?author2)\n  }\n} AS %results\nWHERE {\n  INCLUDE %results\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\". }\n}",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/country-topic_cocitations-graph.sparql",
      "title": "country-topic_cocitations-graph",
      "description": null
    },
    {
      "query_id": "scholia.country-topic_organizations",
      "namespace": "scholia",
      "name": "country-topic_organizations",
      "sparql": "PREFIX target1: <http://www.wikidata.org/entity/{{ q1 }}>\nPREFIX target2: <http://www.wikidata.org/entity/{{ q2 }}>\n\nSELECT\n  ?number_of_works\n  ?number_of_authors\n\n?organization ?organizationLabel\n  (CONCAT(\"/organization/\", SUBSTR(STR(?organization), 32)) AS ?organizationUrl)\n\n  ?example_work ?example_workLabel (CONCAT(\"/work/\", SUBSTR(STR(?example_work), 32)) AS ?example_workUrl)\nWITH {\n  SELECT \n    ?work\n  WHERE {\n    ?work wdt:P921 / (wdt:P361 | wdt:P1269 | wdt:P31 | wdt:P279)* target2:\n  }\n} AS %works\nWITH {\n  SELECT\n    ?organization\n    (COUNT(DISTINCT ?work) AS ?number_of_works)\n    (COUNT(DISTINCT ?author) AS ?number_of_authors)\n    (SAMPLE(?work) AS ?example_work)\n  WHERE {\n    INCLUDE %works\n    ?work wdt:P50 ?author .\n    ?author ( wdt:P108 | wdt:P1416 ) ?organization .\n    ?organization wdt:P17 target1: .\n  }\n  GROUP BY ?organization\n} AS %results\nWHERE {\n  INCLUDE %results\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\". }\n}\nORDER BY DESC(?number_of_works)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/country-topic_organizations.sparql",
      "title": "country-topic_organizations",
      "description": null
    },
    {
      "query_id": "scholia.country_authors",
      "namespace": "scholia",
      "name": "country_authors",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?number_of_citing_works\n  ?author ?authorLabel\n  ?organization ?organizationLabel\n  ?example_work ?example_workLabel\nWITH {\n  SELECT DISTINCT ?author WHERE {\n    ?author wdt:P27 | wdt:P1416/wdt:P17 | wdt:P108/wdt:P17 target: .\n  }\n} AS %authors\nWITH {\n  SELECT\n    ?author \n    (COUNT(DISTINCT ?citing_work) AS ?number_of_citing_works)\n    (SAMPLE(?organization_) AS ?organization)\n    (SAMPLE(?work) AS ?example_work)\n  WHERE {\n    INCLUDE %authors\n    ?work wdt:P50 ?author .\n    OPTIONAL { ?citing_work wdt:P2860 ?work . }\n    OPTIONAL {\n      ?author wdt:P1416 | wdt:P108 ?organization_ .\n      ?organization_ wdt:P17 target:\n    }\n  }\n  GROUP BY ?author \n} AS %results\nWHERE {\n  INCLUDE %results\n  service wikibase:label { bd:serviceParam wikibase:language \"en\" . } \n}\nORDER BY DESC(?number_of_citing_works) \n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/country_authors.sparql",
      "title": "country_authors",
      "description": null
    },
    {
      "query_id": "scholia.country_co-organizations",
      "namespace": "scholia",
      "name": "country_co-organizations",
      "sparql": "# title: Co-organizations for a specific country\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n#defaultView:Map\nSELECT ?coorganization ?coorganizationLabel ?geocoordinates ?example_coauthor ?example_coauthorLabel ?example_work ?example_workLabel\nWITH {  \n  SELECT\n    ?coorganization\n    (SAMPLE(?geocoordinates_) AS ?geocoordinates)\n    (SAMPLE(?coauthor) AS ?example_coauthor)\n    (SAMPLE(?work) AS ?example_work)\n  WHERE {\n    ?organization wdt:P17 target: .\n    ?author wdt:P108 | wdt:P463 | wdt:P1416/wdt:P361* ?organization .\n    ?work wdt:P50 ?author, ?coauthor .\n    ?coauthor wdt:P108 | wdt:P463 | wdt:P1416/wdt:P361* ?coorganization .\n    FILTER NOT EXISTS { ?coorganization wdt:P17 target: }\n    ?coorganization wdt:P625 ?geocoordinates_ .\n  }\n  GROUP BY ?coorganization \n} AS %results\nWHERE {\n  INCLUDE %results\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/country_co-organizations.sparql",
      "title": "country_co-organizations",
      "description": null
    },
    {
      "query_id": "scholia.country_locations-as-topics",
      "namespace": "scholia",
      "name": "country_locations-as-topics",
      "sparql": "# title: Locations as topics for a specific country\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n#defaultView:Map{\"markercluster\":true}.\nSELECT \n  ?location ?locationLabel \n  ?work ?workLabel \n  ?geo\n  ?layer\nWITH {\n  SELECT ?location ?work ?geo ?type WHERE {\n    ?location wdt:P17 target: .\n    \n    # Geocoordinates may possible be under a headquarter property\n    ?location wdt:P159? / wdt:P625 ?geo.\n    ?work wdt:P921 ?location .\n    \n    # Filter encyclopedic articles - that may not be so relevant\n    FILTER NOT EXISTS { ?work wdt:P31 wd:Q17329259 }\n  }\n} AS %results\nWHERE {\n  INCLUDE %results\n          \n  # Move here for speed of query\n  OPTIONAL {\n    ?work wdt:P31 / rdfs:label ?layer . \n    FILTER (LANG(?layer) = 'en')\n  }\n  \n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,da,de,es,fr,jp,nl,no,ru,sv,zh\". }\n} ",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/country_locations-as-topics.sparql",
      "title": "country_locations-as-topics",
      "description": null
    },
    {
      "query_id": "scholia.country_narrative-locations",
      "namespace": "scholia",
      "name": "country_narrative-locations",
      "sparql": "# title: Narrative locations for a specific country\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n#defaultView:Map{\"markercluster\":true}.\nSELECT \n  ?location ?locationLabel \n  ?work ?workLabel \n  ?geo\n  ?layer\nWITH {\n  SELECT DISTINCT ?location ?work ?geo ?layer WHERE {\n    ?location wdt:P17 target: .\n    \n    # Geocoordinates may possible be under a headquarter property\n    ?location wdt:P159? / wdt:P625 ?geo.\n    ?work wdt:P840 ?location .\n    \n    # Filter encyclopedic articles - that may not be so relevant\n    FILTER NOT EXISTS { ?work wdt:P31 wd:Q17329259 }\n\n    OPTIONAL { ?work wdt:P31 / rdfs:label ?layer . FILTER (LANG(?layer) = 'en') }\n  }\n} AS %results\nWHERE {\n  INCLUDE %results \n\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,da,de,es,fr,jp,nl,no,ru,sv,zh\". }\n}",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/country_narrative-locations.sparql",
      "title": "country_narrative-locations",
      "description": null
    },
    {
      "query_id": "scholia.country_organizations",
      "namespace": "scholia",
      "name": "country_organizations",
      "sparql": "# title: Organizations for a specific country\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?number_of_authors\n  ?number_of_works\n  ?organization ?organizationLabel\nWITH {  \n  SELECT\n    ?organization\n    (COUNT(DISTINCT ?author) AS ?number_of_authors)\n    (COUNT(DISTINCT ?work) AS ?number_of_works)\n  WHERE {\n    ?organization wdt:P17 target: .\n    ?author wdt:P108 | wdt:P463 | wdt:P1416/wdt:P361* ?organization .\n    ?work wdt:P50 ?author .\n  }\n  GROUP BY ?organization \n} AS %results\nWHERE {\n  INCLUDE %results\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,da,es,fr,jp,nl,no,ru,sv,zh\". }\n}\nORDER BY DESC(?number_of_authors) DESC(?number_of_works)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/country_organizations.sparql",
      "title": "country_organizations",
      "description": null
    },
    {
      "query_id": "scholia.dataset_citations",
      "namespace": "scholia",
      "name": "dataset_citations",
      "sparql": "#defaultView:Table\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n# List of works that is cited by the specified work\nSELECT ?citations ?publication_date ?citing_work ?citing_workLabel \nWITH {\n  SELECT (MIN(?date) AS ?publication_date) (COUNT(?citing_citing_work) AS ?citations) ?citing_work \n  WHERE {\n    # Find works that cite the queried work\n    ?citing_work wdt:P2860 target: .\n\n    OPTIONAL {\n      ?citing_work wdt:P577 ?datetime .\n      \n      # Simplify the datetime to one with day, month and year only\n      BIND(xsd:date(?datetime) AS ?date)\n    }\n    OPTIONAL { ?citing_citing_work wdt:P2860 ?citing_work }\n  }\n  GROUP BY ?citing_work\n  \n  # Limit the number of results to avoid downloading too much data\n  ORDER BY DESC(?citations) DESC(?date) \n  LIMIT 1000\n} AS %result\nWHERE {\n  # Label the result\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,it,jp,nl,no,ru,sv,zh\" . } \n} \nORDER BY DESC(?citations) DESC(?publication_date) ",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/dataset_citations.sparql",
      "title": "dataset_citations",
      "description": null
    },
    {
      "query_id": "scholia.dataset_identifiers",
      "namespace": "scholia",
      "name": "dataset_identifiers",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?Identifier ?IdentifierLabel\n  ?id (SAMPLE(?idUrls) as ?idUrl)\n  ?IdentifierDescription\nWITH {\n  SELECT ?Identifier ?id ?formatterurl WHERE {\n    target: ?IDdir ?id .\n    ?Identifier wikibase:directClaim ?IDdir ;\n            wdt:P31/wdt:P279* wd:Q19847637 .\n    OPTIONAL {\n      ?Identifier wdt:P1630 ?formatterurl .\n    }\n  } LIMIT 500\n} AS %RESULTS {\n  { SELECT * WHERE {\n      INCLUDE %RESULTS\n      FILTER (?Identifier = wd:P234)\n      BIND(IRI(REPLACE(?formatterurl, '\\\\\\\\$1', ENCODE_FOR_URI(str(?id)))) AS ?idUrls).\n    }\n  } UNION {\n    SELECT * WHERE {\n      INCLUDE %RESULTS\n      FILTER (?Identifier != wd:P234)\n      BIND(IRI(REPLACE(?formatterurl, '\\\\\\\\$1', str(?id))) AS ?idUrls).\n    }\n  }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?Identifier ?IdentifierLabel ?IdentifierDescription ?id\nORDER BY ASC(?IdentifierLabel)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/dataset_identifiers.sparql",
      "title": "dataset_identifiers",
      "description": null
    },
    {
      "query_id": "scholia.dataset_list-of-authors",
      "namespace": "scholia",
      "name": "dataset_list-of-authors",
      "sparql": "# List of authors for a work\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT DISTINCT\n  # Author order\n  ?order\n\n  ?academic_age\n\n  # Author item and label\n  ?author ?authorUrl ?authorDescription\n  \n  ?orcid\nWHERE {\n  {\n    target: p:P50 ?author_statement .\n    ?author_statement ps:P50 ?author_ .\n    ?author_ rdfs:label ?author .\n    FILTER (LANG(?author) = 'en')\n    BIND(CONCAT(\"../author/\", SUBSTR(STR(?author_), 32)) AS ?authorUrl)\n    OPTIONAL {\n      ?author_statement pq:P1545 ?order_ .\n      BIND(xsd:integer(?order_) AS ?order)\n    }\n    OPTIONAL { ?author_ wdt:P496 ?orcid_ . }\n    # Either show the ORCID iD or construct part of a URL to search on the ORCID homepage\n    BIND(COALESCE(?orcid_, CONCAT(\"orcid-search/search/?searchQuery=\", ENCODE_FOR_URI(?author))) AS ?orcid)\n    OPTIONAL {\n      ?author_ schema:description ?authorDescription .\n      FILTER (LANG(?authorDescription) = \"en\")\n    }\n  }\n  UNION\n  {\n    target: p:P2093 ?authorstring_statement .\n    ?authorstring_statement ps:P2093 ?author_\n    BIND(CONCAT(\"UNRESOLVED: \", ?author_) AS ?author)\n    OPTIONAL {\n      ?authorstring_statement pq:P1545 ?order_ .\n      BIND(xsd:integer(?order_) AS ?order)\n    }\n    BIND(CONCAT(\"https://author-disambiguator.toolforge.org/names_oauth.php?doit=Look+for+author&name=\", ENCODE_FOR_URI(?author_)) AS ?authorUrl)\n  }\n  OPTIONAL {\n    SELECT ?author_ (MAX(?academic_age_) AS ?academic_age) {\n      target: wdt:P50 ?author_ ;\n                 wdt:P577 ?publication_date .\n      [] wdt:P31 wd:Q13442814 ;\n         wdt:P50 ?author_ ;\n         wdt:P577 ?other_publication_date .\n      BIND(YEAR(?publication_date) - YEAR(?other_publication_date) AS ?academic_age_)\n    }\n    GROUP BY ?author_\n  }\n}\nORDER BY ?order",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/dataset_list-of-authors.sparql",
      "title": "dataset_list-of-authors",
      "description": null
    },
    {
      "query_id": "scholia.dataset_topic-scores",
      "namespace": "scholia",
      "name": "dataset_topic-scores",
      "sparql": "#defaultView:BubbleChart\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?score ?topic ?topicLabel\nWITH {\n  SELECT\n    (SUM(?score_) AS ?score)\n    ?topic\n  WHERE {\n    { \n      target: wdt:P921 ?topic .\n      BIND(20 AS ?score_)\n    }\n    UNION\n    { \n     target: wdt:P921/wdt:P279 ?topic .\n     BIND(3 AS ?score_)\n    }\n    UNION\n    {\n      # Topic of a cited work\n      target: wdt:P2860/wdt:P921 ?topic .\n      BIND(1 AS ?score_)\n    }\n    UNION\n    {\n      SELECT (1 AS ?score_) ?topic WHERE {\n        ?citing_work wdt:P2860 target: .\n        ?citing_work wdt:P921 ?topic . \n      }\n    }\n  }\n  GROUP BY ?topic\n} AS %results \nWHERE {\n  INCLUDE %results\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,da,de,es,jp,no,ru,sv,zh\". }\n}\nORDER BY DESC(?score)\nLIMIT 200",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/dataset_topic-scores.sparql",
      "title": "dataset_topic-scores",
      "description": null
    },
    {
      "query_id": "scholia.disease_clinical-trials",
      "namespace": "scholia",
      "name": "disease_clinical-trials",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  DISTINCT\n  ?start_date\n  ?trial ?trialLabel\n  ?intervention ?interventionLabel\n  ?sponsor ?sponsorLabel\nWHERE {\n  ?trial wdt:P31 wd:Q30612 ;\n  wdt:P1050 / wdt:P279* target: .\n  OPTIONAL {\n    ?trial wdt:P580 ?starttime\n    BIND(SUBSTR(STR(?starttime), 0, 11) AS ?start_date)\n  }\n  OPTIONAL { ?trial wdt:P4844 ?intervention }\n  OPTIONAL { ?trial wdt:P859 ?sponsor }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,pl,ru,sv,zh\". }\n}\nORDER BY DESC(?starttime)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/disease_clinical-trials.sparql",
      "title": "disease_clinical-trials",
      "description": null
    },
    {
      "query_id": "scholia.disease_publications-per-year",
      "namespace": "scholia",
      "name": "disease_publications-per-year",
      "sparql": "#defaultView:BarChart\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n# Inspired from LEGOLAS - http://abel.lis.illinois.edu/legolas/\n# Shubhanshu Mishra, Vetle Torvik\nselect ?year (count(?work) as ?number_of_publications) where {\n  {\n    select (str(?year_) as ?year) (0 as ?pages) where {\n      # default values = 0\n      ?year_item wdt:P31 wd:Q577 . \n      ?year_item wdt:P585 ?date .\n      bind(year(?date) as ?year_)\n      {\n        select (min(?year_) as ?earliest_year) where {\n          { ?work wdt:P921/wdt:P31*/wdt:P279* target: . }\n          union { ?work wdt:P921/wdt:P361+ target: . }\n          union { ?work wdt:P921/wdt:P1269+ target: . }\n          ?work wdt:P577 ?publication_date . \n          bind(year(?publication_date) as ?year_)\n        }\n      }\n      bind(year(now()) as ?next_year)\n      filter (?year_ >= ?earliest_year && ?year_ <= ?next_year)\n    }\n  }\n  union {\n    select ?work (min(?years) as ?year) where {\n      { ?work wdt:P921/wdt:P31*/wdt:P279* target: . }\n      union { ?work wdt:P921/wdt:P361+ target: . }\n      union { ?work wdt:P921/wdt:P1269+ target: . }\n      ?work wdt:P577 ?dates .\n      bind(str(year(?dates)) as ?years) .\n    }\n    group by ?work \n  }\n}\ngroup by ?year \norder by ?year",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/disease_publications-per-year.sparql",
      "title": "disease_publications-per-year",
      "description": null
    },
    {
      "query_id": "scholia.disease_related-diseases",
      "namespace": "scholia",
      "name": "disease_related-diseases",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?count\n  ?gene_count\n  ?symptom_count\n  ?disease ?diseaseLabel\n  ?genes\n  ?symptoms\n{\n  {\n    SELECT ?disease (COUNT(?gene) AS ?gene_count) (GROUP_CONCAT(?gene_label; separator=\" // \") AS ?genes) WHERE {\n      target: wdt:P2293 ?gene .\n      ?gene wdt:P2293 ?disease . \n      FILTER (target: != ?disease)\n      ?gene rdfs:label ?gene_label\n      FILTER(lang(?gene_label) = \"en\")\n    }\n    GROUP BY ?disease\n  }\n  UNION\n  {\n    SELECT\n      ?disease (COUNT(?symptom) AS ?symptom_count) (GROUP_CONCAT(?symptom_label; separator=\" // \") AS ?symptoms)\n    {\n      target: wdt:P780 ?symptom .\n      ?disease wdt:P780 ?symptom . \n      FILTER (target: != ?disease)\n      ?symptom rdfs:label ?symptom_label . FILTER(lang(?symptom_label) = \"en\")\n    }\n    GROUP BY ?disease\n  }\n\n  # Aggregate count\n  BIND((COALESCE(?symptom_count, 0) + COALESCE(?gene_count, 0)) AS ?count)\n\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY DESC(?count)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/disease_related-diseases.sparql",
      "title": "disease_related-diseases",
      "description": null
    },
    {
      "query_id": "scholia.event-series-index_acceptance-rate",
      "namespace": "scholia",
      "name": "event-series-index_acceptance-rate",
      "sparql": "SELECT \n  (ROUND(10000 * ?mean_acceptance_rate) / 100 AS ?mean_acceptance_percentage)\n  ?track ?trackLabel\n  ?event_series ?event_seriesLabel\n  (CONCAT(\"/event-series/\", SUBSTR(STR(?event_series), 32)) AS ?event_seriesUrl)\nWITH {\n  SELECT \n    (SUM(?acceptance_rate)/COUNT(?acceptance_rate) AS ?mean_acceptance_rate)\n    ?event_series\n    ?track\n  WHERE {\n    ?event_series wdt:P31 / wdt:P279* wd:Q125391566 .\n    ?event wdt:P179 ?event_series ;\n           p:P5822 ?acceptance_rate_statement .\n    ?acceptance_rate_statement ps:P5822 ?acceptance_rate .\n    OPTIONAL { ?acceptance_rate_statement pq:P518 ?track_ . }\n    BIND(COALESCE(?track_, \"-\") AS ?track)\n    BIND(STR(YEAR(?datetime)) AS ?year)\n  }\n  GROUP BY ?event_series ?track\n} AS %event_series\nWHERE {\n  INCLUDE %event_series\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?mean_acceptance_rate\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/event-series-index_acceptance-rate.sparql",
      "title": "event-series-index_acceptance-rate",
      "description": null
    },
    {
      "query_id": "scholia.event-series-index_list",
      "namespace": "scholia",
      "name": "event-series-index_list",
      "sparql": "SELECT\n  ?events ?short_name\n  ?event_series ?event_seriesLabel ?event_seriesDescription\n  (CONCAT(\"/event-series/\", SUBSTR(STR(?event_series), 32)) AS ?event_seriesUrl)\nWITH {\n  SELECT (COUNT(?event) AS ?events) ?event_series {  \n    { ?event_series wdt:P31 wd:Q47258130 . }\n    UNION \n    { ?event_series wdt:P31 wd:Q47459256 . }\n    OPTIONAL { ?event_series ^wdt:P179 ?event }\n  }\n  GROUP BY ?event_series\n} AS %events\nWHERE {\n  INCLUDE %events\n  OPTIONAL { ?event_series wdt:P1813 ?short_name }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,da,de,fr\". }\n}\nORDER BY DESC(?events)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/event-series-index_list.sparql",
      "title": "event-series-index_list",
      "description": null
    },
    {
      "query_id": "scholia.event-series_acceptance-rate",
      "namespace": "scholia",
      "name": "event-series_acceptance-rate",
      "sparql": "#defaultView:LineChart\n\nPREFIX target: <http://www.wikidata.org/entity/{{q}}>\n\nSELECT \n  ?year\n  ?acceptance_rate \n  ?trackLabel\nWHERE {\n  ?event wdt:P179 target: ;\n         wdt:P580 ?datetime ;\n         p:P5822 ?acceptance_rate_statement .\n  ?acceptance_rate_statement ps:P5822 ?acceptance_rate .\n  OPTIONAL { ?acceptance_rate_statement pq:P518 ?track_ . }\n  BIND(COALESCE(?track_, \"total\") AS ?track)\n  \n  BIND(STR(YEAR(?datetime)) AS ?year)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?year\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/event-series_acceptance-rate.sparql",
      "title": "event-series_acceptance-rate",
      "description": null
    },
    {
      "query_id": "scholia.event-series_events",
      "namespace": "scholia",
      "name": "event-series_events",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n# title: List of event and proceedings for a specific event series\nSELECT DISTINCT \n  (SAMPLE(?years) AS ?year)\n  (SAMPLE(?ordinal) AS ?ordinal)\n  (SAMPLE(?short_names) AS ?short_name)\n  ?event ?eventLabel (CONCAT(\"/event/\", SUBSTR(STR(?event), 32)) AS ?eventUrl)\n  ?proceedings ?proceedingsLabel (CONCAT(\"/venue/\", SUBSTR(STR(?proceedings), 32)) AS ?proceedingsUrl)\nWHERE {\n  {\n    ?event wdt:P179 | wdt:P31 target: .\n    OPTIONAL {\n      ?event wdt:P585 | wdt:P580 ?datetime .\n      BIND(YEAR(?datetime) AS ?years)\n    }\n    OPTIONAL {\n      ?event wdt:P1813 ?short_names\n    }\n    OPTIONAL {\n      ?proceedings wdt:P4745 ?event\n    }\n    OPTIONAL{\n      ?event p:P179/pq:P1545 ?ordinal\n    }\n  }\n  UNION\n  {\n    # proceedings even if the event is not there!!!\n    ?proceedings ( wdt:P179 / wdt:P4745 ) target: .\n    OPTIONAL {\n      ?proceedings wdt:P577 ?datetime .\n      BIND(YEAR(?datetime) AS ?years)    \n    }\n  }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\". }\n  }\nGROUP BY ?event ?year ?eventLabel ?proceedings ?proceedingsLabel\nORDER BY DESC(?year)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/event-series_events.sparql",
      "title": "event-series_events",
      "description": null
    },
    {
      "query_id": "scholia.event-series_map",
      "namespace": "scholia",
      "name": "event-series_map",
      "sparql": "#defaultView:Map\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?event ?eventLabel ?geo ?image WHERE {\n  ?event (wdt:P179 | wdt:P31) target: .\n  ?event wdt:P276? / wdt:P625 ?geo .\n  OPTIONAL { ?event wdt:P18 ?image . }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\". }\n}\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/event-series_map.sparql",
      "title": "event-series_map",
      "description": null
    },
    {
      "query_id": "scholia.event-series_number-of-participants",
      "namespace": "scholia",
      "name": "event-series_number-of-participants",
      "sparql": "#defaultView:LineChart\n\nPREFIX target: <http://www.wikidata.org/entity/{{q}}>\n\nSELECT \n  ?year\n  ?number_of_participants\nWHERE {\n  ?event wdt:P179 target: ;\n         wdt:P580 ?datetime ;\n         wdt:P1132 ?number_of_participants .\n  \n  BIND(STR(YEAR(?datetime)) AS ?year)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?year\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/event-series_number-of-participants.sparql",
      "title": "event-series_number-of-participants",
      "description": null
    },
    {
      "query_id": "scholia.event-series_people",
      "namespace": "scholia",
      "name": "event-series_people",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?number_of_roles\n  # (?number_of_publications AS ?works)\n  ?person ?personLabel ?personDescription\n  (CONCAT(\"/author/\", SUBSTR(STR(?person), 32)) AS ?personUrl)\n  ?roles\n  ?example_work ?example_workLabel\nWITH {\n  SELECT\n    (COUNT(?role) AS ?number_of_roles)\n    (GROUP_CONCAT(DISTINCT ?role; separator=\", \") AS ?roles) ?person\n  WHERE {\n    {\n      # speaker\n      target: ^wdt:P179 / wdt:P823 ?person .\n      BIND(\"speaker\" AS ?role)\n    }\n    UNION\n    {\n      # organizer\n      target: ^wdt:P179 / wdt:P664 ?person .\n      BIND(\"organizer\" AS ?role)\n    }\n    UNION\n    {\n      # participant\n      ?person (wdt:P1344 | ^wdt:P710) / wdt:P179 target: .\n      BIND(\"participant\" AS ?role)\n    }\n    UNION\n    {\n      # editor\n      ?person (^wdt:P98 / wdt:P4745) / wdt:P179 target: .\n      BIND(\"editor of proceedings\" AS ?role)\n    }\n    UNION\n    {\n      # author\n      ?person (^wdt:P50 / wdt:P1433 / wdt:P4745) / wdt:P179 target: .\n      BIND(\"author\" AS ?role)\n    }\n    UNION\n    {\n      # program committee member\n      target: ^wdt:P179 / wdt:P5804 ?person .\n      BIND(\"program committee member\" AS ?role)\n    }\n  }\n  GROUP BY ?person\n} AS %people  \nWITH {\n  SELECT\n    ?number_of_roles\n    # (COUNT(?work) AS ?number_of_publications)\n    ?roles\n    ?person (SAMPLE(?work) AS ?example_work)\n  WHERE {\n    INCLUDE %people .\n    OPTIONAL { ?work wdt:P50 ?person . }\n  }\n  GROUP BY ?number_of_roles ?roles ?person\n} AS %results\nWHERE {\n  INCLUDE %results\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,da,de,es,fr,jp,no,ru,sv,zh\". }\n}\nORDER BY DESC(?number_of_roles)\nLIMIT 500\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/event-series_people.sparql",
      "title": "event-series_people",
      "description": null
    },
    {
      "query_id": "scholia.event-series_proceedings-publications",
      "namespace": "scholia",
      "name": "event-series_proceedings-publications",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?date\n  ?work ?workLabel (CONCAT(\"/work/\", SUBSTR(STR(?work), 32)) AS ?workUrl)\n  ?authors ?authorsUrl\n  ?topics ?topicsUrl\nWITH {\n  SELECT\n    (MIN(?date_) AS ?date) \n    ?work\n    (GROUP_CONCAT(DISTINCT ?author_label; separator=\", \") AS ?authors)\n    (CONCAT(\"../authors/\", GROUP_CONCAT(DISTINCT SUBSTR(STR(?author), 32); separator=\",\")) AS ?authorsUrl)\n    (GROUP_CONCAT(DISTINCT ?topic_label; separator=\", \") AS ?topics)\n    (CONCAT(\"../topics/\", GROUP_CONCAT(DISTINCT SUBSTR(STR(?topic), 32); separator=\",\")) AS ?topicsUrl)\n  WHERE {\n    ?work wdt:P1433 / wdt:P4745 / (wdt:P179 | wdt:P31) target: .\n    OPTIONAL {\n      ?work wdt:P577 ?publication_datetime .\n      BIND(xsd:date(?publication_datetime) AS ?date_)\n    }\n    OPTIONAL {\n      ?work wdt:P50 ?author .\n      ?author rdfs:label ?author_label . FILTER(LANG(?author_label) = \"en\")\n    }\n    OPTIONAL {\n      ?work wdt:P921 ?topic .\n      ?topic rdfs:label ?topic_label . FILTER(LANG(?topic_label) = \"en\")\n    }\n  }\n  GROUP BY ?work\n  ORDER BY DESC(?date)\n  LIMIT 500\n} AS %results\nWHERE {\n  INCLUDE %results\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?date)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/event-series_proceedings-publications.sparql",
      "title": "event-series_proceedings-publications",
      "description": null
    },
    {
      "query_id": "scholia.event-series_recent-publications",
      "namespace": "scholia",
      "name": "event-series_recent-publications",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?publication_date\n  ?work ?workLabel (CONCAT(\"/work/\", SUBSTR(STR(?work), 32)) AS ?workUrl)\n  ?authors ?authorsUrl\nWITH {\n  SELECT\n    DISTINCT ?person\n  WHERE {\n    ?event wdt:P179 | wdt:P31 target: .\n\n    {\n      # speaker\n      ?event wdt:P823 ?person .\n    }\n    UNION\n    {\n      # organizer\n      ?event wdt:P664 ?person .\n    }\n    UNION\n    {\n      # participant\n      ?person wdt:P1344 | ^wdt:P710 ?event .\n    }\n    UNION\n    {\n      # author\n      ?person ^wdt:P50 / wdt:P1433 / wdt:P4745 ?event .\n    }\n  }\n} AS %people  \nWITH {\n  SELECT\n    (xsd:date(MAX(?publication_datetime)) AS ?publication_date)\n    ?work\n    (GROUP_CONCAT(DISTINCT ?person_label; separator=\", \") AS ?authors)\n    (CONCAT(\"../authors/\", GROUP_CONCAT(DISTINCT SUBSTR(STR(?person), 32); separator=\",\")) AS ?authorsUrl)\n  WHERE {\n    INCLUDE %people .\n    ?work wdt:P50 ?person ; wdt:P577 ?publication_datetime .\n    ?person rdfs:label ?person_label . FILTER(LANG(?person_label) = 'en')\n  }\n  GROUP BY ?work\n} AS %results\nWHERE {\n  INCLUDE %results\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,da,de,es,fr,jp,no,ru,sv,zh\". }\n}\nORDER BY DESC(?publication_date)\nLIMIT 500\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/event-series_recent-publications.sparql",
      "title": "event-series_recent-publications",
      "description": null
    },
    {
      "query_id": "scholia.event-series_timeline",
      "namespace": "scholia",
      "name": "event-series_timeline",
      "sparql": "#defaultView:Timeline\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?time ?endtime ?event ?eventLabel ?image\n  ?description\nWITH {\n  SELECT DISTINCT ?event ?time ?endtime WHERE {\n    # It seems to be necessary to have this line together with the \n    # optional event time triples here.\n    ?event wdt:P179 | wdt:P31 target: .\n    \n    OPTIONAL { ?event wdt:P580 ?starttime . }\n\n    # If the endtime is not set, then use now as the end time\n    # However this does not show well if the event is in the future\n    # and no end date has been set.\n    OPTIONAL { ?event wdt:P582 ?endtime . }\n    # BIND(COALESCE(?endtime_, NOW()) AS ?endtime)\n    \n    OPTIONAL { ?event wdt:P585 ?timepoint . }\n    \n    # If start time is defined the disregard timepoint\n    BIND(COALESCE(?starttime, ?timepoint) AS ?time)\n  }\n} AS %events1\nWITH {\n  # Include significant events\n  SELECT ?event ?time ?description WHERE {\n    ?event wdt:P179 | wdt:P31 target: .\n    ?event p:P793 [ ps:P793 ?item ; pq:P585 ?time ] .\n    OPTIONAL {\n      ?item rdfs:label ?description .\n      FILTER (LANG(?description) = \"en\")\n    }\n  }\n} AS %events2\nWHERE {\n  { INCLUDE %events1 }\n  UNION\n  { INCLUDE %events2 }\n          \n  OPTIONAL { ?event wdt:P18 ?image . }\n  SERVICE wikibase:label {\n    bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\".\n  }\n}\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/event-series_timeline.sparql",
      "title": "event-series_timeline",
      "description": null
    },
    {
      "query_id": "scholia.event-series_top-topics-through-time",
      "namespace": "scholia",
      "name": "event-series_top-topics-through-time",
      "sparql": "#defaultView:AreaChart\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?year\n  ?works\n  ?topic ?topicLabel\nWITH {\n  SELECT \n    ?work\n  WHERE {\n    ?work wdt:P1433 / wdt:P4745 / (wdt:P179 | wdt:P31) target: .\n  }\n} AS %works\nWITH {\n  SELECT\n    (COUNT(?work) AS ?count)\n    ?topic\n  WHERE {\n    INCLUDE %works\n    ?work wdt:P921 ?topic .\n  }\n  GROUP BY ?topic\n  ORDER BY DESC(?count)\n  LIMIT 5\n} AS %topics\nWITH {\n  SELECT\n    ?year \n    (COUNT(?work) AS ?works)\n    ?topic\n  WHERE {\n    INCLUDE %works\n    INCLUDE %topics\n    ?work wdt:P921 ?topic ;\n          wdt:P577 ?publication_datetime .\n    BIND(STR(YEAR(?publication_datetime)) AS ?year)\n  }\n  GROUP BY ?year ?topic\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?year",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/event-series_top-topics-through-time.sparql",
      "title": "event-series_top-topics-through-time",
      "description": null
    },
    {
      "query_id": "scholia.event-series_topics",
      "namespace": "scholia",
      "name": "event-series_topics",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?score ?topic ?topicLabel ?topicDescription\n(CONCAT(\"/topic/\", SUBSTR(STR(?topic), 32)) AS ?topicUrl)\nWITH {\n  SELECT\n    DISTINCT ?person\n  WHERE {\n    ?event (wdt:P179 | wdt:P31) target: .\n    {\n      # speaker\n      ?event wdt:P823 ?person .\n    }\n    UNION\n    {\n      # organizer\n      ?event wdt:P664 ?person .\n    }\n    UNION\n    {\n      # participant\n      ?person wdt:P1344 | ^wdt:P710 ?event .\n    }\n    UNION\n    {\n      # author\n      ?person ^wdt:P50 / wdt:P1433 / wdt:P4745 ?event .\n    }\n  }\n} AS %people  \nWITH {\n  SELECT\n    (SUM(?score_) AS ?score) ?topic\n  WHERE {\n\n    # For some reason a path query does not work here.\n    { ?event wdt:P179 target: . }\n    UNION\n    { ?event wdt:P31 target: . }\n\n    {\n      ?event wdt:P921 ?topic .\n      BIND(50 AS ?score_)\n    }\n    UNION\n    {\n      INCLUDE %people\n      ?person ^wdt:P50 / wdt:P921 ?topic .\n      BIND(1 AS ?score_)\n    }\n    UNION\n    {\n      ?event ^wdt:P4745 / ^wdt:P1433 / wdt:P921 ?topic .\n      BIND(7 AS ?score_)\n    }\n  }\n  GROUP BY ?topic\n} AS %results\nWHERE {\n  INCLUDE %results\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,da,de,es,fr,jp,no,ru,sv,zh\". }\n}\nORDER BY DESC(?score)\nLIMIT 200\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/event-series_topics.sparql",
      "title": "event-series_topics",
      "description": null
    },
    {
      "query_id": "scholia.event_co-authors",
      "namespace": "scholia",
      "name": "event_co-authors",
      "sparql": "#defaultView:Graph\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT \n  ?author1 ?author1Label (SAMPLE(?image1_) AS ?image1) ?rgb\n  ?author2 ?author2Label (SAMPLE(?image2_) AS ?image2)\nWITH {\n  SELECT\n    ?author1\n    (SAMPLE(?dark_rgb_) AS ?dark_rgb)\n    (SAMPLE(?light_rgb_) AS ?light_rgb)\n  WHERE {\n    # Find people at the event\n    { \n      target: (wdt:P823 | wdt:P664 | ^wdt:P1344 | wdt:P710) ?author1 .\n      BIND (\"EEEEEE\" AS ?dark_rgb_)\n    }\n    UNION \n    {\n      # author of article in proceedings, or program committee member\n      target:  (^wdt:P4745 / ^wdt:P1433 / wdt:P50) | wdt:P5804 ?author1 .\n      BIND (\"FFFFFF\" AS ?light_rgb_)\n    }\n    UNION\n    {\n      # author of article in proceedings, or program committee member\n      ?presentation wdt:P823 ?author1;\n      wdt:P5072 target:\n      BIND (\"FFFFFF\" AS ?light_rgb_)\n   }\n  }\n  GROUP BY ?author1\n} AS %authors\nWITH {\n  SELECT DISTINCT ?author1 ?author2 ?rgb WHERE {\n    INCLUDE %authors\n    {        \n    target: (wdt:P823 | wdt:P664 | ^wdt:P1344 | wdt:P710 | ^wdt:P4745 / ^wdt:P1433 / wdt:P50)  ?author2 .}\n    UNION\n    { ?presentation wdt:P823 ?author2; wdt:P5072 target:    }\n            \n    # Find co-authors\n    ?work wdt:P50 ?author1 , ?author2 .\n    FILTER (?author1 != ?author2)\n\n    BIND(COALESCE(?dark_rgb, ?light_rgb) AS ?rgb)\n  }\n} AS %result\nWHERE {\n  INCLUDE %result\n    \n  OPTIONAL { ?author1 wdt:P18 ?image1_ . }\n  OPTIONAL { ?author2 wdt:P18 ?image2_ . }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,sv,ru,zh\".\n  }\n}\nGROUP BY ?author1 ?author1Label ?rgb ?author2 ?author2Label  \n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/event_co-authors.sparql",
      "title": "event_co-authors",
      "description": null
    },
    {
      "query_id": "scholia.event_data",
      "namespace": "scholia",
      "name": "event_data",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?description ?descriptionLabel ?descriptionUrl\n\n  ?value ?valueLabel ?valueUrl\n\nWHERE {\n  {\n    BIND(1 AS ?order)\n    BIND(\"Event series\" AS ?description)\n    BIND(\"/event-series\" AS ?descriptionUrl)\n    target: wdt:P179 ?value .\n    BIND(CONCAT(\"/event-series/\", SUBSTR(STR(?value), 32)) AS ?valueUrl)\n  }\n  UNION\n  {\n    BIND(2 AS ?order)\n    BIND(\"Short name\" AS ?description)\n    target: wdt:P1813 ?value .\n  }\n  UNION\n  {\n    BIND(5 AS ?order)\n    BIND(wd:Q34770 AS ?description)\n    BIND(\"/language\" AS ?descriptionUrl)\n    \n    target: wdt:P2936 ?value .\n    BIND(CONCAT(\"/language/\", SUBSTR(STR(?value), 32)) AS ?valueUrl)\n  }\n  UNION\n  {\n    SELECT\n      (10 AS ?order)\n      (\"Organizers\" AS ?description)\n      (GROUP_CONCAT(?value_; separator=\", \") AS ?value)\n      (CONCAT(\"/authors/\", GROUP_CONCAT(?q; separator=\",\")) AS ?valueUrl)      \n    {\n      BIND(1 AS ?dummy)\n      target: wdt:P664 ?iri .\n      BIND(SUBSTR(STR(?iri), 32) AS ?q) \n      ?iri rdfs:label ?value_string .\n      FILTER (LANG(?value_string) = 'en')\n      BIND(COALESCE(?value_string, ?q) AS ?value_)\n    }\n    GROUP BY ?dummy\n  }\n  UNION\n  {\n    BIND(20 AS ?order)\n    BIND(\"Number of participants\" AS ?description)\n    \n    target: wdt:P1132 ?value .\n  }\n  UNION\n  {\n    # number of submissions\n    BIND(21 AS ?order)\n    BIND(\"number of submissions\"  AS ?description)\n    \n    target: p:P12655 ?value_statement .\n    ?value_statement ps:P12655 ?submissions.\n    OPTIONAL {\n      ?value_statement  pq:P518 / rdfs:label ?track .\n      FILTER (LANG(?track) = \"en\")\n    }\n    BIND(IF(BOUND(?track), CONCAT(STR(?submissions), \" (\", ?track, \")\"), STR(?submissions)) AS ?value)\n  }\n  UNION\n  {\n    # number of accepted contributions\n    BIND(22 AS ?order)\n    BIND(\"number of accepted contributions\"  AS ?description)\n    \n    target: p:P12649 ?value_statement .\n    ?value_statement ps:P12649 ?accepted .\n    OPTIONAL {\n      ?value_statement  pq:P518 / rdfs:label ?track .\n      FILTER (LANG(?track) = \"en\")\n    }\n    BIND(IF(BOUND(?track), CONCAT(STR(?accepted), \" (\", ?track, \")\"), STR(?accepted)) AS ?value)\n  }\n  UNION\n  {\n    BIND(23 AS ?order)\n    BIND(\"Acceptance&nbsp;rate\" AS ?description)\n    \n    target: p:P5822 ?value_statement .\n    ?value_statement ps:P5822 ?acceptance_rate .\n    OPTIONAL {\n      ?value_statement  pq:P518 / rdfs:label ?track .\n      FILTER (LANG(?track) = \"en\")\n    }\n    BIND(IF(BOUND(?track), CONCAT(STR(?acceptance_rate * 100), \" % (\", ?track, \")\"), CONCAT(STR(?acceptance_rate * 100), \" %\")) AS ?value)\n  }\n\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} \nORDER BY ?order\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/event_data.sparql",
      "title": "event_data",
      "description": null
    },
    {
      "query_id": "scholia.event_future-events",
      "namespace": "scholia",
      "name": "event_future-events",
      "sparql": "SELECT ?time ?short_name \n?event ?eventLabel (CONCAT(\"/event/\", SUBSTR(STR(?event), 32)) AS ?eventUrl)\n?location ?locationLabel (CONCAT(\"/location/\", SUBSTR(STR(?location), 32)) AS ?locationUrl)\nWITH {\n  SELECT DISTINCT ?event WHERE {\n    # This union seems to be faster than a VALUES-based query\n    { ?event wdt:P31 / wdt:P279* wd:Q52260246 . }\n    UNION \n    { ?event wdt:P31 / wdt:P279* wd:Q46855 . }\n  }\n} AS %events\nWITH {\n  SELECT \n    ?event \n    (xsd:date(MIN(?times)) AS ?time)\n    (SAMPLE(?locations) AS ?location)\n    (SAMPLE(?short_names) AS ?short_name)\n  WHERE {\n    INCLUDE %events\n    \n    ?event wdt:P580 | wdt:P585 ?times .\n    FILTER (?times > NOW())\n  \n    OPTIONAL { ?event wdt:P276 ?locations }\n    OPTIONAL { ?event wdt:P1813 ?short_names }\n  }\n  GROUP BY ?event\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,da,de,fr,jp,nl,no,pl,ru,sv,zh\". }\n}\nORDER BY ?time\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/event_future-events.sparql",
      "title": "event_future-events",
      "description": null
    },
    {
      "query_id": "scholia.event_past-events",
      "namespace": "scholia",
      "name": "event_past-events",
      "sparql": "SELECT ?time ?short_name \n?event ?eventLabel (CONCAT(\"/event/\", SUBSTR(STR(?event), 32)) AS ?eventUrl)\n?location ?locationLabel (CONCAT(\"/location/\", SUBSTR(STR(?location), 32)) AS ?locationUrl)\nWITH {\n  SELECT DISTINCT ?event WHERE {\n    # This union seems to be faster than a VALUES-based query\n    { ?event wdt:P31 / wdt:P279* wd:Q52260246 . }\n    UNION \n    { ?event wdt:P31 / wdt:P279* wd:Q46855 . }\n  }\n} AS %events\nWITH {\n  SELECT \n    ?event \n    (xsd:date(MIN(?times)) AS ?time)\n    (SAMPLE(?locations) AS ?location)\n    (SAMPLE(?short_names) AS ?short_name)\n  WHERE {\n    INCLUDE %events\n    \n    ?event wdt:P580 | wdt:P585 ?times .\n    FILTER (?times < NOW())\n  \n    OPTIONAL { ?event wdt:P276 ?locations }\n    OPTIONAL { ?event wdt:P1813 ?short_names }\n  }\n  GROUP BY ?event\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,da,de,fr,jp,nl,no,pl,ru,sv,zh\". }\n}\nORDER BY DESC(?time)\nLIMIT 200\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/event_past-events.sparql",
      "title": "event_past-events",
      "description": null
    },
    {
      "query_id": "scholia.event_people",
      "namespace": "scholia",
      "name": "event_people",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  (?number_of_publications AS ?works)\n  ?person ?personLabel ?personDescription\n  ?roles\n  ?example_work ?example_workLabel\nWITH {\n  SELECT\n    (GROUP_CONCAT(DISTINCT ?role; separator=\", \") AS ?roles) ?person\n  WHERE {\n    {\n      # speaker added directly in the target item\n      target: wdt:P823 ?person .\n      # BIND(wd:Q9379869 AS ?role)\n      BIND(\"speaker\" AS ?role)\n    }\n    UNION\n    {\n      # speaker inferred from presentation items related to the event-target\n      ?presentation wdt:P823 ?person; wdt:P5072 target: \n      BIND(\"speaker\" AS ?role)\n    }\n    UNION\n    {\n      # organizer\n      target: wdt:P664 ?person .\n      #BIND(wd:Q2029941 AS ?role)\n      BIND(\"organizer\" AS ?role)\n    }\n    UNION\n    {\n      # participant\n      ?person wdt:P1344 | ^wdt:P710 target: .\n      BIND(\"participant\" AS ?role)\n    }\n    UNION\n    {\n      # editor\n      ?person ^wdt:P98 / wdt:P4745 target: .\n      BIND(\"editor of proceedings\" AS ?role)\n    }\n    UNION\n    {\n      # author\n      ?person ^wdt:P50 / wdt:P1433 / wdt:P4745 target: .\n      BIND(\"author\" AS ?role)\n    }\n    UNION\n    {\n      # program committee member\n      target: wdt:P5804 ?person .\n      BIND(\"program committee member\" AS ?role)\n    }\n  }\n  GROUP BY ?person\n} AS %people  \nWITH {\n  SELECT\n    (COUNT(?work) AS ?number_of_publications)\n    ?roles\n    ?person (SAMPLE(?work) AS ?example_work)\n  WHERE {\n    INCLUDE %people .\n    ?person wdt:P31 wd:Q5.\n    OPTIONAL { ?work wdt:P50 ?person . }\n  }\n  GROUP BY ?roles ?person\n} AS %results\nWHERE {\n  INCLUDE %results\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,da,de,es,fr,jp,no,ru,sv,zh\". }\n}\nORDER BY DESC(?number_of_publications)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/event_people.sparql",
      "title": "event_people",
      "description": null
    },
    {
      "query_id": "scholia.event_presentations",
      "namespace": "scholia",
      "name": "event_presentations",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?work ?workLabel (CONCAT(\"/work/\", SUBSTR(STR(?work), 32)) AS ?workUrl)\n  ?authors ?authorsUrl\n  ?topics ?topicsUrl\nWITH {\n  SELECT \n    ?work\n    (GROUP_CONCAT(DISTINCT ?author_label; separator=\", \") AS ?authors)\n    (CONCAT(\"../authors/\", GROUP_CONCAT(DISTINCT SUBSTR(STR(?author), 32); separator=\",\")) AS ?authorsUrl)    \n    (GROUP_CONCAT(DISTINCT ?topic_label; separator=\", \") AS ?topics)\n    (CONCAT(\"../topics/\", GROUP_CONCAT(DISTINCT SUBSTR(STR(?topic), 32); separator=\",\")) AS ?topicsUrl)\n  WHERE {\n    ?work wdt:P5072 target: .\n    OPTIONAL {\n      ?work wdt:P50 ?author .\n      ?author rdfs:label ?author_label . FILTER(LANG(?author_label) = \"en\")\n    }\n    OPTIONAL {\n      ?work wdt:P921 ?topic .\n      ?topic rdfs:label ?topic_label . FILTER(LANG(?topic_label) = \"en\")\n    }\n  }\n  GROUP BY ?work\n} AS %results\nWHERE {\n  INCLUDE %results\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/event_presentations.sparql",
      "title": "event_presentations",
      "description": null
    },
    {
      "query_id": "scholia.event_proceedings",
      "namespace": "scholia",
      "name": "event_proceedings",
      "sparql": "# Scholia\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?work ?workLabel\n  ?authors ?authorsUrl\n  ?topics ?topicsUrl\nWITH {\n  SELECT \n    ?work\n    (GROUP_CONCAT(DISTINCT ?author_label; separator=\", \") AS ?authors)\n    (CONCAT(\"../authors/\", GROUP_CONCAT(DISTINCT SUBSTR(STR(?author), 32); separator=\",\")) AS ?authorsUrl)    \n    (GROUP_CONCAT(DISTINCT ?topic_label; separator=\", \") AS ?topics)\n    (CONCAT(\"../topics/\", GROUP_CONCAT(DISTINCT SUBSTR(STR(?topic), 32); separator=\",\")) AS ?topicsUrl)\n  WHERE {\n    ?work wdt:P1433 / wdt:P4745 target: .\n    OPTIONAL {\n      ?work wdt:P50 ?author .\n      ?author rdfs:label ?author_label . FILTER(LANG(?author_label) = \"en\")\n    }\n    OPTIONAL {\n      ?work wdt:P921 ?topic .\n      ?topic rdfs:label ?topic_label . FILTER(LANG(?topic_label) = \"en\")\n    }\n  }\n  GROUP BY ?work\n} AS %results\nWHERE {\n  INCLUDE %results\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/event_proceedings.sparql",
      "title": "event_proceedings",
      "description": null
    },
    {
      "query_id": "scholia.event_recent-publications",
      "namespace": "scholia",
      "name": "event_recent-publications",
      "sparql": "# Recent publications by people associated with event\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?publication_date\n  ?work ?workLabel\n  ?authors ?authorsUrl\nWITH {\n  SELECT\n    DISTINCT ?person\n  WHERE {\n    {\n      # speaker, organizer, program committe member \n      target: wdt:P823 | wdt:P664 | wdt:P5804 ?person .\n    }\n    UNION\n    {\n      # participant\n      ?person wdt:P1344 | ^wdt:P710 target: .\n    }\n    UNION\n    {\n      # author\n      ?person ^wdt:P50 / wdt:P1433 / wdt:P4745 target: .\n    }\n    UNION\n    {\n      # editor of proceedings\n      ?person ^wdt:P98 / wdt:P4745 target: .\n    }\n  }\n} AS %people  \nWITH {\n  SELECT\n    (xsd:date(MAX(?publication_datetime)) AS ?publication_date)\n    ?work\n    (GROUP_CONCAT(DISTINCT ?person_label; separator=\", \") AS ?authors)\n    (CONCAT(\"../authors/\", GROUP_CONCAT(DISTINCT SUBSTR(STR(?person), 32); separator=\",\")) AS ?authorsUrl)\n  WHERE {\n    INCLUDE %people .\n    ?work wdt:P50 ?person ; wdt:P577 ?publication_datetime .\n    ?person rdfs:label ?person_label . FILTER(LANG(?person_label) = 'en')\n  }\n  GROUP BY ?work\n} AS %results\nWHERE {\n  INCLUDE %results\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,da,de,es,fr,jp,no,ru,sv,zh\". }\n}\nORDER BY DESC(?publication_date)\nLIMIT 500\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/event_recent-publications.sparql",
      "title": "event_recent-publications",
      "description": null
    },
    {
      "query_id": "scholia.event_related-events-people",
      "namespace": "scholia",
      "name": "event_related-events-people",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?score ?event ?eventLabel ?eventDescription\n  ?example_person ?example_personLabel\nWHERE {\n  { \n    SELECT\n      (COUNT(DISTINCT ?person) AS ?score) ?event\n      (SAMPLE(?person) AS ?example_person)\n    WHERE {\n      ?person ^wdt:P823 | ^wdt:P664 | wdt:P1344 | ^wdt:P710 | (^wdt:P98 / wdt:P4745) | (^wdt:P50 / wdt:P1433 / wdt:P4745 ) | ^wdt:P5804 target: , ?event .\n      FILTER (?event != target:)\n    }\n    GROUP BY ?event\n    ORDER BY DESC(?score)\n    LIMIT 200\n  } \n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,no,ru,sv,zh\". }\n}\nORDER BY DESC(?score)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/event_related-events-people.sparql",
      "title": "event_related-events-people",
      "description": null
    },
    {
      "query_id": "scholia.event_related-events-timelocation",
      "namespace": "scholia",
      "name": "event_related-events-timelocation",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  (ROUND(1000 * ?score_) / 1000 AS ?score)\n  (ROUND(1000 * ?time_score_) / 1000 AS ?time_score)\n  (ROUND(1000 * ?location_score_) / 1000 AS ?location_score) \n  ?event ?eventLabel\nWITH {\n  SELECT ?event_type WHERE {\n    VALUES ?event_type { wd:Q2020153 wd:Q46855 wd:Q40444998 }\n  }\n} AS %event_types\nWITH {\n  SELECT ?event WHERE {\n    INCLUDE %event_types\n    ?event wdt:P31 / wdt:P279* ?event_type .\n  }\n} AS %events\nWITH {\n  SELECT\n    (SUM(?scores) AS ?score_)\n    (MAX(?time_scores) AS ?time_score_)\n    (MAX(?location_scores) AS ?location_score_)\n    ?event\n  WHERE {\n    INCLUDE %events \n          \n    { \n      # Around the same time\n      target: wdt:P580 | wdt:P585 ?time0 .\n      ?event wdt:P580 | wdt:P585 ?time .\n      BIND((365.25 * YEAR(?time0) + 30.5 * MONTH(?time0) + DAY(?time0)) AS ?day0)\n      BIND((365.25 * YEAR(?time) + 30.5 * MONTH(?time) + DAY(?time)) AS ?day)\n      \n      # TODO: multiple days cause double counting\n      BIND(20 / (1 + ABS(?day - ?day0)) AS ?time_scores)\n    }\n    # UNION\n    {\n      SELECT ?event (MAX(?inverse_distance) AS ?location_scores) WHERE {\n        INCLUDE %events \n                \n        # geocoordinate of the query event\n        target: wdt:P276? / wdt:P159? / wdt:P625 ?geo0 .\n        \n        # geocoordinate of other events\n        ?event wdt:P276? / wdt:P625 ?geo .\n        \n        # inverse distance\n        BIND((200 / (1 + geof:distance(?geo, ?geo0))) AS ?inverse_distance)\n      }\n      GROUP BY ?event\n    }\n\n    # Should online event be listed? \n    # UNION\n    # {\n    #   VALUES ?online_event { wd:Q1543677 wd:Q98381855 wd:Q98381912 }\n    #   ?event wdt:P31 ?online_event .\n    #   BIND(200 AS ?location_scores)\n    # }\n  \n    BIND((?time_scores * ?location_scores) AS ?scores)\n  }\n  GROUP BY ?event\n  \n} AS %results\nWHERE {\n  INCLUDE %results\n  FILTER (?event != target:)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,es,fr,jp,no,ru,sv,zh\". }\n}\nORDER BY DESC(?score)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/event_related-events-timelocation.sparql",
      "title": "event_related-events-timelocation",
      "description": null
    },
    {
      "query_id": "scholia.event_sponsors",
      "namespace": "scholia",
      "name": "event_sponsors",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?sponsor ?sponsorLabel ?sponsorUrl ?sponsorDescription\nWHERE {\n  target: wdt:P859 ?sponsor .\n  BIND(CONCAT(\"/sponsor/\", SUBSTR(STR(?sponsor), 32)) AS ?sponsorUrl)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/event_sponsors.sparql",
      "title": "event_sponsors",
      "description": null
    },
    {
      "query_id": "scholia.event_timeline",
      "namespace": "scholia",
      "name": "event_timeline",
      "sparql": "#defaultView:Timeline\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?time ?item ?itemLabel ?image\nWHERE {\n  {\n    target: wdt:P580 | wdt:P585 ?time .\n    OPTIONAL { target: wdt:P18 ?image . }\n    BIND(wd:Q24575110 AS ?item)\n  }\n  UNION\n  {\n    target: wdt:P582 ?time .\n    OPTIONAL { target: wdt:P18 ?image . }\n    BIND(wd:Q24575125 AS ?item)\n  }\n  UNION \n  { target: p:P793 [ ps:P793 ?item ; pq:P585 ?time ] . }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\n\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/event_timeline.sparql",
      "title": "event_timeline",
      "description": null
    },
    {
      "query_id": "scholia.event_topic-scores",
      "namespace": "scholia",
      "name": "event_topic-scores",
      "sparql": "# Topics of works authored by people associated with an event\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?score ?topic ?topicLabel ?topicDescription\nWITH {\n  SELECT\n    DISTINCT ?person\n  WHERE {\n    {\n      # speaker, organizer, program committee member\n      target: wdt:P823 | wdt:P664 | wdt:P5804 ?person .\n    }\n    UNION\n    {\n      # participant\n      ?person wdt:P1344 | ^wdt:P710 target: .\n    }\n    UNION\n    {\n      # author\n      ?person ^wdt:P50 / wdt:P1433 / wdt:P4745 target: .\n    }\n  }\n} AS %people  \nWITH {\n  SELECT\n    (SUM(?score_) AS ?score) ?topic\n  WHERE {\n    {\n      target: wdt:P921 ?topic .\n      BIND(50 AS ?score_)\n    }\n    UNION\n    {\n      INCLUDE %people\n      ?person ^wdt:P50 / wdt:P921 ?topic .\n      BIND(1 AS ?score_)\n    }\n    UNION\n    {\n      target: ^wdt:P4745 / ^wdt:P1433 / wdt:P921 ?topic .\n      BIND(7 AS ?score_)\n    }\n  }\n  GROUP BY ?topic\n} AS %results\nWHERE {\n  INCLUDE %results\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,da,de,es,fr,jp,no,ru,sv,zh\". }\n}\nORDER BY DESC(?score)\nLIMIT 200\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/event_topic-scores.sparql",
      "title": "event_topic-scores",
      "description": null
    },
    {
      "query_id": "scholia.event_upcoming-deadlines",
      "namespace": "scholia",
      "name": "event_upcoming-deadlines",
      "sparql": "SELECT\n  ?date\n  ?deadline ?deadlineLabel\n  ?short_name\n  ?event ?eventLabel (CONCAT(\"/event/\", SUBSTR(STR(?event), 32)) AS ?eventUrl)\n  ?location ?locationLabel (CONCAT(\"/location/\", SUBSTR(STR(?location), 32)) AS ?locationUrl)\nWITH {\n  SELECT\n    ?datetime ?deadline ?event\n    (SAMPLE(?location_) AS ?location) \n    (SAMPLE(?short_name_) AS ?short_name)\n  WHERE {\n    ?event p:P793 ?key_event_statement . \n    ?key_event_statement ps:P793 ?deadline ; \n                         pq:P585 ?datetime .\n    ?deadline wdt:P279* wd:Q2404808 .\n\n    # Subtract a day from now to get events on the now date\n    FILTER (NOW() - \"P1DT0H0M0.000S\"^^xsd:duration < ?datetime)\n    OPTIONAL { ?event wdt:P276 ?location_ }\n    OPTIONAL { ?event wdt:P1813 ?short_name_ }\n  }\n  GROUP BY ?datetime ?deadline ?event\n  ORDER BY(?datetime)\n  LIMIT 200  \n} AS %events\nWHERE {\n  INCLUDE %events\n  \n  BIND(xsd:date(?datetime) AS ?date)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,da,de,es,fr,jp,nl,no,ru,sv,zh\". }\n}\nORDER BY(?date)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/event_upcoming-deadlines.sparql",
      "title": "event_upcoming-deadlines",
      "description": null
    },
    {
      "query_id": "scholia.event_uses",
      "namespace": "scholia",
      "name": "event_uses",
      "sparql": "# Use by people associated with an event\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?number_of_persons\n  ?use ?useLabel (CONCAT(\"/use/\", SUBSTR(STR(?use), 32)) AS ?useUrl) ?useDescription\n  ?example_person ?example_personLabel (CONCAT(\"/author/\", SUBSTR(STR(?example_person), 32)) AS ?example_personUrl)\nWITH {\n  SELECT\n    DISTINCT ?person\n  WHERE {\n    {\n      # speaker, organizer, program committee member\n      target: wdt:P823 | wdt:P664 | wdt:P5804 ?person .\n    }\n    UNION\n    {\n      # participant\n      ?person wdt:P1344 | ^wdt:P710 target: .\n    }\n    UNION\n    {\n      # author\n      ?person ^wdt:P50 / wdt:P1433 / wdt:P4745 target: .\n    }\n  }\n} AS %people  \nWITH {\n  SELECT\n    (COUNT(DISTINCT ?person) AS ?number_of_persons)\n    ?use\n    (SAMPLE(?person) AS ?example_person)\n  WHERE {\n    INCLUDE %people\n    ?person ^wdt:P50 / wdt:P4510 ?use .\n  }\n  GROUP BY ?use\n} AS %results\nWHERE {\n  INCLUDE %results\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,da,de,es,fr,jp,no,ru,sv,zh\". }\n}\nORDER BY DESC(?number_of_persons)\nLIMIT 200\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/event_uses.sparql",
      "title": "event_uses",
      "description": null
    },
    {
      "query_id": "scholia.gene_identifiers",
      "namespace": "scholia",
      "name": "gene_identifiers",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n# title: identifiers for this gene\nSELECT\n  ?Identifier ?IdentifierLabel\n  ?Value (SAMPLE(?idUrls) as ?ValueUrl)\n  ?IdentifierDescription\nWITH {\n  SELECT ?Identifier ?Value ?formatterurl WHERE {\n    target: ?IDdir ?Value .\n    ?Identifier wikibase:directClaim ?IDdir ;\n            wdt:P31 wd:Q42415497 .\n    OPTIONAL { \n      ?Identifier wdt:P1630 ?formatterurl .\n    }\n  } LIMIT 500\n} AS %RESULTS {\n  {\n    SELECT * WHERE {\n      INCLUDE %RESULTS\n      BIND(IRI(REPLACE(?formatterurl, '\\\\\\\\$1', str(?Value))) AS ?idUrls).\n    }\n  }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?Identifier ?IdentifierLabel ?IdentifierDescription ?Value\nORDER BY ASC(?IdentifierLabel)\n\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/gene_identifiers.sparql",
      "title": "gene_identifiers",
      "description": null
    },
    {
      "query_id": "scholia.gene_orthologs",
      "namespace": "scholia",
      "name": "gene_orthologs",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?ortholog ?orthologLabel ?orthologDescription\n  ?taxon ?taxonLabel ?taxonDescription\nWITH {\n  SELECT ?ortholog ?taxon\n  WHERE {\n    target: wdt:P31 wd:Q7187;\n         wdt:P684 ?ortholog .\n    ?ortholog wdt:P703 ?taxon .\n  }\n} AS %result \nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/gene_orthologs.sparql",
      "title": "gene_orthologs",
      "description": null
    },
    {
      "query_id": "scholia.gene_proteins",
      "namespace": "scholia",
      "name": "gene_proteins",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?protein ?proteinLabel ?proteinDescription\nWITH {\n  SELECT ?protein\n  WHERE {\n    target: wdt:P31 wd:Q7187 ;\n      wdt:P688 ?protein .\n  }\n} AS %result \nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/gene_proteins.sparql",
      "title": "gene_proteins",
      "description": null
    },
    {
      "query_id": "scholia.gene_transcripts",
      "namespace": "scholia",
      "name": "gene_transcripts",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?transcript_ID\n  ?reference ?referenceLabel ?referenceDescription\nWITH {\n  SELECT ?transcript_ID ?reference\n  WHERE {\n      target: wdt:P31 wd:Q7187;\n                 p:P704 ?transcriptid_statement .\n    ?transcriptid_statement ps:P704 ?transcript_ID ;\n                            prov:wasDerivedFrom/pr:P248 ?reference .\n  }\n} AS %result \nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/gene_transcripts.sparql",
      "title": "gene_transcripts",
      "description": null
    },
    {
      "query_id": "scholia.gene_variants",
      "namespace": "scholia",
      "name": "gene_variants",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?variant ?variantLabel ?variantDescription\n  ?types\nWITH {\n  SELECT ?variant ?type\n  WHERE {\n    ?variant wdt:P3433 target:\n  }\n} AS %variants\nWITH {\n  SELECT ?variant (GROUP_CONCAT(?type_label; separator=\" // \") AS ?types) WHERE {\n    INCLUDE %variants\n    OPTIONAL {\n      ?variant wdt:P279 ?variantType . \n      ?variantType rdfs:label ?type_label .  FILTER (lang(?type_label) = 'en')\n    }\n  }\n  GROUP BY ?variant\n} AS %result \nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/gene_variants.sparql",
      "title": "gene_variants",
      "description": null
    },
    {
      "query_id": "scholia.index-statistics_statistics",
      "namespace": "scholia",
      "name": "index-statistics_statistics",
      "sparql": "SELECT ?count ?description\nWHERE {\n{ {SELECT (COUNT(*) AS ?c) WHERE {?s ?p ?o} } BIND(\"Total number of triples\" AS ?d)} UNION\n{ {SELECT (COUNT(*) AS ?c) WHERE {?s rdf:type wikibase:BestRank } } BIND(\"Total number of statements\" AS ?d)} UNION\n{ {SELECT (COUNT(*) AS ?c) WHERE {?p a wikibase:Property} } BIND(\"Total number of properties\" AS ?d)} UNION\n{ {SELECT (COUNT(*) AS ?c) WHERE {[] wdt:P50 []} } BIND(\"Links from works to authors\" AS ?d)} UNION\n{ {SELECT (COUNT(*) AS ?c) WHERE {[] wdt:P69 []} } BIND(\"Links from people to where they were educated\" AS ?d)} UNION\n{ {SELECT (COUNT(*) AS ?c) WHERE {[] wdt:P108 []} } BIND(\"Links from people to employers\" AS ?d)} UNION\n{ {SELECT (COUNT(*) AS ?c) WHERE {[] wdt:P166 []} } BIND(\"Links from people to awards\" AS ?d)} UNION\n{ {SELECT (COUNT(*) AS ?c) WHERE {[] wdt:P212 []} } BIND(\"ISBN 13 book numbers\" AS ?d)} UNION\n{ {SELECT (COUNT(*) AS ?c) WHERE {[] wdt:P225 []} } BIND(\"Taxon names\" AS ?d)} UNION\n{ {SELECT (COUNT(*) AS ?c) WHERE {[] wdt:P234 []} } BIND(\"InChIs\" AS ?d)} UNION\n{ {SELECT (COUNT(*) AS ?c) WHERE {[] wdt:P236 []} } BIND(\"ISSNs\" AS ?d)} UNION\n{ {SELECT (COUNT(*) AS ?c) WHERE {[] wdt:P496 []} } BIND(\"ORCIDs\" AS ?d)} UNION\n{ {SELECT (COUNT(*) AS ?c) WHERE {[] wdt:P625 []} } BIND(\"Geolocations\" AS ?d)} UNION\n{ {SELECT (COUNT(*) AS ?c) WHERE {[] wdt:P638 []} } BIND(\"Protein Data Bank IDs\" AS ?d)} UNION\n{ {SELECT (COUNT(*) AS ?c) WHERE {[] wdt:P686 []} } BIND(\"Gene Ontology IDs\" AS ?d)} UNION\n{ {SELECT (COUNT(*) AS ?c) WHERE {[] wdt:P698 []} } BIND(\"PubMed ID\" AS ?d)} UNION\n{ {SELECT (COUNT(*) AS ?c) WHERE {[] wdt:P818 []} } BIND(\"arXiv IDs\" AS ?d)} UNION\n{ {SELECT (COUNT(*) AS ?c) WHERE {[] wdt:P859 []} } BIND(\"Links to sponsors\" AS ?d)} UNION\n{ {SELECT (COUNT(*) AS ?c) WHERE {[] wdt:P921 []} } BIND(\"Links from works to their main subjects\" AS ?d)} UNION\n{ {SELECT (COUNT(*) AS ?c) WHERE {[] wdt:P932 []} } BIND(\"Items with a PubMed Central ID\" AS ?d)} UNION\n{ {SELECT (COUNT(*) AS ?c) WHERE {[] wdt:P356 []} } BIND(\"Items with a DOI\" AS ?d)} UNION\n{ {SELECT (COUNT(*) AS ?c) WHERE {[] wdt:P1416 []} } BIND(\"Links from people to their affiliations\" AS ?d)} UNION\n{ {SELECT (COUNT(*) AS ?c) WHERE {[] wdt:P2093 []} } BIND(\"Author name strings\" AS ?d)} UNION\n{ {SELECT (COUNT(*) AS ?c) WHERE {[] wdt:P2427 []} } BIND(\"Items with a GRID ID\" AS ?d)} UNION\n{ {SELECT (COUNT(*) AS ?c) WHERE {[] wdt:P2860 []} } BIND(\"Citations\" AS ?d)} UNION\n{ {SELECT (COUNT(*) AS ?c) WHERE {[] wdt:P31 wd:Q13442814.} } BIND(\"Scholarly articles\" AS ?d)} UNION\n{ {SELECT (COUNT(*) AS ?c) WHERE {[] wdt:P31 []} } BIND(\"Things in Wikidata\" AS ?d)} UNION\n{ {SELECT (COUNT(DISTINCT ?work) AS ?c) WHERE { { ?work wdt:P31 wd:Q45182324 . } UNION { ?work wdt:P793 wd:Q7316896 . } UNION { ?work wdt:P5824 [] . } } } BIND(\"Retracted articles\" AS ?d)}\nBIND (?c AS ?count)\nBIND (?d AS ?description)\n}\nORDER BY DESC(?c)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/index-statistics_statistics.sparql",
      "title": "index-statistics_statistics",
      "description": null
    },
    {
      "query_id": "scholia.language-index_works-written-in-the-language",
      "namespace": "scholia",
      "name": "language-index_works-written-in-the-language",
      "sparql": "SELECT\n  ?count\n  \n  ?language ?languageLabel\n  (CONCAT(\"/language/\", SUBSTR(STR(?language), 32)) AS ?languageUrl)\n   ?languageDescription \nWITH {\n  SELECT\n    (COUNT(*) AS ?count)\n    ?language\n  WHERE {\n    [] wdt:P407 ?language   \n  }\n  GROUP BY ?language \n} AS %result\nWHERE {\n  INCLUDE %result\n\n  # This is to get rid of a language number of unknown values\n  FILTER EXISTS { ?language ?p [] }\n\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?count)\n\n  ",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/language-index_works-written-in-the-language.sparql",
      "title": "language-index_works-written-in-the-language",
      "description": null
    },
    {
      "query_id": "scholia.language_recently-published-works",
      "namespace": "scholia",
      "name": "language_recently-published-works",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?publication_date\n  ?work ?workLabel ?workDescription (CONCAT(\"/work/\", SUBSTR(STR(?work), 32)) AS ?workUrl)\nWITH {\n  SELECT\n    ?publication_date_\n    ?work\n  WHERE {\n    VALUES ?publication_date_ {\n      {% for day in range(-32, 1) %} {{ '\"{}T00:00:00Z\"^^xsd:dateTime'.format((datetime.datetime.now().date() + datetime.timedelta(day)).isoformat()) }} {% endfor %} \n    }\n    ?work wdt:P407 target: ;\n          wdt:P577 ?publication_date_ ;\n  }\n  LIMIT 1000\n} AS %works_sample\nWITH {\n  SELECT\n    (xsd:date(MAX(?publication_date_)) AS ?publication_date)\n    ?work\n  WHERE {\n    INCLUDE %works_sample\n  }\n  GROUP BY ?work\n  ORDER BY DESC(?publication_date)\n  LIMIT 500\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?publication_date)\n\n  ",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/language_recently-published-works.sparql",
      "title": "language_recently-published-works",
      "description": null
    },
    {
      "query_id": "scholia.lexeme-index_lexemes",
      "namespace": "scholia",
      "name": "lexeme-index_lexemes",
      "sparql": "SELECT \n  ?count\n  ?lexeme (?lexeme_label AS ?lexemeLabel) (CONCAT(\"/lexeme/\", SUBSTR(STR(?lexeme), 32)) AS ?lexemeUrl)\n  ?language ?languageLabel\n  ?example_work ?example_workLabel ?example_workDescription (CONCAT(\"/work/\", SUBSTR(STR(?example_work), 32)) AS ?example_workUrl)\nWHERE {\n  {\n    SELECT\n      (COUNT(DISTINCT ?work) AS ?count)\n      ?lexeme\n      (SAMPLE(?language_) AS ?language) \n      (SAMPLE(?work) AS ?example_work)\n    WHERE {\n      { ?work wdt:P6254 ?lexeme . }\n      UNION\n      { ?lexeme wdt:P1343 ?work ; dct:language [] . }\n      ?lexeme dct:language ?language_ .\n    }\n    GROUP BY ?lexeme\n    ORDER BY DESC(?count)\n    LIMIT 500\n  }\n  ?lexeme wikibase:lemma ?lexeme_label\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],cz,da,de,en,es,fr,jp,nl,no,pl,ru,sv,zh\" . }\n}\nORDER BY DESC(?count)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/lexeme-index_lexemes.sparql",
      "title": "lexeme-index_lexemes",
      "description": null
    },
    {
      "query_id": "scholia.lexeme_works",
      "namespace": "scholia",
      "name": "lexeme_works",
      "sparql": "SELECT DISTINCT ?work ?workLabel ?workDescription {\n  wd:{{ lexeme }} wdt:P1343 | ^wdt:P6254 ?work\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,cz,da,de,es,fi,fr,it,nl,nn,ru,sv,zh\". }\n}",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/lexeme_works.sparql",
      "title": "lexeme_works",
      "description": null
    },
    {
      "query_id": "scholia.license-index_work-counts",
      "namespace": "scholia",
      "name": "license-index_work-counts",
      "sparql": "SELECT \n  ?count \n  ?license ?licenseLabel ?licenseDescription (CONCAT(\"/license/\", SUBSTR(STR(?license), 32)) AS ?licenseUrl)\nWITH {\n  SELECT \n    (COUNT(*) AS ?count)\n    ?license\n  WHERE {\n    [] wdt:P275 ?license .\n  }\n  GROUP BY ?license\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?count)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/license-index_work-counts.sparql",
      "title": "license-index_work-counts",
      "description": null
    },
    {
      "query_id": "scholia.license_recently-published-works",
      "namespace": "scholia",
      "name": "license_recently-published-works",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?publication_date\n  ?work ?workLabel ?workDescription\nWITH {\n  SELECT\n    ?publication_date_\n    ?work\n  WHERE {\n    ?work wdt:P275 target: . \n    OPTIONAL { ?work wdt:P577 ?publication_date_ . }\n  }\n  ORDER BY DESC(?publication_date_)\n  LIMIT 1100\n} AS %works\nWITH {\n  SELECT\n    (xsd:date(MAX(?publication_date_)) AS ?publication_date)\n    ?work\n  WHERE {\n    INCLUDE %works\n  }\n  GROUP BY ?work\n  ORDER BY DESC(?publication_date)\n  LIMIT 1000\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?publication_date)\n\n  ",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/license_recently-published-works.sparql",
      "title": "license_recently-published-works",
      "description": null
    },
    {
      "query_id": "scholia.license_types-of-work",
      "namespace": "scholia",
      "name": "license_types-of-work",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?count\n  ?type ?typeLabel ?typeDescription\nWITH {\n  SELECT\n    (COUNT(*) AS ?count)\n    ?type\n \n  WHERE {\n    [] wdt:P275 target: ; \n       wdt:P31 ?type .\n  }\n  GROUP BY ?type\n} AS %types\nWHERE {\n  INCLUDE %types\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?count)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/license_types-of-work.sparql",
      "title": "license_types-of-work",
      "description": null
    },
    {
      "query_id": "scholia.location-topic_nearby-researchers",
      "namespace": "scholia",
      "name": "location-topic_nearby-researchers",
      "sparql": "PREFIX target1: <http://www.wikidata.org/entity/{{ q1 }}>\nPREFIX target2: <http://www.wikidata.org/entity/{{ q2 }}>\n\n# title: Nearby researchers that work with a specific topic and near a specified geographical entity\nSELECT\n  ?score\n  ?author ?authorLabel (CONCAT(\"/author/\", SUBSTR(STR(?author), 32)) AS ?authorUrl)\n  ?example_work ?example_workLabel (CONCAT(\"/work/\", SUBSTR(STR(?example_work), 32)) AS ?example_workUrl)\nWITH {\n  # Universities, research centers, etc.\n  SELECT ?university WHERE {\n    VALUES ?university { wd:Q3918 wd:Q1371037 wd:Q7315155 wd:Q31855 wd:Q2385804 }\n  }\n} AS %universities\nWITH {\n  SELECT ?organization ?distance ?other_geo {\n    target1: wdt:P625 ?geo .\n    SERVICE wikibase:around { \n      ?organization wdt:P625 ?other_geo .\n      bd:serviceParam wikibase:center ?geo .\n      bd:serviceParam wikibase:radius \"50\" .\n      bd:serviceParam wikibase:distance ?distance .\n    }\n  }\n} AS %near_organizations\nWITH {\n  # Academic institutions on all levels\n  SELECT DISTINCT ?organization ?other_geo ?distance WHERE {\n    INCLUDE %universities\n    INCLUDE %near_organizations\n            \n    ?organization wdt:P361* / wdt:P31 / wdt:P279* ?university .\n  }\n} AS %organizations\nWITH {\n  # Compute distance for authors\n  SELECT\n    (MAX(?inverse_distance_) AS ?inverse_distance)\n    ?author\n  WHERE {\n    INCLUDE %organizations\n\n    BIND(1 / ?distance AS ?inverse_distance_)\n    ?author wdt:P108 | wdt:P1416 ?organization .  \n  }\n  GROUP BY ?author\n} AS %authors_with_distance\nWITH {\n  SELECT\n    ?author\n    (SUM(?topic_score) * MAX(?inverse_distance) AS ?score)\n    (SAMPLE(?work) AS ?example_work)\n  WHERE {\n    INCLUDE %authors_with_distance\n    {\n      ?work wdt:P50 ?author .\n      ?work wdt:P921 / wdt:P279* target2: . BIND(3 AS ?topic_score)\n    }\n    UNION\n    { ?author wdt:P101 target2: . BIND(20 AS ?topic_score) }\n  }\n  GROUP BY ?author\n} AS %results\nWHERE {\n  INCLUDE %results\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\". }\n}\nORDER BY DESC(?score) \n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/location-topic_nearby-researchers.sparql",
      "title": "location-topic_nearby-researchers",
      "description": null
    },
    {
      "query_id": "scholia.location_nearby-locations-as-topics-in-works",
      "namespace": "scholia",
      "name": "location_nearby-locations-as-topics-in-works",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  (ROUND(1000 * ?distance_) / 1000 AS ?distance)\n  ?work ?workLabel (CONCAT(\"/work/\", SUBSTR(STR(?work), 32)) AS ?workUrl)\n  ?location ?locationLabel (CONCAT(\"/topic/\", SUBSTR(STR(?location), 32)) AS ?locationUrl)\nWITH {\n  SELECT\n    ?work ?location\n    (min(?distances) AS ?distance_)\n  WHERE {\n    ?work wdt:P921 ?location . \n\n    ?location p:P625 ?other_geo_statement . \n\n    # Some locations have unknown geocoordinates indicated with novalue\n    # psv will remove them. \n    ?other_geo_statement ps:P625 ?other_geo .\n    ?other_geo_statement psv:P625 [] .\n\n    # Remove articles from encyclopedia and dictionaries\n    # Filter is more expensive when applied here. \n    MINUS { ?work wdt:P31 wd:Q17329259 }\n    MINUS { ?work wdt:P31 wd:Q4423781 }\n   \n    target: wdt:P159* / wdt:P625 ?geo .\n    BIND(geof:distance(?other_geo, ?geo) AS ?distances)\n  }\n  GROUP BY ?work ?location\n  ORDER BY ?distance_\n  LIMIT 500\n} AS %results\nWHERE {\n  INCLUDE %results\n          \n  # Label the result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,cs,da,de,es,jp,nl,no,ru,sv,zh\". }\n}\nORDER BY ?distance\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/location_nearby-locations-as-topics-in-works.sparql",
      "title": "location_nearby-locations-as-topics-in-works",
      "description": null
    },
    {
      "query_id": "scholia.location_nearby-organizations",
      "namespace": "scholia",
      "name": "location_nearby-organizations",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n# title: Nearby academic institutions around a specified geographic entity.\nSELECT\n  ?distance ?unit ?unitLabel\n  ?organization ?organizationLabel ?organizationDescription (CONCAT(\"/organization/\", SUBSTR(STR(?organization), 32)) AS ?organizationUrl)\nWITH {\n  # Universities, research centers, etc.\n  SELECT ?university WHERE {\n    VALUES ?university { wd:Q3918 wd:Q1371037 wd:Q7315155  wd:Q31855 }\n  }\n} AS %universities\nWITH {\n  # Academic institutions on all levels\n  SELECT DISTINCT ?organization ?other_geo WHERE {\n    INCLUDE %universities\n    ?organization wdt:P361* / wdt:P31 / wdt:P279* ?university .\n    ?organization wdt:P625 ?other_geo .\n  }\n} AS %organizations\nWITH {\n  # Compute distance.\n  SELECT ?organization ?distance ?unit WHERE {\n    INCLUDE %organizations\n    target: wdt:P159* / wdt:P625 ?geo .\n    BIND(geof:distance(?other_geo, ?geo) AS ?distance)\n    BIND(wd:Q828224 AS ?unit)\n    FILTER(?distance < 250)\n  }\n} AS %results\nWHERE {\n  INCLUDE %results\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\". }\n}\nORDER BY ?distance\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/location_nearby-organizations.sparql",
      "title": "location_nearby-organizations",
      "description": null
    },
    {
      "query_id": "scholia.ontology-index_most-used-ontology",
      "namespace": "scholia",
      "name": "ontology-index_most-used-ontology",
      "sparql": "SELECT\n  ?count\n  ?ontology ?ontologyLabel ?ontologyUrl\n  ?described_by_example ?described_by_exampleLabel\n  ?example_use ?example_useLabel\nWITH {\n  SELECT\n    (COUNT(DISTINCT ?work) AS ?count)\n    ?ontology\n    (CONCAT(\"/ontology/\", SUBSTR(STR(?ontology), 32)) AS ?ontologyUrl)\n    (SAMPLE(?described_by) AS ?described_by_example)\n    (SAMPLE(?work) AS ?example_use)\n  WHERE {\n    ?work wdt:P4510 ?ontology . \n    ?ontology wdt:P31/wdt:P279* wd:Q324254 . \n    OPTIONAL { ?ontology wdt:P1343 ?described_by . }\n  }\n  GROUP BY ?ontology\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}\nORDER BY DESC(?count)\nLIMIT 500    \n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/ontology-index_most-used-ontology.sparql",
      "title": "ontology-index_most-used-ontology",
      "description": null
    },
    {
      "query_id": "scholia.ontology_data",
      "namespace": "scholia",
      "name": "ontology_data",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT DISTINCT ?description ?value ?valueUrl\nWHERE {\n  BIND(target: AS ?ontology)\n  {\n    BIND(1 AS ?order)\n    BIND(\"Website\" AS ?description)\n    ?ontology wdt:P856 ?value .\n    BIND(?value AS ?valueUrl)\n  }\n  UNION\n  {\n    SELECT\n      (2 AS ?order)\n      (\"Maintainer(s)\" AS ?description)\n      (GROUP_CONCAT(?value_; separator=\", \") AS ?value)\n      (CONCAT(\"../authors/\", GROUP_CONCAT(?q; separator=\",\")) AS ?valueUrl)\n    {\n      BIND(1 AS ?dummy)\n      target: wdt:P126 ?iri .\n      BIND(SUBSTR(STR(?iri), 32) AS ?q)\n      ?iri rdfs:label ?value_string .\n      FILTER (LANG(?value_string) = 'en')\n      BIND(COALESCE(?value_string, ?q) AS ?value_)\n    }\n    GROUP BY ?dummy\n  }\n  UNION\n  {\n    SELECT\n      (3 AS ?order)\n      (\"Contributors\" AS ?description)\n      (GROUP_CONCAT(?value_; separator=\", \") AS ?value)\n      (CONCAT(\"../authors/\", GROUP_CONCAT(?q; separator=\",\")) AS ?valueUrl)\n    {\n      BIND(1 AS ?dummy)\n      target: wdt:P50 | wdt:P178 | wdt:P767 ?iri .\n      BIND(SUBSTR(STR(?iri), 32) AS ?q) \n      ?iri rdfs:label ?value_string . \n      FILTER (LANG(?value_string) = 'en')\n      BIND(COALESCE(?value_string, ?q) AS ?value_)\n    }\n    GROUP BY ?dummy\n  }\n  UNION\n  {\n    SELECT\n      (4 AS ?order)\n      (\"Part of\" AS ?description)\n      (GROUP_CONCAT(?value_; separator=\", \") AS ?value)\n      (CONCAT(\"../topic/\", GROUP_CONCAT(?q; separator=\",\")) AS ?valueUrl)\n    {\n      BIND(1 AS ?dummy)\n      target: wdt:P361 ?iri .\n      BIND(SUBSTR(STR(?iri), 32) AS ?q) \n      ?iri rdfs:label ?value_string . \n      FILTER (LANG(?value_string) = 'en')\n      BIND(COALESCE(?value_string, ?q) AS ?value_)\n    }\n    GROUP BY ?dummy\n  }\n  UNION\n  {\n    SELECT\n      (5 AS ?order)\n      (\"License\" AS ?description)\n      (GROUP_CONCAT(?value_; separator=\", \") AS ?value)\n      (CONCAT(\"../topic/\", GROUP_CONCAT(?q; separator=\",\")) AS ?valueUrl)\n    {\n      BIND(1 AS ?dummy)\n      target: wdt:P275 ?iri .\n      BIND(SUBSTR(STR(?iri), 32) AS ?q)\n      ?iri rdfs:label ?value_string .\n      FILTER (LANG(?value_string) = 'en')\n      BIND(COALESCE(?value_string, ?q) AS ?value_)\n    }\n    GROUP BY ?dummy\n  }\n  UNION\n  {\n    SELECT\n      (6 AS ?order)\n      (\"Wikidata property\" AS ?description)\n      (GROUP_CONCAT(?value_; separator=\", \") AS ?value)\n      (CONCAT(\"../\", GROUP_CONCAT(?q; separator=\",\")) AS ?valueUrl)\n    {\n      BIND(1 AS ?dummy)\n      target: wdt:P1687 ?iri .\n      BIND(SUBSTR(STR(?iri), 32) AS ?q)\n      ?iri rdfs:label ?value_string .\n      FILTER (LANG(?value_string) = 'en')\n      BIND(COALESCE(?value_string, ?q) AS ?value_)\n    }\n    GROUP BY ?dummy\n  }\n  UNION\n  {\n    SELECT\n      (7 AS ?order)\n      (\"\ud83d\uded1 Replaced by\" AS ?description)\n      (GROUP_CONCAT(?value_; separator=\", \") AS ?value)\n      (CONCAT(\"../\", GROUP_CONCAT(?q; separator=\",\")) AS ?valueUrl)\n    {\n      BIND(1 AS ?dummy)\n      ?iri wdt:P1365 target: .\n      BIND(SUBSTR(STR(?iri), 32) AS ?q)\n      ?iri rdfs:label ?value_string .\n      FILTER (LANG(?value_string) = 'en')\n      BIND(COALESCE(?value_string, ?q) AS ?value_)\n    }\n    GROUP BY ?dummy\n  }\n}\nORDER BY ?order\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/ontology_data.sparql",
      "title": "ontology_data",
      "description": null
    },
    {
      "query_id": "scholia.ontology_recent-works",
      "namespace": "scholia",
      "name": "ontology_recent-works",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?publication_date\n  ?work ?workLabel\nWITH{\n  SELECT\n    ?publication_datetime\n    ?work\n  WHERE {\n    ?work wdt:P4510 / wdt:P279* target: ;\n          wdt:P577 ?publication_datetime .\n  }\n  ORDER BY DESC(?publication_datetime)\n  LIMIT 500\n} AS %result\nWHERE {\n  INCLUDE %result\n  BIND(xsd:date(?publication_datetime) AS ?publication_date)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}\nORDER BY DESC(?publication_date)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/ontology_recent-works.sparql",
      "title": "ontology_recent-works",
      "description": null
    },
    {
      "query_id": "scholia.ontology_reuse-graph",
      "namespace": "scholia",
      "name": "ontology_reuse-graph",
      "sparql": "#defaultView:Graph\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?source ?sourceLabel (CONCAT(\"../ontology/\", ?qs) AS ?sourceUrl)\n  ?target ?targetLabel (CONCAT(\"../ontology/\", ?qt) AS ?targetUrl)\nWHERE {\n  { # Ontologies that are used by the target: ontology\n    BIND (target: AS ?source)\n    ?source wdt:P2283 ?target .\n    BIND(SUBSTR(STR(?source), 32) AS ?qs)\n    BIND(SUBSTR(STR(?target), 32) AS ?qt)\n    ?source rdfs:label ?source_string .\n    FILTER (LANG(?source_string) = 'en')\n    BIND(COALESCE(?source_string, ?qt) AS ?sourceLabel)\n    ?target rdfs:label ?target_string .\n    FILTER (LANG(?target_string) = 'en')\n    BIND(COALESCE(?target_string, ?qt) AS ?targetLabel)\n  }\n  UNION\n  { # Ontologies that use the target: ontology\n    BIND (target: AS ?target)\n    ?source wdt:P2283 ?target .\n    BIND(SUBSTR(STR(?source), 32) AS ?qs)\n    BIND(SUBSTR(STR(?target), 32) AS ?qt)\n    ?source rdfs:label ?source_string .\n    FILTER (LANG(?source_string) = 'en')\n    BIND(COALESCE(?source_string, ?qt) AS ?sourceLabel)\n    ?target rdfs:label ?target_string .\n    FILTER (LANG(?target_string) = 'en')\n    BIND(COALESCE(?target_string, ?qt) AS ?targetLabel)\n  }  \n}\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/ontology_reuse-graph.sparql",
      "title": "ontology_reuse-graph",
      "description": null
    },
    {
      "query_id": "scholia.ontology_used-by-ontologies",
      "namespace": "scholia",
      "name": "ontology_used-by-ontologies",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  (GROUP_CONCAT(?value_; separator=\", \") AS ?value)\n  (CONCAT(\"../ontology/\", GROUP_CONCAT(?q; separator=\",\")) AS ?valueUrl)\nWHERE {\n  ?usedByOntology wdt:P2283 target: .\n  BIND(SUBSTR(STR(?usedByOntology), 32) AS ?q)\n  ?usedByOntology rdfs:label ?value_string .\n  FILTER (LANG(?value_string) = 'en')\n  BIND(COALESCE(?value_string, ?q) AS ?value_)\n} GROUP BY ?usedByOntology\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/ontology_used-by-ontologies.sparql",
      "title": "ontology_used-by-ontologies",
      "description": null
    },
    {
      "query_id": "scholia.ontology_used-ontologies",
      "namespace": "scholia",
      "name": "ontology_used-ontologies",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  (GROUP_CONCAT(?value_; separator=\", \") AS ?value)\n  (CONCAT(\"../ontology/\", GROUP_CONCAT(?q; separator=\",\")) AS ?valueUrl)\nWHERE {\n  target: wdt:P2283 ?usedOntology .\n  BIND(SUBSTR(STR(?usedOntology), 32) AS ?q)\n  ?usedOntology rdfs:label ?value_string .\n  FILTER (LANG(?value_string) = 'en')\n  BIND(COALESCE(?value_string, ?q) AS ?value_)\n} GROUP BY ?usedOntology\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/ontology_used-ontologies.sparql",
      "title": "ontology_used-ontologies",
      "description": null
    },
    {
      "query_id": "scholia.organization-curation_authors-no-initials",
      "namespace": "scholia",
      "name": "organization-curation_authors-no-initials",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n# Find frequent unresolved author names that are coauthors with\n# people associated with an organization.\n\nSELECT\n  ?works\n  ?researcher ?researcherLabel (CONCAT(\"/author/\", SUBSTR(STR(?researcher), 32)) AS ?researcherUrl)\n  ?author_name\n  (CONCAT(\n      \"https://author-disambiguator.toolforge.org/names_oauth.php?doit=Look+for+author&name=\",\n      ENCODE_FOR_URI(?author_name ), \"&filter=wdt%3AP50+wd%3A\", ?qid ) AS ?resolver_url)\n\nWITH {\n  SELECT DISTINCT ?researcher_ WHERE {\n    ?researcher_ ( wdt:P108 | wdt:P463 | wdt:P1416 ) / wdt:P361* target: .\n  } \n} AS %researchers\nWITH {\n#  SELECT DISTINCT ?author_name (COUNT(DISTINCT ?work) as ?count) ?author (REPLACE(STR(?author), \".*Q\", \"Q\") AS ?qid) WHERE {\n\n  SELECT\n    (COUNT(DISTINCT ?work) AS ?works)\n    ?author_name\n    (SAMPLE(?researcher_) AS ?researcher)\n    (REPLACE(STR(?researcher), \".*Q\", \"Q\") AS ?qid)\n  WHERE {\n    INCLUDE %researchers\n    ?work wdt:P50 ?researcher_ ; \n          wdt:P2093 ?author_name .\n    FILTER(!regex (LCASE(?author_name), \"^.*?((\\\\\\\\b\\\\\\\\w{1}\\\\\\\\b)|[.]).*$\")).\n  } \n  GROUP BY ?author_name\n  ORDER BY DESC(?works)\n  LIMIT 200\n} AS %researchers_and_number_of_works\nWHERE {\n  INCLUDE %researchers_and_number_of_works\n          \n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,da,de,es,fr,nl,no,ru,sv,zh\" . } \n}\nORDER BY DESC(?works)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/organization-curation_authors-no-initials.sparql",
      "title": "organization-curation_authors-no-initials",
      "description": null
    },
    {
      "query_id": "scholia.organization-curation_authors-with-initials",
      "namespace": "scholia",
      "name": "organization-curation_authors-with-initials",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n# Find frequent unresolved author names that are coauthors with\n# people associated with an organization.\nSELECT\n  ?works\n  ?researcher ?researcherLabel\n  ?author_name\n  (CONCAT(\n      \"https://author-disambiguator.toolforge.org/names_oauth.php?doit=Look+for+author&name=\",\n      ENCODE_FOR_URI(?author_name ), \"&filter=wdt%3AP50+wd%3A\", ?qid ) AS ?resolver_url)\n\nWITH {\n  SELECT DISTINCT ?researcher_ WHERE {\n    ?researcher_ ( wdt:P108 | wdt:P463 | wdt:P1416 ) / wdt:P361* target: .\n  } \n} AS %researchers\nWITH {\n#  SELECT DISTINCT ?author_name (COUNT(DISTINCT ?work) as ?count) ?author (REPLACE(STR(?author), \".*Q\", \"Q\") AS ?qid) WHERE {\n\n  SELECT\n    (COUNT(DISTINCT ?work) AS ?works)\n    ?author_name\n    (SAMPLE(?researcher_) AS ?researcher)\n    (REPLACE(STR(?researcher), \".*Q\", \"Q\") AS ?qid)\n  WHERE {\n    INCLUDE %researchers\n    ?work wdt:P50 ?researcher_ ; \n          wdt:P2093 ?author_name .\n    FILTER(regex (LCASE(?author_name), \"^.*?((\\\\\\\\b\\\\\\\\w{1}\\\\\\\\b)|[.]).*$\")).\n  } \n  GROUP BY ?author_name\n  ORDER BY DESC(?works)\n  LIMIT 200\n} AS %researchers_and_number_of_works\nWHERE {\n  INCLUDE %researchers_and_number_of_works\n          \n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,da,de,es,fr,nl,no,ru,sv,zh\" . } \n}\nORDER BY DESC(?works)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/organization-curation_authors-with-initials.sparql",
      "title": "organization-curation_authors-with-initials",
      "description": null
    },
    {
      "query_id": "scholia.organization-curation_authors",
      "namespace": "scholia",
      "name": "organization-curation_authors",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  (COUNT(?work) AS ?count) \n  ?author_name\n  (CONCAT(\n      'https://author-disambiguator.toolforge.org/names_oauth.php?doit=Look+for+author&name=',\n      ENCODE_FOR_URI(?author_name)) AS ?author_resolver_url)\nWHERE {\n  {\n    SELECT DISTINCT ?author_name {\n      ?researcher_ ( wdt:P108 | wdt:P463 | wdt:P1416 ) / wdt:P361* target: .\n      \n      ?researcher_ skos:altLabel | rdfs:label ?author_name_ .\n      \n      # The SELECT-DISTINCT-BIND trick here is due to Stanislav Kralin\n      # https://stackoverflow.com/questions/53933564\n      BIND (STR(?author_name_) AS ?author_name)\n    }\n    LIMIT 2000\n  }\n  OPTIONAL { ?work wdt:P2093 ?author_name . }\n}\nGROUP BY ?author_name \nHAVING (?count > 0)\nORDER BY DESC(?count)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/organization-curation_authors.sparql",
      "title": "organization-curation_authors",
      "description": null
    },
    {
      "query_id": "scholia.organization-topic_authors",
      "namespace": "scholia",
      "name": "organization-topic_authors",
      "sparql": "PREFIX target1: <http://www.wikidata.org/entity/{{ q1 }}>\nPREFIX target2: <http://www.wikidata.org/entity/{{ q2 }}>\n\nSELECT\n  ?works\n  ?author ?authorLabel ?authorDescription (CONCAT(\"/author/\", SUBSTR(STR(?author), 32)) AS ?authorUrl)\n  ?example_work ?example_workLabel (CONCAT(\"/work/\", SUBSTR(STR(?example_work), 32)) AS ?example_workUrl)\nWITH {\n  SELECT\n    (COUNT(DISTINCT ?work) AS ?works)\n    ?author\n    (SAMPLE(?work) AS ?example_work)\n  {\n    { ?author ?p1 target1: . }\n    UNION\n    {\n      ?author ?p2 ?something .\n      ?something wdt:P361 target1: .\n    }\n    ?work wdt:P50 ?author;\n          wdt:P921 / wdt:P279* target2: .\n  }\n  GROUP BY ?author\n  ORDER BY DESC (?works)\n  LIMIT 200\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC (?works)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/organization-topic_authors.sparql",
      "title": "organization-topic_authors",
      "description": null
    },
    {
      "query_id": "scholia.organization-topic_recent-literature",
      "namespace": "scholia",
      "name": "organization-topic_recent-literature",
      "sparql": "PREFIX target1: <http://www.wikidata.org/entity/{{ q1 }}>\nPREFIX target2: <http://www.wikidata.org/entity/{{ q2 }}>\n\nSELECT\n  ?publication_date\n  ?work ?workLabel (CONCAT(\"/work/\", SUBSTR(STR(?work), 32)) AS ?workUrl)\n  ?authors ?authorsUrl\nWITH {\n  SELECT \n    (xsd:date(MAX(?publication_date_)) AS ?publication_date)\n    ?work\n    (GROUP_CONCAT(DISTINCT ?author_; separator=\", \") AS ?authors)\n    (CONCAT(\"../../../authors/\", GROUP_CONCAT(DISTINCT SUBSTR(STR(?author), 32); separator=\",\")) AS ?authorsUrl)\n  {\n    { ?author ?p1 target1: . }\n    UNION\n    {\n      ?author ?p2 ?something .\n      ?something wdt:P361 target1: .\n    }\n    ?work wdt:P50 ?author;\n          wdt:P921 target2: .\n    ?author rdfs:label ?author_ .\n    FILTER (LANG(?author_) = 'en')\n    \n    ?work wdt:P577 ?publication_date_ .\n  }\n  GROUP BY ?work\n  ORDER BY DESC (?publication_date)\n  LIMIT 200\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC (?publication_date)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/organization-topic_recent-literature.sparql",
      "title": "organization-topic_recent-literature",
      "description": null
    },
    {
      "query_id": "scholia.organization-use_authors",
      "namespace": "scholia",
      "name": "organization-use_authors",
      "sparql": "PREFIX target1: <http://www.wikidata.org/entity/{{ q1 }}>\nPREFIX target2: <http://www.wikidata.org/entity/{{ q2 }}>\n\nSELECT\n  ?works\n  ?author ?authorLabel ?authorDescription (CONCAT(\"/author/\", SUBSTR(STR(?author), 32)) AS ?authorUrl)\n  ?example_work ?example_workLabel (CONCAT(\"/work/\", SUBSTR(STR(?example_work), 32)) AS ?example_workUrl)\nWITH {\n  SELECT DISTINCT ?author WHERE {\n    ?author ( wdt:P108 | wdt:P463 | wdt:P1416 ) / wdt:P361* target1: .\n  } \n} AS %researchers\nWITH {\n  SELECT\n    ?author\n    (COUNT(DISTINCT ?work) AS ?works)\n    (SAMPLE(?work) AS ?example_work)\n  WHERE {\n    INCLUDE %researchers\n    ?work wdt:P50 ?author ;\n          wdt:P4510 target2: .\n  }\n  GROUP BY ?author\n} AS %researchers_and_works\nWHERE {\n  INCLUDE %researchers_and_works\n\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,da,de,es,fr,jp,nl,no,ru,sv,zh\". }\n}\nORDER BY DESC (?works)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/organization-use_authors.sparql",
      "title": "organization-use_authors",
      "description": null
    },
    {
      "query_id": "scholia.organization-use_recent-literature",
      "namespace": "scholia",
      "name": "organization-use_recent-literature",
      "sparql": "PREFIX target1: <http://www.wikidata.org/entity/{{ q1 }}>\nPREFIX target2: <http://www.wikidata.org/entity/{{ q2 }}>\n\nSELECT DISTINCT\n  ?publication_date\n  ?work ?workLabel (CONCAT(\"/work/\", SUBSTR(STR(?work), 32)) AS ?workUrl)\nWITH {\n  SELECT DISTINCT ?researcher WHERE {\n    ?researcher ( wdt:P108 | wdt:P463 | wdt:P1416 ) / wdt:P361* target1: .\n  } \n} AS %researchers\nWHERE {\n  INCLUDE %researchers\n\n  ?work wdt:P50 ?researcher ;\n        wdt:P4510 target2: .\n  OPTIONAL {\n    ?work wdt:P577 ?publication_datetime .\n    BIND(xsd:date(?publication_datetime) AS ?publication_date)\n  }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,da,de,es,fr,jp,nl,no,ru,sv,zh\". }\n}\nORDER BY DESC(?publication_date)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/organization-use_recent-literature.sparql",
      "title": "organization-use_recent-literature",
      "description": null
    },
    {
      "query_id": "scholia.organization_advisor-graph",
      "namespace": "scholia",
      "name": "organization_advisor-graph",
      "sparql": "#defaultView:Graph\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?author1 ?author1Label ?rgb ?author2 ?author2Label \nWITH {\n  SELECT DISTINCT ?author1 ?author2 ?rgb WHERE {\n    VALUES ?organisation { target: }\n    { ?author1 wdt:P108 ?organisation . } union { ?author1 wdt:P1416 [ wdt:P361* ?organisation ] .  }\n    { ?author2 wdt:P108 ?organisation . } union { ?author2 wdt:P1416 [ wdt:P361* ?organisation ] .  }\n    {?author1 wdt:P184 ?author2 }\n    UNION\n    {?author2 wdt:P185 ?author1 }\n    OPTIONAL { ?author1 wdt:P21 ?gender1 }.\n    BIND ( IF(?gender1 = wd:Q6581097, \"3182BD\", \"E6550D\") AS ?rgb)\n  }\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,sv,ru,zh\".\n  }\n}\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/organization_advisor-graph.sparql",
      "title": "organization_advisor-graph",
      "description": null
    },
    {
      "query_id": "scholia.organization_awards",
      "namespace": "scholia",
      "name": "organization_awards",
      "sparql": "#defaultView:Table\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?count\n  ?award ?awardLabel\n  ?recipients ?recipientsUrl\nWITH {\n  SELECT\n    (COUNT(?researcher) AS ?count)\n    ?award\n    (GROUP_CONCAT(?researcher_label; separator=\", \") AS ?recipients)\n    (CONCAT(\"../authors/\", GROUP_CONCAT(DISTINCT SUBSTR(STR(?researcher), 32); separator=\",\")) AS ?recipientsUrl)\n  WHERE {\n    hint:Query hint:optimizer \"None\" .\n    {\n      SELECT DISTINCT ?researcher WHERE {\n        ?researcher ( wdt:P108 | wdt:P463 | wdt:P1416 ) / wdt:P361* target: .\n      } \n    }\n    ?researcher wdt:P166 ?award .\n    ?researcher rdfs:label ?researcher_label . FILTER (LANG(?researcher_label) = 'en')\n  }\n  GROUP BY ?award\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\" . } \n}\nORDER BY DESC(?count)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/organization_awards.sparql",
      "title": "organization_awards",
      "description": null
    },
    {
      "query_id": "scholia.organization_co-author-graph",
      "namespace": "scholia",
      "name": "organization_co-author-graph",
      "sparql": "#defaultView:Graph\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?author1 ?author1Label ?image1 ?rgb\n  ?author2 ?author2Label ?image2 \nWITH {\n  SELECT\n    ?author1 (SAMPLE(?image1_) AS ?image1)\n    ?author2 (SAMPLE(?image2_) AS ?image2)\n    (SAMPLE(?rgb_) AS ?rgb)\n  WHERE {\n    target: ^wdt:P361* / ^( wdt:P108 | wdt:P1416 | wdt:P463 ) ?author1 , ?author2 .\n    ?work wdt:P50 ?author1 , ?author2 .\n\n    # Only display co-authorship for certain types of documents\n    # Journal and conference articles, books, not (yet?) software\n    VALUES ?publication_type { wd:Q13442814 wd:Q571 wd:Q26973022 wd:Q17928402 wd:Q947859 wd:Q54670950 }\n    FILTER EXISTS { ?work wdt:P31 ?publication_type . }\n\n    # No self-links.\n    FILTER (?author1 != ?author2)\n\n    # Images\n    OPTIONAL { ?author1 wdt:P18 ?image1_ }\n    OPTIONAL { ?author2 wdt:P18 ?image2_ }\n\n    # Coloring of the nodes\n    BIND(\"FFFFFF\" AS ?rgb_)\n  }\n  GROUP BY ?author1 ?author2\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,sv,ru,zh\".\n  }\n}\n\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/organization_co-author-graph.sparql",
      "title": "organization_co-author-graph",
      "description": null
    },
    {
      "query_id": "scholia.organization_co-author-normalized-citations",
      "namespace": "scholia",
      "name": "organization_co-author-normalized-citations",
      "sparql": "#defaultView:BarChart\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?year (SUM(?citations_per_author_) AS ?citations_per_author) ?researcherLabel\nWITH {\n  # Find researchers affiliated with the organization\n  SELECT DISTINCT ?researcher WHERE {\n    ?researcher wdt:P108 | wdt:P463 | wdt:P1416/wdt:P361* target: .\n  }\n} AS %researchers \nWITH {\n  # Find works of the researchers and count the number of citations\n  SELECT\n    ?researcher ?work ?year (COUNT(DISTINCT ?citing_work) / COUNT(DISTINCT ?researcher_of_paper) AS ?citations_per_author_)\n  WHERE {\n    INCLUDE %researchers\n    ?work wdt:P50 | wdt:P2093 ?researcher_of_paper .\n    ?work wdt:P50 ?researcher .\n    ?citing_work wdt:P2860 ?work .\n    ?work wdt:P577 ?date . \n    BIND(STR(YEAR(?date)) AS ?year)\n  }\n  GROUP BY ?work ?researcher ?year\n} AS %counts\nWHERE {\n  # Label the results\n  INCLUDE %counts    \n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\". }\n}\nGROUP BY ?year ?researcher ?researcherLabel\nORDER BY ?year\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/organization_co-author-normalized-citations.sparql",
      "title": "organization_co-author-normalized-citations",
      "description": null
    },
    {
      "query_id": "scholia.organization_employees-and-affiliated",
      "namespace": "scholia",
      "name": "organization_employees-and-affiliated",
      "sparql": "# title: Employees and affiliated with a specified organization\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  (SAMPLE(?number_of_works_) AS ?works)\n  (SAMPLE(?wikis_) AS ?wikis)\n  ?researcher ?researcherLabel ?researcherDescription\n  (SAMPLE(?orcid_) AS ?orcid)\nWITH {\n  SELECT DISTINCT ?researcher WHERE {\n    ?researcher ( wdt:P108 | wdt:P463 | wdt:P1416 ) / wdt:P361* target: .\n  } \n} AS %researchers\nWITH {\n  SELECT\n    (COUNT(?work) AS ?number_of_works_) ?researcher\n  WHERE {\n    INCLUDE %researchers\n\n    # No biological pathways; they skew the statistics too much \n    MINUS { ?work wdt:P31 wd:Q4915012 } \n\n    # This OPTIONAL query should be after the MINUS query, otherwise\n    # researchers might not show if they do not have any papers.\n    OPTIONAL { ?work wdt:P50 ?researcher . }\n  } \n  GROUP BY ?researcher\n} AS %researchers_and_number_of_works\nWHERE {\n  INCLUDE %researchers_and_number_of_works\n  OPTIONAL { ?researcher wdt:P496 ?orcid_ . }\n  OPTIONAL { ?researcher wikibase:sitelinks ?wikis_ }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,nl,no,ru,sv,zh\" . } \n}\nGROUP BY ?researcher ?researcherLabel ?researcherDescription \nORDER BY DESC(?works)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/organization_employees-and-affiliated.sparql",
      "title": "organization_employees-and-affiliated",
      "description": null
    },
    {
      "query_id": "scholia.organization_gender-distribution",
      "namespace": "scholia",
      "name": "organization_gender-distribution",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?count ?gender ?genderLabel\nWITH {\n  SELECT (COUNT(DISTINCT ?researcher) AS ?count) ?gender WHERE {\n    ?researcher ( wdt:P108 | wdt:P463 | wdt:P1416 ) / wdt:P361* target: .\n    ?researcher wdt:P21 ?gender . \n  } \n  GROUP BY ?gender\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,ep,fr,jp,nl,no,ru,sv,zh\" . } \n} \nORDER BY DESC(?count)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/organization_gender-distribution.sparql",
      "title": "organization_gender-distribution",
      "description": null
    },
    {
      "query_id": "scholia.organization_most-cited-papers",
      "namespace": "scholia",
      "name": "organization_most-cited-papers",
      "sparql": "#defaultView:BubbleChart\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n# Bubble chart of most cited works of first author associated\n# with an organization\nSELECT\n  ?count ?work ?workLabel\nWITH {\n  # Find researchers associated with the organization and count\n  # the number of citations.\n  SELECT\n    (COUNT(DISTINCT ?citing_work) AS ?count)\n    ?work\n  WHERE {\n    ?researcher wdt:P108 | wdt:P463 | (wdt:P1416 / wdt:P361*) target: .\n    ?work p:P50 ?researcher_statement .\n    ?researcher_statement ps:P50 ?researcher .\n    ?researcher_statement pq:P1545 \"1\" .\n    ?citing_work wdt:P2860 ?work .\n  }\n  GROUP BY ?work                   \n  ORDER BY DESC(?count)\n  LIMIT 20\n} AS %works\nWHERE {\n  # Label the works\n  INCLUDE %works\n  SERVICE wikibase:label {\n    bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\" .\n  }\n}\nORDER BY DESC(?count)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/organization_most-cited-papers.sparql",
      "title": "organization_most-cited-papers",
      "description": null
    },
    {
      "query_id": "scholia.organization_page-production",
      "namespace": "scholia",
      "name": "organization_page-production",
      "sparql": "#defaultView:BarChart\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n# Pages per year bar chart of an organization\nSELECT\n  ?year\n  (SUM(?pages_per_author) AS ?number_of_pages)\n  ?researcher_label\nWHERE {\n  {\n    SELECT\n      ?researcher_label ?work ?year\n      (SAMPLE(?pages) / COUNT(?researcher_of_paper) AS ?pages_per_author)\n    WHERE {\n      # Find authors associated with organization\n      FILTER EXISTS { ?researcher wdt:P108 | wdt:P463 | (wdt:P1416 / wdt:P361*) target: . }\n      \n      ?work (wdt:P50|wdt:P2093) ?researcher_of_paper .\n      \n      # Disabled to only look on scholarly articles\n      # ?work wdt:P31 wd:Q13442814 .\n      \n      ?work wdt:P50 ?researcher .\n      ?work wdt:P1104 ?pages .\n      ?work wdt:P577 ?date . \n      BIND(STR(YEAR(?date)) AS ?year) \n      ?researcher rdfs:label ?researcher_label . FILTER(LANG(?researcher_label) = 'en')\n    } \n    GROUP BY ?work ?researcher_label ?year\n  }\n}\nGROUP BY ?year ?researcher_label \nORDER BY ?year\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/organization_page-production.sparql",
      "title": "organization_page-production",
      "description": null
    },
    {
      "query_id": "scholia.organization_recent-citations",
      "namespace": "scholia",
      "name": "organization_recent-citations",
      "sparql": "#defaultView:Table\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT DISTINCT ?publication_date ?citing_work ?citing_workLabel ?work ?workLabel\nWHERE {\n  ?researcher ( wdt:P108 | wdt:P463 | wdt:P1416 ) / wdt:P361* target: .\n  ?work wdt:P50 ?researcher .\n  ?citing_work wdt:P2860 ?work .\n  ?citing_work wdt:P577 ?publication_datetime .\n  BIND(xsd:date(?publication_datetime) AS ?publication_date)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,nl,ru,sv,zh\". }\n }\nORDER BY DESC(?publication_date)\nLIMIT 200\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/organization_recent-citations.sparql",
      "title": "organization_recent-citations",
      "description": null
    },
    {
      "query_id": "scholia.organization_recent-literature",
      "namespace": "scholia",
      "name": "organization_recent-literature",
      "sparql": "#defaultView:Table\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?publication_date\n  ?work ?workLabel\n  ?researchers ?researchersUrl\nWITH {\n  SELECT \n    (MIN(?publication_datetimes) AS ?publication_datetime) ?work \n    (GROUP_CONCAT(DISTINCT ?researcher_label; separator=', ') AS ?researchers)\n    (CONCAT(\"../authors/\", GROUP_CONCAT(DISTINCT SUBSTR(STR(?researcher), 32); separator=\",\")) AS ?researchersUrl)\n  WHERE {                                                         \n    ?researcher ( wdt:P108 | wdt:P463 | wdt:P1416 ) / wdt:P361* target: .\n    ?work wdt:P50 ?researcher .\n    ?researcher rdfs:label ?researcher_label . FILTER (LANG(?researcher_label) = 'en')\n    OPTIONAL {\n      ?work wdt:P577 ?publication_datetimes .\n    }\n  }\n  GROUP BY ?work\n  ORDER BY DESC(?publication_datetime)\n  LIMIT 200  \n} AS %results\nWHERE {\n  INCLUDE %results\n  BIND(xsd:date(?publication_datetime) AS ?publication_date)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,nl,ru,zh\". }\n}\nORDER BY DESC(?publication_date)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/organization_recent-literature.sparql",
      "title": "organization_recent-literature",
      "description": null
    },
    {
      "query_id": "scholia.organization_topics",
      "namespace": "scholia",
      "name": "organization_topics",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?researchers\n  ?topic ?topicLabel (CONCAT(\"/topic/\", SUBSTR(STR(?topic), 32)) AS ?topicUrl)\n  (\"\ud83d\udd0e\" AS ?zoom)\n  (CONCAT(\"{{ q }}/topic/\", SUBSTR(STR(?topic), 32)) AS ?zoomUrl)\n  ?topicDescription\n  ?samplework ?sampleworkLabel (CONCAT(\"/work/\", SUBSTR(STR(?samplework), 32)) AS ?sampleworkUrl)\nWITH {\n  SELECT DISTINCT ?researcher WHERE {\n    ?researcher ( wdt:P108 | wdt:P463 | wdt:P1416 ) / wdt:P361* target: .\n  } \n} AS %researchers\nWITH {\n  SELECT DISTINCT ?topic\n    (COUNT(DISTINCT ?researcher) AS ?researchers)\n    (SAMPLE(?work) AS ?samplework)\n  WHERE {\n    INCLUDE %researchers\n    ?work wdt:P50 ?researcher . \n    ?work wdt:P921 ?topic . \n  } \n  GROUP BY ?topic\n  ORDER BY DESC(?researchers)\n  LIMIT 500\n} AS %works_and_number_of_researchers\nWHERE {\n  INCLUDE %works_and_number_of_researchers\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,nl,no,ru,sv,zh\" . } \n}\nGROUP BY ?researchers ?topic ?topicLabel ?topicDescription ?samplework ?sampleworkLabel\nORDER BY DESC(?researchers)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/organization_topics.sparql",
      "title": "organization_topics",
      "description": null
    },
    {
      "query_id": "scholia.organization_uses",
      "namespace": "scholia",
      "name": "organization_uses",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?researchers\n  ?use ?useLabel (CONCAT(\"/use/\", SUBSTR(STR(?use), 32)) AS ?useUrl)\n  (\"\ud83d\udd0e\" AS ?zoom)\n  (CONCAT(\"{{ q }}/use/\", SUBSTR(STR(?use), 32)) AS ?zoomUrl)\n  ?useDescription\n  ?samplework ?sampleworkLabel (CONCAT(\"/work/\", SUBSTR(STR(?samplework), 32)) AS ?sampleworkUrl)\nWITH {\n  SELECT DISTINCT ?researcher WHERE {\n    ?researcher ( wdt:P108 | wdt:P463 | wdt:P1416 ) / wdt:P361* target: .\n  } \n} AS %researchers\nWITH {\n  SELECT DISTINCT ?use\n    (COUNT(DISTINCT ?researcher) AS ?researchers)\n    (SAMPLE(?work) AS ?samplework)\n  WHERE {\n    INCLUDE %researchers\n    ?work wdt:P50 ?researcher . \n    ?work wdt:P4510 ?use . \n  } \n  GROUP BY ?use\n  ORDER BY DESC(?researchers)\n  LIMIT 500\n} AS %works_and_number_of_researchers\nWHERE {\n  INCLUDE %works_and_number_of_researchers\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,nl,no,ru,sv,zh\" . } \n}\nGROUP BY ?researchers ?use ?useLabel ?useDescription ?samplework ?sampleworkLabel\nORDER BY DESC(?researchers)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/organization_uses.sparql",
      "title": "organization_uses",
      "description": null
    },
    {
      "query_id": "scholia.organizations_citations-per-year",
      "namespace": "scholia",
      "name": "organizations_citations-per-year",
      "sparql": "#defaultView:LineChart\nSELECT\n  ?year_of_citation\n  ?number_of_citations\n  ?organization ?organizationLabel  \nWITH {\n  # Bind organizations to variable\n  SELECT ?organization WHERE {\n    VALUES ?organization { {% for q in qs %} wd:{{ q }} {% endfor %} }\n  }\n} AS %organizations\nWITH {\n  # Find works author by the organization\n  SELECT\n    DISTINCT ?work ?organization\n  WHERE {\n    INCLUDE %organizations\n    ?work wdt:P50 / (wdt:P108 | wdt:P463 | (wdt:P1416/wdt:P361*)) ?organization . \n  }\n} AS %works\nWITH {\n  # Count citations per year per organization\n  SELECT\n    ?year_of_citation\n    (COUNT(?citing_work) AS ?number_of_citations)\n    ?organization\n  WHERE {\n    INCLUDE %works\n    ?citing_work wdt:P2860 ?work . \n    ?citing_work wdt:P577 ?publication_date .\n    BIND(STR(YEAR(?publication_date)) AS ?year_of_citation)\n  }\n  GROUP BY ?year_of_citation ?organization\n} AS %results\nWHERE {\n  # Since 1990\n  # FILTER (?year_of_citation >= \"1990\")\n  \n  # Label the results\n  INCLUDE %results\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,es,fr,jp,nl,no,ru,sv,zh\". }\n}\nORDER BY ?year_of_citation\n\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/organizations_citations-per-year.sparql",
      "title": "organizations_citations-per-year",
      "description": null
    },
    {
      "query_id": "scholia.organizations_citations-to-works",
      "namespace": "scholia",
      "name": "organizations_citations-to-works",
      "sparql": "#defaultView:LineChart\nSELECT\n  (?year_of_citation AS ?year)\n  (?number_of_citations/?number_of_works AS ?citations_to_works_ratio)\n  ?number_of_works\n  ?number_of_citations\n  ?organization ?organizationLabel  \nWITH {\n  # Bind organizations to variable\n  SELECT ?organization WHERE {\n    VALUES ?organization { {% for q in qs %} wd:{{ q }} {% endfor %} }\n  }\n} AS %organizations\nWITH {\n  # Find works associated with the organizations\n  SELECT\n    # Should not count authors twice\n    DISTINCT ?work ?organization\n  WHERE {\n    INCLUDE %organizations\n    ?author wdt:P108 | wdt:P463 | (wdt:P1416/wdt:P361*) ?organization . \n    ?work wdt:P50 ?author .\n  }\n} AS %works\nWITH {\n  # Count the number of works published per year per organization\n  SELECT\n    ?year_of_cited (COUNT(?work) AS ?number_of_works) ?organization\n  WHERE {\n    INCLUDE %works\n    ?work wdt:P577 ?cited_publication_date .\n    BIND(STR(YEAR(?cited_publication_date)) AS ?year_of_cited)\n  } \n  GROUP BY ?year_of_cited ?organization\n} AS %work_numbers\nWITH {\n  # Count the number of citations received per year per organization\n  SELECT \n    ?year_of_citation (COUNT(?work) AS ?number_of_citations) ?organization\n  WHERE {\n    INCLUDE %works\n    ?citing_work wdt:P2860 ?work . \n    ?citing_work wdt:P577 ?citing_publication_date .\n    BIND(STR(YEAR(?citing_publication_date)) AS ?year_of_citation)\n  }\n  GROUP BY ?year_of_citation ?organization\n} AS %citation_numbers\nWHERE {\n  # Join the work and citation counts\n  INCLUDE %citation_numbers\n  INCLUDE %work_numbers\n  FILTER (?year_of_citation = ?year_of_cited)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,es,fr,jp,nl,no,ru,sv,zh\". }\n}\nORDER BY ?year_of_citation\n \n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/organizations_citations-to-works.sparql",
      "title": "organizations_citations-to-works",
      "description": null
    },
    {
      "query_id": "scholia.organizations_coauthorships",
      "namespace": "scholia",
      "name": "organizations_coauthorships",
      "sparql": "SELECT DISTINCT ?author1 ?author1Label ?author2 ?author2Label ?work ?workLabel WHERE {\n  VALUES ?organization1 { \n    {% for q in qs %} wd:{{ q }} {% endfor %}\n  }\n  VALUES ?organization2 {\n    {% for q in qs %} wd:{{ q }} {% endfor %}\n  } \n  ?author1 ?v1 ?organization1 . \n  ?author2 ?v2 ?organization2 . \n  ?work wdt:P50 ?author1, ?author2 .  \n  FILTER (STR(?author1) < STR(?author2) && ?organization1 != ?organization2)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY ?author1Label\nLIMIT 500\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/organizations_coauthorships.sparql",
      "title": "organizations_coauthorships",
      "description": null
    },
    {
      "query_id": "scholia.organizations_list",
      "namespace": "scholia",
      "name": "organizations_list",
      "sparql": "SELECT\n  ?organization ?organizationLabel ?organizationDescription\n  ?location ?locationLabel\n  ?country ?countryLabel\nWITH {\n  SELECT\n    ?organization\n    (SAMPLE(?location_) AS ?location)\n    (SAMPLE(?country_) AS ?country)\n  WHERE {\n    VALUES ?organization { {% for q in qs %} wd:{{ q }} {% endfor %} }\n    OPTIONAL { ?organization wdt:P131 | wdt:P159 ?location_ }\n    OPTIONAL { ?organization wdt:P17 ?country_ }\n  }\n  GROUP BY ?organization\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,es,fr,nl,no,ru,sv,zh\". }\n}\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/organizations_list.sparql",
      "title": "organizations_list",
      "description": null
    },
    {
      "query_id": "scholia.organizations_topic-tree-map",
      "namespace": "scholia",
      "name": "organizations_topic-tree-map",
      "sparql": "#defaultView:TreeMap\nSELECT\n  ?number_of_works\n  ?topic ?topicLabel\n  ?organization ?organizationLabel  \nWITH {\n  # Bind organizations to variable\n  SELECT ?organization WHERE {\n    VALUES ?organization { {% for q in qs %} wd:{{ q }} {% endfor %} }\n  }\n} AS %organizations\nWITH {\n  # Find works associated with the organizations\n  SELECT\n    # Should not count authors twice\n    DISTINCT ?work ?organization\n  WHERE {\n    INCLUDE %organizations\n    ?work wdt:P50 / (wdt:P108 | wdt:P463 | (wdt:P1416/wdt:P361*)) ?organization . \n  }\n} AS %works\nWITH {\n  # Count the number of works per topic per organization\n  SELECT\n    (COUNT(?work) AS ?number_of_works) ?topic ?organization\n  WHERE {\n    INCLUDE %works\n    ?work wdt:P921 ?topic .\n  } \n  GROUP BY ?topic ?organization\n} AS %work_numbers\nWHERE {\n  # Join the work and citation counts\n  INCLUDE %work_numbers\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,es,fr,jp,nl,no,ru,sv,zh\". }\n}\nORDER BY DESC(?number_of_works)\nLIMIT 100\n\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/organizations_topic-tree-map.sparql",
      "title": "organizations_topic-tree-map",
      "description": null
    },
    {
      "query_id": "scholia.organizations_topic-tree",
      "namespace": "scholia",
      "name": "organizations_topic-tree",
      "sparql": "SELECT\n  ?number_of_works\n  ?topic ?topicLabel\n  ?organization ?organizationLabel  \nWITH {\n  # Bind organizations to variable\n  SELECT ?organization WHERE {\n    VALUES ?organization { {% for q in qs %} wd:{{ q }} {% endfor %} }\n  }\n} AS %organizations\nWITH {\n  # Find works associated with the organizations\n  SELECT\n    # Should not count authors twice\n    DISTINCT ?work ?organization\n  WHERE {\n    INCLUDE %organizations\n    ?work wdt:P50 / (wdt:P108 | wdt:P463 | (wdt:P1416/wdt:P361*)) ?organization . \n  }\n} AS %works\nWITH {\n  # Count the number of works per topic per organization\n  SELECT\n    (COUNT(?work) AS ?number_of_works) ?topic ?organization\n  WHERE {\n    INCLUDE %works\n    ?work wdt:P921 ?topic .\n  } \n  GROUP BY ?topic ?organization\n} AS %work_numbers\nWHERE {\n  # Label the items returned\n  INCLUDE %work_numbers\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,es,fr,jp,nl,no,ru,sv,zh\". }\n}\nORDER BY DESC(?number_of_works)\nLIMIT 100\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/organizations_topic-tree.sparql",
      "title": "organizations_topic-tree",
      "description": null
    },
    {
      "query_id": "scholia.organizations_works-per-year",
      "namespace": "scholia",
      "name": "organizations_works-per-year",
      "sparql": "#defaultView:LineChart\nSELECT ?year (COUNT(?work) AS ?number_of_works) ?organization ?organizationLabel  \nWHERE {\n  {\n    SELECT DISTINCT ?year ?work ?organization WHERE {\n      hint:Query hint:optimizer \"None\".\n      VALUES ?organization { {% for q in qs %} wd:{{ q }} {% endfor %} }\n      ?author wdt:P108 | wdt:P463 | (wdt:P1416/wdt:P361*) ?organization . \n      ?work wdt:P50 ?author .\n      ?work wdt:P577 ?publication_date .\n      BIND(STR(YEAR(?publication_date)) AS ?year)\n    }\n    GROUP BY ?work ?year ?organization\n  } \n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?year ?organization ?organizationLabel\nORDER BY ?year\n\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/organizations_works-per-year.sparql",
      "title": "organizations_works-per-year",
      "description": null
    },
    {
      "query_id": "scholia.pathway-index_statistics",
      "namespace": "scholia",
      "name": "pathway-index_statistics",
      "sparql": "SELECT ?count ?description\nWITH {\n  SELECT (COUNT(DISTINCT ?article) AS ?count) WHERE {\n    VALUES ?database { wdt:P2410 wdt:P3937 }\n    [] ?database [] ; wdt:P2860 ?article .\n  }\n} AS %literature\nWITH {\n  SELECT (COUNT(*) AS ?count) WHERE { [] wdt:P2410 []. }\n} AS %wikipathways\nWITH {\n  SELECT (COUNT(*) AS ?count) WHERE { [] wdt:P3937 []. }\n} AS %reactome\nWHERE {\n  {\n    INCLUDE %wikipathways\n    BIND(\"Total number of WikiPathways pathways\" AS ?description)\n  }\n  UNION\n  {\n    INCLUDE %literature\n    BIND(\"Total number of articles cited by pathways\" AS ?description)\n  }\n  UNION\n  {\n    INCLUDE %reactome\n    BIND(\"Total number of Reactome pathways\" AS ?description)\n  }\n}\nORDER BY DESC(?count)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/pathway-index_statistics.sparql",
      "title": "pathway-index_statistics",
      "description": null
    },
    {
      "query_id": "scholia.pathway_citing-articles",
      "namespace": "scholia",
      "name": "pathway_citing-articles",
      "sparql": "#defaultView:Table\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?citations ?publication_date ?citing_work ?citing_workLabel\nWITH {\n  SELECT\n    (MIN(?date) AS ?publication_date)\n    (COUNT(?citing_citing_work) AS ?citations)\n    ?citing_work\n  WHERE {\n    ?citing_work wdt:P2860 target: .\n    OPTIONAL {\n      ?citing_work wdt:P577 ?datetime .\n      BIND(xsd:date(?datetime) AS ?date)\n    }\n    OPTIONAL { ?citing_citing_work wdt:P2860 ?citing_work }\n  }\n  GROUP BY ?citing_work\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}\nORDER BY DESC(?citations) DESC(?date)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/pathway_citing-articles.sparql",
      "title": "pathway_citing-articles",
      "description": null
    },
    {
      "query_id": "scholia.pathway_optional-data-values",
      "namespace": "scholia",
      "name": "pathway_optional-data-values",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?wpid ?organism ?organismLabel ?pathwayDescription\nWHERE {\n  VALUES ?pathway { target: }\n  OPTIONAL {\n    target: wdt:P2410 ?wpid ;\n    wdt:P703 ?organism .\n  }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/pathway_optional-data-values.sparql",
      "title": "pathway_optional-data-values",
      "description": null
    },
    {
      "query_id": "scholia.pathway_participants",
      "namespace": "scholia",
      "name": "pathway_participants",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?part ?partLabel ?partDescription ?type\nWITH {\n  SELECT ?part (GROUP_CONCAT(DISTINCT ?type_label; separator=\", \") AS ?type)\n  WHERE {\n    VALUES ?process { wd:Q4915012 wd:Q2996394 }\n    target: wdt:P31 ?process ;\n             wdt:P527 ?part .\n    OPTIONAL { \n      ?part wdt:P31 ?type_ .\n      ?type_ rdfs:label ?type_label .\n      FILTER (LANG(?type_label) = 'en')\n    }\n  } GROUP BY ?part\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n} ORDER BY ASC(?partLabel)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/pathway_participants.sparql",
      "title": "pathway_participants",
      "description": null
    },
    {
      "query_id": "scholia.pathway_publications-per-year",
      "namespace": "scholia",
      "name": "pathway_publications-per-year",
      "sparql": "#defaultView:BarChart\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n# Inspired from LEGOLAS - http://abel.lis.illinois.edu/legolas/\n# Shubhanshu Mishra, Vetle Torvik\nselect ?year (count(?work) as ?number_of_publications) where {\n  {\n    select (str(?year_) as ?year) (0 as ?pages) where {\n      # default values = 0\n      ?year_item wdt:P31 wd:Q577 . \n      ?year_item wdt:P585 ?date .\n      bind(year(?date) as ?year_)\n      {\n        select (min(?year_) as ?earliest_year) where {\n          {\n            ?work wdt:P921 / (wdt:P361+ | wdt:P1269+ | (wdt:P31* / wdt:P279*) ) target: .\n          } union {\n            target: wdt:P2860 ?work .\n          }\n          ?work wdt:P577 ?publication_date . \n          bind(year(?publication_date) as ?year_)\n        }\n      }\n      bind(year(now()) as ?next_year)\n      filter (?year_ >= ?earliest_year && ?year_ <= ?next_year)\n    }\n  }\n  union {\n    select ?work (min(?years) as ?year) where {\n      {\n        ?work wdt:P921 / (wdt:P361+ | wdt:P1269+ | (wdt:P31* / wdt:P279*) ) target: .\n      } union {\n        target: wdt:P2860 ?work .\n      }\n      ?work wdt:P577 ?dates .\n      bind(str(year(?dates)) as ?years) .\n    }\n    group by ?work \n  }\n}\ngroup by ?year \norder by ?year",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/pathway_publications-per-year.sparql",
      "title": "pathway_publications-per-year",
      "description": null
    },
    {
      "query_id": "scholia.pathway_recent-articles",
      "namespace": "scholia",
      "name": "pathway_recent-articles",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?date ?work ?workLabel ?type ?topics\nWITH {\n  SELECT DISTINCT ?work \n    WHERE {\n      { ?work wdt:P921 / (wdt:P361+ | wdt:P1269+ | (wdt:P31* / wdt:P279*) ) target: . }\n      UNION { target: wdt:P2860 ?work . }\n    }\n} AS %works\nWITH {\n  SELECT \n    (MAX(?dates) as ?datetime)\n    ?work\n    (GROUP_CONCAT(DISTINCT ?type_label; separator=\", \") AS ?type)\n    (GROUP_CONCAT(?topic_label; separator=\" // \") AS ?topics) \n  WHERE {\n    INCLUDE %works\n    OPTIONAL {\n      ?work wdt:P921 ?topic .\n      ?topic rdfs:label ?topic_label .\n      FILTER (lang(?topic_label) = 'en')\n    }\n    OPTIONAL { \n      ?work wdt:P31 ?type_ .\n      ?type_ rdfs:label ?type_label .\n      FILTER (LANG(?type_label) = 'en') \n    }\n    OPTIONAL { ?work wdt:P577 ?dates . }\n  }\n  GROUP BY ?work\n} AS %result\nWHERE {\n  INCLUDE %result\n  BIND(xsd:date(?datetime) AS ?date)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}\nORDER BY DESC(?date)\nLIMIT 500",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/pathway_recent-articles.sparql",
      "title": "pathway_recent-articles",
      "description": null
    },
    {
      "query_id": "scholia.podcast-episode_data",
      "namespace": "scholia",
      "name": "podcast-episode_data",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT DISTINCT ?description ?value ?valueUrl\nWHERE {\n  BIND(target: AS ?podcast)\n  {\n    BIND(1 AS ?order)\n    BIND(\"Title\" AS ?description)\n    ?podcast wdt:P1476 ?value .\n  }\n  UNION\n  {\n    SELECT\n      (2 AS ?order)\n      (\"Presenters\" AS ?description)\n      (GROUP_CONCAT(?value_; separator=\", \") AS ?value)\n      (CONCAT(\"../authors/\", GROUP_CONCAT(?q; separator=\",\")) AS ?valueUrl)\n    {\n      BIND(1 AS ?dummy)\n      target: wdt:P371 ?iri .\n      BIND(SUBSTR(STR(?iri), 32) AS ?q) \n      ?iri rdfs:label ?value_string . \n      FILTER (LANG(?value_string) = 'en')\n      BIND(COALESCE(?value_string, ?q) AS ?value_)\n    }\n    GROUP BY ?dummy\n  }\n  UNION\n  {\n    ?podcast wdt:P179 ?iri .\n    BIND(SUBSTR(STR(?iri), 32) AS ?q) \n    ?iri rdfs:label ?value_string .\n    FILTER (LANG(?value_string) = 'en')\n    BIND(STR(?value_string) AS ?value)\n    BIND(CONCAT(\"../podcast/\", ?q) AS ?valueUrl)\n    BIND(3 AS ?order)\n    BIND(\"Podcast\" AS ?description)\n  }\n  UNION\n  {\n    ?podcast wdt:P577 ?publication_datetime .\n    BIND(xsd:date(?publication_datetime) AS ?value)\n    BIND(4 AS ?order)\n    BIND(\"Publication date\" AS ?description)\n  }\n  UNION\n  {\n    ?podcast wdt:P4908 ?iri .\n    BIND(SUBSTR(STR(?iri), 32) AS ?q) \n    ?iri rdfs:label ?value_string .\n    FILTER (LANG(?value_string) = 'en')\n    BIND(STR(?value_string) AS ?value)\n    BIND(CONCAT(\"../podcast-season/\", ?q) AS ?valueUrl)\n    BIND(5 AS ?order)\n    BIND(\"Season\" AS ?description)\n  }\n  UNION\n  {\n    ?podcast wdt:P155 ?iri .\n    BIND(SUBSTR(STR(?iri), 32) AS ?q) \n    ?iri rdfs:label ?value_string .\n    FILTER (LANG(?value_string) = 'en')\n    BIND(STR(?value_string) AS ?value)\n    BIND(CONCAT(\"../podcast-episode/\", ?q) AS ?valueUrl)\n    BIND(6 AS ?order)\n    BIND(\"Previous episode\" AS ?description)\n  }\n  UNION\n  {\n    ?podcast wdt:P156 ?iri .\n    BIND(SUBSTR(STR(?iri), 32) AS ?q) \n    ?iri rdfs:label ?value_string .\n    FILTER (LANG(?value_string) = 'en')\n    BIND(STR(?value_string) AS ?value)\n    BIND(CONCAT(\"../podcast-episode/\", ?q) AS ?valueUrl)\n    BIND(7 AS ?order)\n    BIND(\"Next episode\" AS ?description)\n  }\n} \nORDER BY ?order\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/podcast-episode_data.sparql",
      "title": "podcast-episode_data",
      "description": null
    },
    {
      "query_id": "scholia.podcast-episode_guests",
      "namespace": "scholia",
      "name": "podcast-episode_guests",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT DISTINCT ?guest ?guestLabel\n  (CONCAT(\"/\", SUBSTR(STR(?guest), 32)) AS ?guestUrl)\nWHERE {\n  BIND(target: AS ?episode)\n  ?episode wdt:P5030 ?guest .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/podcast-episode_guests.sparql",
      "title": "podcast-episode_guests",
      "description": null
    },
    {
      "query_id": "scholia.podcast-episode_listings",
      "namespace": "scholia",
      "name": "podcast-episode_listings",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n# title: listings for this podcast\nSELECT\n  ?Identifier ?IdentifierLabel\n  ?value (SAMPLE(?idUrls) as ?valueUrl)\n  ?IdentifierDescription\nWITH {\n  SELECT ?Identifier ?Value ?formatterurl WHERE {\n    target: ?IDdir ?Value .\n    ?Identifier wikibase:directClaim ?IDdir ;\n            wdt:P31 wd:Q84574746 .\n    OPTIONAL { \n      ?Identifier wdt:P1630 ?formatterurl .\n    }\n  } LIMIT 500\n} AS %RESULTS {\n  { SELECT * WHERE {\n      INCLUDE %RESULTS\n      BIND(IRI(REPLACE(?formatterurl, '\\\\\\\\$1', ENCODE_FOR_URI(str(?Value)))) AS ?idUrls).\n    }\n  } UNION {\n    SELECT * WHERE {\n      INCLUDE %RESULTS\n      BIND(IRI(REPLACE(?formatterurl, '\\\\\\\\$1', str(?Value))) AS ?idUrls).\n    }\n  }\n  BIND(CONCAT(?Value, \" \u2197\") AS ?value)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?Identifier ?IdentifierLabel ?IdentifierDescription ?value\nORDER BY ASC(?IdentifierLabel)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/podcast-episode_listings.sparql",
      "title": "podcast-episode_listings",
      "description": null
    },
    {
      "query_id": "scholia.podcast-index_languages",
      "namespace": "scholia",
      "name": "podcast-index_languages",
      "sparql": "SELECT ?language ?languageLabel (CONCAT(\"/language/\", SUBSTR(STR(?language), 32), \"/podcast\") AS ?languageUrl)\n  (COUNT(DISTINCT ?podcast) AS ?podcasts)\nWHERE {\n  ?podcast wdt:P31 wd:Q24634210 ; wdt:P407 ?language .\n  BIND(SUBSTR(STR(?language), 32) AS ?q)\n  ?language rdfs:label ?value_string . \n  FILTER (LANG(?value_string) = 'en')\n  BIND(COALESCE(?value_string, ?q) AS ?languageLabel)\n} GROUP BY ?language ?languageLabel\n  ORDER BY DESC(?podcasts)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/podcast-index_languages.sparql",
      "title": "podcast-index_languages",
      "description": null
    },
    {
      "query_id": "scholia.podcast-language_podcast-list",
      "namespace": "scholia",
      "name": "podcast-language_podcast-list",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?podcast ?podcastLabel (CONCAT(\"/podcast/\", SUBSTR(STR(?podcast), 32)) AS ?podcastUrl)\n  (GROUP_CONCAT(?genreWDLabel; separator=\", \") AS ?genre)\nWHERE {\n  ?podcast wdt:P31 wd:Q24634210 ; wdt:P407 target: .\n  OPTIONAL {\n    ?podcast wdt:P136 ?iri\n    BIND(SUBSTR(STR(?iri), 32) AS ?q) \n    ?iri rdfs:label ?value_string . \n    FILTER (LANG(?value_string) = 'en')\n    BIND(COALESCE(?value_string, ?q) AS ?genreWDLabel)\n  }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?podcast ?podcastLabel\n  ORDER BY DESC(?podcastLabel)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/podcast-language_podcast-list.sparql",
      "title": "podcast-language_podcast-list",
      "description": null
    },
    {
      "query_id": "scholia.podcast-language_recent-episodes",
      "namespace": "scholia",
      "name": "podcast-language_recent-episodes",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?publication_date \n  ?podcast ?podcastLabel (CONCAT(\"/podcast/\", SUBSTR(STR(?podcast), 32)) AS ?podcastUrl)\n  ?episode ?episodeLabel (CONCAT(\"/podcast-episode/\", SUBSTR(STR(?episode), 32)) AS ?episodeUrl)\nWITH {\n  SELECT DISTINCT ?episode ?podcast (MIN(?publication_date_) AS ?publication_date) WHERE {\n    ?episode wdt:P31 wd:Q61855877 ; wdt:P179 ?podcast .\n    ?podcast wdt:P407 target: .\n    OPTIONAL {\n      ?episode wdt:P577 ?publication_datetime .\n      BIND(xsd:date(?publication_datetime) AS ?publication_date_)\n    }\n  } GROUP BY ?episode ?podcast\n    ORDER BY DESC(?publication_date)\n    LIMIT 50\n} AS %EPISODES WHERE {\n  INCLUDE %EPISODES\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?publication_date ?episode ?episodeLabel ?podcast ?podcastLabel\n  ORDER BY DESC(?publication_date)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/podcast-language_recent-episodes.sparql",
      "title": "podcast-language_recent-episodes",
      "description": null
    },
    {
      "query_id": "scholia.podcast-season_data",
      "namespace": "scholia",
      "name": "podcast-season_data",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT DISTINCT ?description ?value ?valueUrl\nWHERE {\n  BIND(target: AS ?series)\n  {\n    BIND(1 AS ?order)\n    BIND(\"Title\" AS ?description)\n    ?series wdt:P1476 ?value .\n  }\n  UNION\n  {\n    ?series wdt:P179 ?iri .\n    BIND(SUBSTR(STR(?iri), 32) AS ?q) \n    ?iri rdfs:label ?value_string .\n    FILTER (LANG(?value_string) = 'en')\n    BIND(STR(?value_string) AS ?value)\n    BIND(CONCAT(\"../podcast/\", ?q) AS ?valueUrl)\n    BIND(2 AS ?order)\n    BIND(\"Podcast\" AS ?description)\n  }\n  UNION\n  {\n    SELECT ?description ?order (MAX(?value_) AS ?value) WHERE {\n      BIND(target: AS ?series)\n      ?series wdt:P1113 ?value_ .\n      BIND(3 AS ?order)\n      BIND(\"Number of episodes\" AS ?description)\n    } GROUP BY ?description ?order\n  }\n  UNION\n  {\n    ?series wdt:P155 ?iri .\n    BIND(SUBSTR(STR(?iri), 32) AS ?q)\n    ?iri rdfs:label ?value_string .\n    FILTER (LANG(?value_string) = 'en')\n    BIND(STR(?value_string) AS ?value)\n    BIND(CONCAT(\"../podcast-season/\", ?q) AS ?valueUrl)\n    BIND(6 AS ?order)\n    BIND(\"Previous season\" AS ?description)\n  }\n  UNION\n  {\n    ?series wdt:P156 ?iri .\n    BIND(SUBSTR(STR(?iri), 32) AS ?q)\n    ?iri rdfs:label ?value_string .\n    FILTER (LANG(?value_string) = 'en')\n    BIND(STR(?value_string) AS ?value)\n    BIND(CONCAT(\"../podcast-season/\", ?q) AS ?valueUrl)\n    BIND(7 AS ?order)\n    BIND(\"Next season\" AS ?description)\n  }\n}\nORDER BY ?order\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/podcast-season_data.sparql",
      "title": "podcast-season_data",
      "description": null
    },
    {
      "query_id": "scholia.podcast-season_episodes",
      "namespace": "scholia",
      "name": "podcast-season_episodes",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT DISTINCT ?episode ?episodeLabel\n  (CONCAT(\"/podcast-episode/\", SUBSTR(STR(?episode), 32)) AS ?episodeUrl)\nWHERE {\n  ?episode wdt:P31 wd:Q61855877 ; wdt:P4908 target: .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/podcast-season_episodes.sparql",
      "title": "podcast-season_episodes",
      "description": null
    },
    {
      "query_id": "scholia.podcast_data",
      "namespace": "scholia",
      "name": "podcast_data",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT DISTINCT ?description ?value ?valueUrl\nWHERE {\n  BIND(target: AS ?podcast)\n  {\n    BIND(1 AS ?order)\n    BIND(\"Title\" AS ?description)\n    ?podcast wdt:P1476 ?value .\n  }\n  UNION\n  {\n    SELECT\n      (2 AS ?order)\n      (\"Presenters\" AS ?description)\n      (GROUP_CONCAT(?value_; separator=\", \") AS ?value)\n      (CONCAT(\"../authors/\", GROUP_CONCAT(?q; separator=\",\")) AS ?valueUrl)\n    {\n      BIND(1 AS ?dummy)\n      target: wdt:P371 ?iri .\n      BIND(SUBSTR(STR(?iri), 32) AS ?q) \n      ?iri rdfs:label ?value_string . \n      FILTER (LANG(?value_string) = 'en')\n      BIND(COALESCE(?value_string, ?q) AS ?value_)\n    }\n    GROUP BY ?dummy\n  }\n  UNION\n  {\n    BIND(3 AS ?order)\n    BIND(\"Language\" AS ?description)\n    ?podcast wdt:P407 ?iri .\n    BIND(SUBSTR(STR(?iri), 32) AS ?q) \n    ?iri rdfs:label ?value_string .\n    FILTER (LANG(?value_string) = 'en')\n    BIND(STR(?value_string) AS ?value)\n    BIND(CONCAT(\"../language/\", ?q, \"/podcast\") AS ?valueUrl)\n  }\n  UNION\n  {\n    SELECT ?description ?order (MAX(?value_) AS ?value) WHERE {\n      BIND(target: AS ?podcast)\n      ?podcast wdt:P1113 ?value_ .\n      BIND(4 AS ?order)\n      BIND(\"Number of episodes\" AS ?description)\n    } GROUP BY ?description ?order\n  }\n  UNION\n  {\n    BIND(5 AS ?order)\n    BIND(\"Web feed\" AS ?description)\n    ?podcast wdt:P1019 ?valueUrl .\n    BIND(\"feed\" AS ?value)\n  }\n} \nORDER BY ?order\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/podcast_data.sparql",
      "title": "podcast_data",
      "description": null
    },
    {
      "query_id": "scholia.podcast_listings",
      "namespace": "scholia",
      "name": "podcast_listings",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n# title: listings for this podcast\nSELECT\n  ?Identifier ?IdentifierLabel\n  ?value (SAMPLE(?idUrls) as ?valueUrl)\n  ?IdentifierDescription\nWITH {\n  SELECT ?Identifier ?Value ?formatterurl WHERE {\n    target: ?IDdir ?Value .\n    ?Identifier wikibase:directClaim ?IDdir ;\n            wdt:P31 wd:Q84612171 .\n    OPTIONAL { \n      ?Identifier wdt:P1630 ?formatterurl .\n    }\n  } LIMIT 500\n} AS %RESULTS {\n  { SELECT * WHERE {\n      INCLUDE %RESULTS\n      BIND(IRI(REPLACE(?formatterurl, '\\\\\\\\$1', ENCODE_FOR_URI(str(?Value)))) AS ?idUrls).\n    }\n  } UNION {\n    SELECT * WHERE {\n      INCLUDE %RESULTS\n      BIND(IRI(REPLACE(?formatterurl, '\\\\\\\\$1', str(?Value))) AS ?idUrls).\n    }\n  }\n  BIND(CONCAT(?Value, \" \u2197\") AS ?value)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?Identifier ?IdentifierLabel ?IdentifierDescription ?value\nORDER BY ASC(?IdentifierLabel)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/podcast_listings.sparql",
      "title": "podcast_listings",
      "description": null
    },
    {
      "query_id": "scholia.podcast_recent-episodes",
      "namespace": "scholia",
      "name": "podcast_recent-episodes",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?publication_date ?episode ?episodeLabel\n  (CONCAT(\"/podcast-episode/\", SUBSTR(STR(?episode), 32)) AS ?episodeUrl)\nWITH {\n  SELECT DISTINCT ?episode (MIN(?publication_date_) AS ?publication_date) WHERE {\n    ?episode wdt:P31 wd:Q61855877 ; wdt:P179 target: .\n    OPTIONAL {\n      ?episode wdt:P577 ?publication_datetime .\n      BIND(xsd:date(?publication_datetime) AS ?publication_date_)\n    }\n  } GROUP BY ?episode\n    ORDER BY DESC(?publication_date)\n    LIMIT 50\n} AS %EPISODES WHERE {\n  INCLUDE %EPISODES\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?publication_date ?episode ?episodeLabel\nORDER BY DESC(?publication_date)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/podcast_recent-episodes.sparql",
      "title": "podcast_recent-episodes",
      "description": null
    },
    {
      "query_id": "scholia.podcast_seasons",
      "namespace": "scholia",
      "name": "podcast_seasons",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT DISTINCT ?season ?seasonLabel\n  (CONCAT(\"/podcast-season/\", SUBSTR(STR(?season), 32)) AS ?seasonUrl)\n  (MAX(?count) AS ?episodeCount)\nWHERE {\n  ?season wdt:P31 wd:Q69154911 ; wdt:P179 target: .\n  OPTIONAL {\n    ?season wdt:P1113 ?count .\n  }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?season ?seasonLabel ?seasonUrl\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/podcast_seasons.sparql",
      "title": "podcast_seasons",
      "description": null
    },
    {
      "query_id": "scholia.podcast_topics",
      "namespace": "scholia",
      "name": "podcast_topics",
      "sparql": "#defaultView:BubbleChart\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?score ?topic ?topicLabel\nWITH {\n  SELECT\n    (SUM(?score_) AS ?score)\n    ?topic\n  WHERE {\n    { \n      target: wdt:P921 ?topic .\n      BIND(20 AS ?score_)\n    }\n    UNION\n    {\n      SELECT (3 AS ?score_) ?topic WHERE {\n        ?episode wdt:P179 target: ;\n              wdt:P921 ?topic . \n      }\n    }\n  }\n  GROUP BY ?topic\n} AS %results \nWHERE {\n  INCLUDE %results\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?score)\nLIMIT 200\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/podcast_topics.sparql",
      "title": "podcast_topics",
      "description": null
    },
    {
      "query_id": "scholia.printer-index_map",
      "namespace": "scholia",
      "name": "printer-index_map",
      "sparql": "#defaultView:Map{\"layer\": \"?counts\"}\nSELECT\n  ?geo\n  ?printer ?printerLabel ?printerDescription\n  ?counts\n  ?example_work ?example_workLabel\nWHERE {\n  hint:Query hint:optimizer \"None\".\n  {\n    SELECT\n      (COUNT(?work) AS ?count)\n      ?printer\n      (SAMPLE(?work) AS ?example_work)\n    WHERE {\n      ?work wdt:P872 ?printer .\n    }\n    GROUP BY ?printer\n  }\n  BIND(IF(?count = 1, \"1\", IF(?count <= 5, \"2-5\", IF(?count <= 10, \"6-10\", \"10+\"))) AS ?counts)\n  ?printer wdt:P159? / wdt:P625 ?geo\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,da,de,es,fr,it,jp,nl,no,ru,sv,zh\". }\n}\nORDER BY DESC(?count)\nLIMIT 1000\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/printer-index_map.sparql",
      "title": "printer-index_map",
      "description": null
    },
    {
      "query_id": "scholia.printer-index_printed-works-per-publisher",
      "namespace": "scholia",
      "name": "printer-index_printed-works-per-publisher",
      "sparql": "SELECT\n  ?count\n  ?printer ?printerLabel ?printerDescription (CONCAT(\"/printer/\", SUBSTR(STR(?printer), 32)) AS ?printerUrl)\n  ?example_work ?example_workLabel (CONCAT(\"/work/\", SUBSTR(STR(?example_work), 32)) AS ?example_workUrl)\nWHERE {\n  {\n    SELECT\n      (COUNT(?work) AS ?count)\n      ?printer\n      (SAMPLE(?work) AS ?example_work)\n    WHERE {\n      ?work wdt:P872 ?printer .\n    }\n    GROUP BY ?printer\n  }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}\nORDER BY DESC(?count)\nLIMIT 1000\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/printer-index_printed-works-per-publisher.sparql",
      "title": "printer-index_printed-works-per-publisher",
      "description": null
    },
    {
      "query_id": "scholia.printer_works",
      "namespace": "scholia",
      "name": "printer_works",
      "sparql": "# List of printed works by date\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?date\n  ?work ?workLabel (CONCAT(\"/work/\", SUBSTR(STR(?work), 32)) AS ?workUrl)\n  ?example_author ?example_authorLabel (CONCAT(\"/author/\", SUBSTR(STR(?example_author), 32)) AS ?example_authorUrl)\nWHERE {\n  {\n    SELECT\n      (MIN(?date_) AS ?date)\n      ?work\n      (SAMPLE(?author) AS ?example_author)\n    WHERE {\n      ?work wdt:P872 target: .\n      OPTIONAL { ?work wdt:P577 ?datetime . BIND(xsd:date(?datetime) AS ?date_) }\n      OPTIONAL { ?work wdt:P50 ?author }\n    }\n    GROUP BY ?work\n  }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}\nORDER BY DESC(?date)\nLIMIT 1000\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/printer_works.sparql",
      "title": "printer_works",
      "description": null
    },
    {
      "query_id": "scholia.project_citations-per-budget",
      "namespace": "scholia",
      "name": "project_citations-per-budget",
      "sparql": "SELECT\n  ?cites_per_million\n  ?citations \n  ?budget ?currency ?currencyLabel\n  ?short_name\n  ?project ?projectLabel\nWITH {\n  SELECT\n    (COUNT(?citing_work) / ?budget * 1000000 AS ?cites_per_million)\n    (COUNT(?citing_work) AS ?citations)\n    ?budget ?currency\n    ?project\n  WHERE {\n    ?project p:P2769 / psv:P2769 ?budget_value .\n    ?budget_value wikibase:quantityAmount ?budget .\n    ?budget_value wikibase:quantityUnit ?currency .\n    ?work wdt:P859 ?project .\n    ?citing_work wdt:P2860 ?work .\n  } \n  GROUP BY ?project ?budget ?currency\n} AS %results\nWHERE {\n  INCLUDE %results\n  OPTIONAL { ?project wdt:P1813 ?short_name }\n  SERVICE wikibase:label {\n    bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\". }\n}\nORDER BY DESC(?cites_per_million)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/project_citations-per-budget.sparql",
      "title": "project_citations-per-budget",
      "description": null
    },
    {
      "query_id": "scholia.project_partners",
      "namespace": "scholia",
      "name": "project_partners",
      "sparql": "#defaultView:Map\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?partner ?partnerLabel ?location\nWITH {\n  SELECT DISTINCT ?partner ?location WHERE {\n    target: (^wdt:P1344 | wdt:P710)* / (wdt:P527 | wdt:P710 | wdt:P1416) ?partner .\n    ?partner wdt:P159* / wdt:P625 ?location .\n  }\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/project_partners.sparql",
      "title": "project_partners",
      "description": null
    },
    {
      "query_id": "scholia.project_prolific-authors",
      "namespace": "scholia",
      "name": "project_prolific-authors",
      "sparql": "# Prolific authors for a specific project\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?count ?author ?authorLabel ?orcid ?example_work ?example_workLabel\nWITH {\n  SELECT DISTINCT ?work WHERE {\n    {\n      ?work wdt:P921 / (wdt:P527+ | wdt:P1269+ | (wdt:P31* / wdt:P279*) ) target: .\n    } UNION { ?work wdt:P859/(wdt:P1344|^wdt:P710)* target: .\n    } UNION {\n      target: ?propp ?statement .\n      ?statement a wikibase:BestRank ;\n                 prov:wasDerivedFrom/pr:P248 ?work .\n    }\n  }\n} AS %works\nWITH {\n  SELECT\n    ?author\n    (COUNT(?work) AS ?count)\n    (SAMPLE(?work) AS ?example_work)\n  WHERE {\n    INCLUDE %works\n    ?work wdt:P50 ?author .\n  }\n  GROUP BY ?author\n} AS %result\nWHERE {\n  INCLUDE %result\n          \n  # Include optional ORCID iD\n  OPTIONAL { ?author wdt:P496 ?orcid . }\n  \n  # Label the results\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}\nORDER BY DESC(?count)\nLIMIT 50",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/project_prolific-authors.sparql",
      "title": "project_prolific-authors",
      "description": null
    },
    {
      "query_id": "scholia.project_publications-per-year",
      "namespace": "scholia",
      "name": "project_publications-per-year",
      "sparql": "#defaultView:BarChart\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nselect ?year (count(?work) as ?number_of_publications) where {\n  {\n    select (str(?year_) as ?year) (0 as ?pages) where {\n      # default values = 0\n      ?year_item wdt:P31 wd:Q577 . \n      ?year_item wdt:P585 ?date .\n      bind(year(?date) as ?year_)\n      {\n        select (min(?year_) as ?earliest_year) where {\n          { ?work wdt:P921/wdt:P31*/wdt:P279* target: . }\n          union { ?work wdt:P921/wdt:P527+ target: . }\n          union { ?work wdt:P921/wdt:P1269+ target: . }\n          union { ?work wdt:P859/wdt:P1344* target: . }\n          union { target: ?propp ?statement .\n                  ?statement a wikibase:BestRank ;\n                             prov:wasDerivedFrom/pr:P248 ?work . }\n          ?work wdt:P577 ?publication_date . \n          bind(year(?publication_date) as ?year_)\n        }\n      }\n      bind(year(now()) as ?next_year)\n      filter (?year_ >= ?earliest_year && ?year_ <= ?next_year)\n    }\n  }\n  union {\n    select ?work (min(?years) as ?year) where {\n      { ?work wdt:P921/wdt:P31*/wdt:P279* target: . }\n      union { ?work wdt:P921/wdt:P527+ target: . }\n      union { ?work wdt:P921/wdt:P1269+ target: . }\n      union { ?work wdt:P859/wdt:P1344* target: . }\n      union { target: ?propp ?statement .\n              ?statement a wikibase:BestRank ;\n                         prov:wasDerivedFrom/pr:P248 ?work . }\n      ?work wdt:P577 ?dates .\n      bind(str(year(?dates)) as ?years) .\n    }\n    group by ?work \n  }\n}\ngroup by ?year \norder by ?year",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/project_publications-per-year.sparql",
      "title": "project_publications-per-year",
      "description": null
    },
    {
      "query_id": "scholia.project_recent-articles",
      "namespace": "scholia",
      "name": "project_recent-articles",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?date ?work ?workLabel ?type ?topics\nWITH {\n  SELECT DISTINCT ?work WHERE {\n    {\n      ?work wdt:P921 / (wdt:P527+ | wdt:P1269+ | (wdt:P31* / wdt:P279*) ) target: .\n    }\n    UNION\n    {\n      # Works funded by the project, - recursively\n      ?work wdt:P859+ target: .\n    }\n    UNION\n    {\n      # Works funded by the project, - recursively\n      ?work wdt:P859/(wdt:P1344|^wdt:P710)* target: .\n    }\n    UNION {\n      target: ?propp ?statement .\n      ?statement a wikibase:BestRank ;\n                 prov:wasDerivedFrom/pr:P248 ?work .\n    }\n  }\n} AS %works\nWITH {\n  SELECT\n    (MAX(?dates) as ?datetime)\n    ?work\n    (GROUP_CONCAT(DISTINCT ?type_label; separator=\", \") AS ?type)\n    (GROUP_CONCAT(?topic_label; separator=\" // \") AS ?topics)\n  WHERE {\n    INCLUDE %works\n    OPTIONAL {\n       ?work wdt:P31 ?type_ .\n       ?type_ rdfs:label ?type_label . FILTER (LANG(?type_label) = 'en')\n    }\n    OPTIONAL { ?work wdt:P577 ?dates . }\n    OPTIONAL {\n      ?work wdt:P921 ?topic .\n      ?topic rdfs:label ?topic_label . FILTER (lang(?topic_label) = 'en')\n    }\n  }\n  GROUP BY ?work\n} AS %result\nWHERE {\n  INCLUDE %result\n  BIND(xsd:date(?datetime) AS ?date)\n  SERVICE wikibase:label {\n    bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .\n  }\n}\nORDER BY DESC(?date)\nLIMIT 500",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/project_recent-articles.sparql",
      "title": "project_recent-articles",
      "description": null
    },
    {
      "query_id": "scholia.project_statistics",
      "namespace": "scholia",
      "name": "project_statistics",
      "sparql": "# title: Statistics for projects identifiers\nSELECT ?count ?description {\n  {\n    { SELECT (COUNT(*) AS ?count) WHERE { [] wdt:P3400 []. } }\n    BIND(\"Total number of projects with a CORDIS number\" AS ?description)\n  }\n  UNION \n  {\n    { SELECT (COUNT(*) AS ?count) WHERE { [] wdt:P4870 []. } }\n    BIND(\"Total number of projects with a GEPRIS number\" AS ?description)\n  }\n  UNION \n  {\n    { SELECT (COUNT(*) AS ?count) WHERE { [] wdt:P6536 []. } }\n    BIND(\"Total number of projects with a Gateway to Research Project ID\" AS ?description)\n  }\n}\nORDER BY DESC(?count)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/project_statistics.sparql",
      "title": "project_statistics",
      "description": null
    },
    {
      "query_id": "scholia.project_timeline",
      "namespace": "scholia",
      "name": "project_timeline",
      "sparql": "#defaultView:Timeline{\"hide\": [\"?end_time\", \"?start_time\"]}\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT DISTINCT ?start_time ?end_time ?description WHERE {\n  {  \n    target: (wdt:P571 | wdt:P580) ?start_time ;\n      (wdt:P576 | wdt:P582) ?end_time .\n    BIND(\"Project time\" AS ?description)\n  } \n  UNION \n  {  \n    target: (^wdt:P1344 | wdt:P710)+ ?project .\n    ?project (wdt:P571 | wdt:P580) ?start_time ;\n             (wdt:P576 | wdt:P582) ?end_time .\n    ?project rdfs:label ?projectName .\n    FILTER (lang(?projectName) = \"en\")\n    BIND(?projectName AS ?description)\n  }   \n  UNION \n  {\n    ?work wdt:P859/(wdt:P1344|^wdt:P710)* target: ;\n                wdt:P577 ?start_time .\n    BIND(\"Publication\" AS ?description)\n  }\n  UNION\n  {\n    ?event wdt:P859 target: .\n    ?event wdt:P585 | wdt:P580 ?start_time .\n    BIND(\"\ud83d\udcc5 Sponsored event\" AS ?description)\n  }\n}",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/project_timeline.sparql",
      "title": "project_timeline",
      "description": null
    },
    {
      "query_id": "scholia.project_topic-scores",
      "namespace": "scholia",
      "name": "project_topic-scores",
      "sparql": "#defaultView:BubbleChart\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?score ?topic ?topicLabel\nWITH {\n  SELECT\n    (SUM(?score_) AS ?score)\n    ?topic\n  WHERE {\n    { \n      target: wdt:P101 ?topic .\n      BIND(20 AS ?score_)\n    }\n    UNION \n    {\n      SELECT (3 AS ?score_) ?topic WHERE {\n        ?work wdt:P859/wdt:P1344* target: ;\n              wdt:P921 ?topic . \n      }\n    }\n    UNION\n    {\n      SELECT (1 AS ?score_) ?topic WHERE {\n        ?work wdt:P859/wdt:P1344* target: .\n        ?citing_work wdt:P2860 ?work .\n        ?citing_work wdt:P921 ?topic . \n      }\n    }\n  }\n  GROUP BY ?topic\n} AS %results \nWHERE {\n  INCLUDE %results\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,da,de,es,jp,no,ru,sv,zh\". }\n}\nORDER BY DESC(?score)\nLIMIT 200",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/project_topic-scores.sparql",
      "title": "project_topic-scores",
      "description": null
    },
    {
      "query_id": "scholia.property_item-counts",
      "namespace": "scholia",
      "name": "property_item-counts",
      "sparql": "#defaultView:BubbleChart\n\nPREFIX target: <http://www.wikidata.org/prop/direct/{{ p }}>\n\nSELECT ?count ?s ?sLabel \nWITH {\n  SELECT (COUNT(?o) AS ?count) ?s WHERE {\n    ?s target: ?o .\n  }\n  GROUP BY ?s\n  ORDER BY DESC(?count)\n  LIMIT 100\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language  \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\" . }\n}\nORDER BY DESC(?count)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/property_item-counts.sparql",
      "title": "property_item-counts",
      "description": null
    },
    {
      "query_id": "scholia.property_property-value-counts",
      "namespace": "scholia",
      "name": "property_property-value-counts",
      "sparql": "#defaultView:BubbleChart\n\nPREFIX target: <http://www.wikidata.org/prop/direct/{{ p }}>\n\nSELECT ?count ?o ?oLabel \nWITH {\n  SELECT (COUNT(?s) AS ?count) ?o WHERE {\n    ?s target: ?o .\n  }\n  GROUP BY ?o\n  ORDER BY DESC(?count)\n  LIMIT 100\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language  \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\" . }\n}\nORDER BY DESC(?count)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/property_property-value-counts.sparql",
      "title": "property_property-value-counts",
      "description": null
    },
    {
      "query_id": "scholia.property_use",
      "namespace": "scholia",
      "name": "property_use",
      "sparql": "PREFIX target: <http://www.wikidata.org/prop/direct/{{ p }}>\n\nSELECT ?item ?itemLabel ?property_value ?property_valueLabel WHERE {\n  ?item target: ?property_value .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}\nLIMIT 500\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/property_use.sparql",
      "title": "property_use",
      "description": null
    },
    {
      "query_id": "scholia.protein_cofunctional-proteins",
      "namespace": "scholia",
      "name": "protein_cofunctional-proteins",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?count ?protein ?proteinLabel ?species ?speciesLabel ?functions\nWITH {\n  SELECT ?protein (COUNT(?function) AS ?count)\n         (GROUP_CONCAT(?function_label; separator=\" // \") AS ?functions)\n  WHERE {\n    BIND(target: AS ?query_protein)\n    ?query_protein wdt:P680 ?function .\n    FILTER (?query_protein != ?protein)\n    ?protein wdt:P680 ?function . \n    ?function rdfs:label ?function_label FILTER(lang(?function_label) = \"en\")\n  }\n  GROUP BY ?protein\n} AS %result \nWHERE {\n  INCLUDE %result\n  OPTIONAL { ?protein wdt:P703 ?species . }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}\nORDER BY DESC(?count)\nLIMIT 500",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/protein_cofunctional-proteins.sparql",
      "title": "protein_cofunctional-proteins",
      "description": null
    },
    {
      "query_id": "scholia.protein_cointeracting-proteins",
      "namespace": "scholia",
      "name": "protein_cointeracting-proteins",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?count\n  ?protein ?proteinLabel (CONCAT(\"/protein/\", SUBSTR(STR(?protein), 32)) AS ?proteinUrl)\n  ?species ?speciesLabel (CONCAT(\"/taxon/\", SUBSTR(STR(?species), 32)) AS ?speciesUrl)\n  ?chemicals\nWITH {\n  SELECT\n    (COUNT(?chemical) AS ?count)\n    ?protein\n    (GROUP_CONCAT(?chemical_label; separator=\" // \") AS ?chemicals)\n  WHERE {\n    target: wdt:P129 ?chemical .\n    FILTER (target: != ?protein)\n    ?protein wdt:P129 ?chemical . \n    ?chemical rdfs:label ?chemical_label FILTER(lang(?chemical_label) = \"en\")\n  }\n  GROUP BY ?protein\n} AS %result \nWHERE {\n  INCLUDE %result\n  OPTIONAL { ?protein wdt:P703 ?species . }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}\nORDER BY DESC(?count)\nLIMIT 500\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/protein_cointeracting-proteins.sparql",
      "title": "protein_cointeracting-proteins",
      "description": null
    },
    {
      "query_id": "scholia.protein_participates-in",
      "namespace": "scholia",
      "name": "protein_participates-in",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?type ?complex_or_process ?complex_or_processLabel\nWITH {\n  SELECT DISTINCT ?type ?complex_or_process WHERE {\n    VALUES ?part { target: }\n    VALUES ?process { wd:Q2996394 wd:Q4915012 }\n    { ?part ^wdt:P527 ?complex_or_process . ?complex_or_process wdt:P31 wd:Q22325163 ; BIND (\"complex\" AS ?type ) }\n    UNION\n    { ?part ^wdt:P527 ?complex_or_process . ?complex_or_process wdt:P31 ?process ; BIND (\"biological process\" AS ?type ) }\n  }\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n} ORDER BY ASC(?partLabel)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/protein_participates-in.sparql",
      "title": "protein_participates-in",
      "description": null
    },
    {
      "query_id": "scholia.protein_publications-per-year",
      "namespace": "scholia",
      "name": "protein_publications-per-year",
      "sparql": "#defaultView:BarChart\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n# Inspired from LEGOLAS - http://abel.lis.illinois.edu/legolas/\n# Shubhanshu Mishra, Vetle Torvik\nselect ?year (count(?work) as ?number_of_publications) where {\n  {\n    select (str(?year_) as ?year) (0 as ?pages) where {\n      # default values = 0\n      ?year_item wdt:P31 wd:Q577 . \n      ?year_item wdt:P585 ?date .\n      bind(year(?date) as ?year_)\n      {\n        select (min(?year_) as ?earliest_year) where {\n          { ?work wdt:P921/wdt:P31*/wdt:P279* target: . }\n          union { ?work wdt:P921/wdt:P361+ target: . }\n          union { ?work wdt:P921/wdt:P1269+ target: . }\n          ?work wdt:P577 ?publication_date . \n          bind(year(?publication_date) as ?year_)\n        }\n      }\n      bind(year(now()) as ?next_year)\n      filter (?year_ >= ?earliest_year && ?year_ <= ?next_year)\n    }\n  }\n  union {\n    select ?work (min(?years) as ?year) where {\n      { ?work wdt:P921/wdt:P31*/wdt:P279* target: . }\n      union { ?work wdt:P921/wdt:P361+ target: . }\n      union { ?work wdt:P921/wdt:P1269+ target: . }\n      ?work wdt:P577 ?dates .\n      bind(str(year(?dates)) as ?years) .\n    }\n    group by ?work \n  }\n}\ngroup by ?year \norder by ?year",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/protein_publications-per-year.sparql",
      "title": "protein_publications-per-year",
      "description": null
    },
    {
      "query_id": "scholia.protein_similar-proteins",
      "namespace": "scholia",
      "name": "protein_similar-proteins",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?count ?protein ?proteinLabel ?species ?speciesLabel (?functions AS ?property_value)\nWITH {\n  SELECT ?protein (COUNT(?function) AS ?count)\n         (GROUP_CONCAT(?function_label; separator=\" // \") AS ?functions)\n  WHERE {\n    BIND(target: AS ?query_protein)\n    ?query_protein wdt:P680 | wdt:P681 | wdt:P682 | wdt:P129 ?function .\n    FILTER (?query_protein != ?protein)\n    ?protein wdt:P680 | wdt:P681 | wdt:P682 | wdt:P129 ?function . \n    ?function rdfs:label ?function_label FILTER(lang(?function_label) = \"en\")\n  }\n  GROUP BY ?protein\n} AS %result \nWHERE {\n  INCLUDE %result\n  OPTIONAL { ?protein wdt:P703 ?species . }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}\nORDER BY DESC(?count)\nLIMIT 500",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/protein_similar-proteins.sparql",
      "title": "protein_similar-proteins",
      "description": null
    },
    {
      "query_id": "scholia.publisher_citations-works",
      "namespace": "scholia",
      "name": "publisher_citations-works",
      "sparql": "#defaultView:ScatterChart\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?work_count ?citation_count ?journal ?journalLabel \nWITH {\n  SELECT ?work_count ?citation_count ?journal {\n    {\n      SELECT ?journal (COUNT(?work) AS ?work_count) {\n  \t    ?journal wdt:P123 target: .\n  \t    ?work wdt:P1433 ?journal .\n      }\n      GROUP BY ?journal \n    }\n    {\n      SELECT ?journal (COUNT(?citing_work) AS ?citation_count) {\n  \t    ?journal wdt:P123 target: .\n  \t    ?work wdt:P1433 ?journal .\n        ?citing_work wdt:P2860 ?work . \n      }\n      GROUP BY ?journal \n    } \n  }\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\" . } \n}\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/publisher_citations-works.sparql",
      "title": "publisher_citations-works",
      "description": null
    },
    {
      "query_id": "scholia.publisher_editor-photos",
      "namespace": "scholia",
      "name": "publisher_editor-photos",
      "sparql": "#defaultView:ImageGrid\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?image\n  ?editor ?editorLabel \n  ?venues\nWITH {\n  SELECT DISTINCT\n    (SAMPLE(?image_) AS ?image)\n    ?editor \n    (GROUP_CONCAT(?venue_label; separator=\" // \") AS ?venues)\n  WHERE {\n    # Find editors for journals published by publisher\n    ?venue_ wdt:P123 target: .\n    ?venue_ wdt:P98 | wdt:P5769 ?editor .\n    ?editor wdt:P18 ?image_ .\n    OPTIONAL {\n      ?venue_ rdfs:label ?venue_label . FILTER(LANG(?venue_label) = 'en')\n    }\n  }\n  GROUP BY ?editor\n} AS %result\nWHERE {\n  INCLUDE %result \n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,fr,jp,nl,sv,ru,zh\" . } \n}\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/publisher_editor-photos.sparql",
      "title": "publisher_editor-photos",
      "description": null
    },
    {
      "query_id": "scholia.publisher_editors",
      "namespace": "scholia",
      "name": "publisher_editors",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?number_of_editorships\n  ?editor ?editorLabel \n  ?example_venue ?example_venueLabel\nWITH {\n  SELECT\n    (COUNT(?venue_) AS ?number_of_editorships)\n    ?editor\n    (SAMPLE(?venue_) AS ?example_venue)\n    # (GROUP_CONCAT(?journal_label; separator=\" // \") AS ?venues)\n  WHERE {\n    # Find editors for a work published by publisher\n    ?venue_ wdt:P123 target: .\n    ?venue_ wdt:P98 | wdt:P5769 ?editor .\n    # ?venue_ rdfs:label ?venue_label . FILTER(LANG(?venue_label) = 'en')\n  } \n  GROUP BY ?editor\n} AS %result\nWHERE {\n  # Label the result\n  INCLUDE %result \n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . } \n}\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/publisher_editors.sparql",
      "title": "publisher_editors",
      "description": null
    },
    {
      "query_id": "scholia.publisher_journals",
      "namespace": "scholia",
      "name": "publisher_journals",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  (SAMPLE(?number_of_works_) AS ?number_of_works)\n  (MAX(?bfi) AS ?BFI)\n  ?journal ?journalLabel\n  (GROUP_CONCAT(?themes_labels; separator=\", \") as ?theme)\nWITH {\n  SELECT \n    ?journal\n    (COUNT(?work) AS ?number_of_works_)\n  WHERE {\n    ?journal wdt:P123 target: .\n    OPTIONAL { ?work wdt:P1433 ?journal . }\n  }\n  GROUP BY ?journal \n} AS %journals\nWHERE {\n  INCLUDE %journals\n  OPTIONAL {\n    ?journal wdt:P921 ?themes .\n    ?themes rdfs:label ?themes_labels .\n    FILTER (LANG(?themes_labels) = 'en')\n  }\n  OPTIONAL { ?journal wdt:P1240 ?bfi . }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . } \n} \nGROUP BY ?journal ?journalLabel\nORDER BY DESC(?number_of_works)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/publisher_journals.sparql",
      "title": "publisher_journals",
      "description": null
    },
    {
      "query_id": "scholia.publisher_most-cited",
      "namespace": "scholia",
      "name": "publisher_most-cited",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n# Count the number of citations for each journal published by a specified publisher\nSELECT\n  ?number_of_citations\n  ?work ?workLabel ?journal ?journalLabel \nWITH {\n  SELECT ?work ?journal (COUNT(?citing_work) AS ?number_of_citations) WHERE {\n    ?journal wdt:P123 target: .\n    ?work wdt:P1433 ?journal .\n    ?citing_work wdt:P2860 ?work\n  }\n  GROUP BY ?work ?journal\n  ORDER BY DESC(?number_of_citations)\n  LIMIT 500  \n} AS %result\nWHERE {\n  INCLUDE %result\n  # Label the result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . } \n}\nORDER BY DESC(?number_of_citations)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/publisher_most-cited.sparql",
      "title": "publisher_most-cited",
      "description": null
    },
    {
      "query_id": "scholia.publisher_timeline",
      "namespace": "scholia",
      "name": "publisher_timeline",
      "sparql": "#defaultView:Timeline\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT DISTINCT ?datetime ?venue ?venueLabel WHERE {\n  # Publisher\n  ?venue wdt:P123 target: .\n  \n  # Periodic literature\n  ?venue wdt:P31 / wdt:P279* wd:Q1002697 .\n  \n  # When the journal was started \n  ?venue wdt:P571 ?datetime.\n  \n  # Label the journal\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?datetime)\nLIMIT 50\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/publisher_timeline.sparql",
      "title": "publisher_timeline",
      "description": null
    },
    {
      "query_id": "scholia.series_authors",
      "namespace": "scholia",
      "name": "series_authors",
      "sparql": "# Statistics for a serial grouped by author\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?number_of_works ?number_of_citations\n  ?author ?authorLabel\n  ?example_work ?example_workLabel\nWITH {\n  SELECT\n    (COUNT(DISTINCT ?work) AS ?number_of_works) \n    (COUNT(?citing_work) AS ?number_of_citations)\n    (SAMPLE(?work) AS ?example_work)\n    ?author\n  WHERE {\n    ?collection wdt:P179 target: .\n    ?work wdt:P1433 ?collection .\n    ?work wdt:P50 ?author .\n    OPTIONAL { ?citing_work wdt:P2860 ?work . }\n  }\n  GROUP BY ?author\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}\nORDER BY DESC(?number_of_works) DESC(?number_of_citations)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/series_authors.sparql",
      "title": "series_authors",
      "description": null
    },
    {
      "query_id": "scholia.series_in-series",
      "namespace": "scholia",
      "name": "series_in-series",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?publication_date ?number_of_papers ?short_name ?ordinal ?collection ?collectionLabel\nWITH {\n  SELECT\n    (COUNT(?work) AS ?number_of_papers)\n    (MIN(?datetimes) AS ?publication_datetime)\n    (SAMPLE(?short_name_) AS ?short_name)\n    ?collection\n    (SAMPLE(?ordinal) AS ?ordinal)\n  WHERE {\n    ?collection wdt:P179 target: .\n    OPTIONAL { ?work wdt:P1433 ?collection . }\n    OPTIONAL { ?collection wdt:P1813 ?short_name_ . }\n    OPTIONAL { ?collection wdt:P577 ?datetimes . }\n    OPTIONAL{\n      ?collection p:P179/pq:P1545 ?ordinal.\n    }\n  }\n  GROUP BY ?collection\n} AS %result\nWHERE {\n  INCLUDE %result\n  BIND(xsd:date(?publication_datetime) AS ?publication_date)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}\nORDER BY DESC(?publication_date) DESC(?number_of_papers)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/series_in-series.sparql",
      "title": "series_in-series",
      "description": null
    },
    {
      "query_id": "scholia.series_organizations",
      "namespace": "scholia",
      "name": "series_organizations",
      "sparql": "#defaultView:BarChart\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?year ?count ?organization ?organizationLabel\nWITH {\n  SELECT (MIN(?year_) AS ?year) ?work WHERE {\n    ?collection wdt:P179 target: .\n    ?work wdt:P1433 ?collection .\n    ?work wdt:P577 ?datetimes .\n    BIND(STR(YEAR(?datetimes)) AS ?year_)\n  } \n  GROUP BY ?work\n} AS %works                \nWITH {\n  SELECT ?year (COUNT(?work) AS ?count) ?organization\n  WHERE {\n    INCLUDE %works\n\t?work wdt:P50 ?author .\n    \n    # For now, only employment relation\n    # We could add affiliation with \"| wdt:P1416/wdt:P361*\" \n    # Note that this extra term will double count.\n    ?author wdt:P108  ?organization . \n   }\n   GROUP BY ?year ?organization\n                  \n   # Exclude organizations with only a single count\n   # HAVING(?count > 1)\n} AS %result\nWHERE {\n INCLUDE %result\n SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\" }\n}\nORDER BY ?year\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/series_organizations.sparql",
      "title": "series_organizations",
      "description": null
    },
    {
      "query_id": "scholia.series_topics",
      "namespace": "scholia",
      "name": "series_topics",
      "sparql": "#defaultView:BubbleChart\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?count ?topic ?topicLabel\nWITH {\n  SELECT (COUNT(*) AS ?count) ?topic\n  WHERE {\n    # Topics of series\n    { target: wdt:P921 ?topic . }\n    \n    # Topics of collections in series\n    UNION { ?collection wdt:P179 target: ; wdt:P921 ?topic . }\n    \n    # Topics of works in collections in series\n    UNION { ?work wdt:P1433/wdt:P179 target: ; wdt:P921 ?topic . }\n  }\n  GROUP BY ?topic\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\" }\n}\nORDER BY DESC(?count)\nDESC(?count)\nLIMIT 100\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/series_topics.sparql",
      "title": "series_topics",
      "description": null
    },
    {
      "query_id": "scholia.series_works",
      "namespace": "scholia",
      "name": "series_works",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?number_of_citations\n  ?publication_date\n  ?work ?workLabel\nWITH {\n  SELECT\n    (MIN(?datetimes) AS ?publication_datetime)\n    (COUNT(DISTINCT ?citing_work) AS ?number_of_citations)\n    ?work\n  WHERE {\n    ?collection wdt:P179 target: .\n    ?work wdt:P1433 ?collection .\n    OPTIONAL { ?work wdt:P577 ?datetimes . }\n    OPTIONAL { ?citing_work wdt:P2860 ?work . }\n  }\n  GROUP BY ?work\n} AS %result\nWHERE {\n  INCLUDE %result\n  BIND(xsd:date(?publication_datetime) AS ?publication_date)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}\nORDER BY DESC(?number_of_citations) DESC(?publication_date)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/series_works.sparql",
      "title": "series_works",
      "description": null
    },
    {
      "query_id": "scholia.software-curation_missing-describes-use",
      "namespace": "scholia",
      "name": "software-curation_missing-describes-use",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT DISTINCT ?work ?workLabel (CONCAT(\"/work/\", SUBSTR(STR(?work),32)) AS ?workUrl)\n  ?softwarename\n  (CONCAT(SUBSTR(STR(?work),32), \"\\tP4510\\t{{ q }}\\tS887\\tQ69652283\") AS ?quickStatements)\n  (CONCAT(\"https://quickstatements.toolforge.org/#/v1=\",\n          SUBSTR(STR(?work),32), \"%7CP4510%7C{{ q }}%7CS887%7CQ69652283\") AS ?quickStatementsUrl)\nWITH {\n  SELECT  ?work ?softwarename WHERE {\n    target: wdt:P31 wd:Q7397 ; rdfs:label ?softwarename .\n    FILTER(lang(?softwarename) = \"en\")\n    SERVICE wikibase:mwapi {\n      bd:serviceParam wikibase:endpoint \"www.wikidata.org\";\n      wikibase:api \"Generator\";\n      mwapi:generator \"search\";\n      mwapi:gsrsearch ?softwarename;\n      mwapi:gsrlimit \"max\".\n      ?work wikibase:apiOutputItem mwapi:title.\n    }\n    ?work wdt:P1476 ?title .\n    MINUS {?work wdt:P4510 target: }\n    FILTER (REGEX(LCASE(?title), LCASE(CONCAT( \"\\\\\\\\\", \"b\", ?softwarename ,\"\\\\\\\\\", \"b\"))))\n  } LIMIT 200\n} AS %works WHERE {\n  INCLUDE %works\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/software-curation_missing-describes-use.sparql",
      "title": "software-curation_missing-describes-use",
      "description": null
    },
    {
      "query_id": "scholia.software-index_most-used-software",
      "namespace": "scholia",
      "name": "software-index_most-used-software",
      "sparql": "SELECT\n  ?count\n  ?software ?softwareLabel ?softwareUrl\n  ?described_by_example ?described_by_exampleLabel\n  ?example_use ?example_useLabel\nWITH {\n  SELECT\n    (COUNT(DISTINCT ?work) AS ?count)\n    ?software\n    (CONCAT(\"/software/\", SUBSTR(STR(?software), 32)) AS ?softwareUrl)\n    (SAMPLE(?described_by) AS ?described_by_example)\n    (SAMPLE(?work) AS ?example_use)\n  WHERE {\n    ?work wdt:P4510 ?software . \n    ?software wdt:P31/wdt:P279* wd:Q7397 . \n    # Restricting to work takes too long time :(    \n    # ?work wdt:P31/wdt:P279* wd:Q386724 .\n    OPTIONAL { ?software wdt:P1343 ?described_by . }\n  }\n  GROUP BY ?software\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}\nORDER BY DESC(?count)\nLIMIT 500    ",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/software-index_most-used-software.sparql",
      "title": "software-index_most-used-software",
      "description": null
    },
    {
      "query_id": "scholia.software_authors",
      "namespace": "scholia",
      "name": "software_authors",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?count\n  ?author ?authorLabel ?authorDescription\n  ?example_work ?example_workLabel\nWITH{\n  SELECT\n    (COUNT(?work) AS ?count)\n    ?author\n    (SAMPLE(?work) AS ?example_work)\n  WHERE {\n    ?work (wdt:P2283 | wdt:P4510) / wdt:P279* target: ;\n          wdt:P50 ?author .\n  }\n  GROUP BY ?author\n  ORDER BY DESC(?count)\n  LIMIT 500\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,nl,no,ru,sv,zh\" . }\n}\nORDER BY DESC(?count)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/software_authors.sparql",
      "title": "software_authors",
      "description": null
    },
    {
      "query_id": "scholia.software_coused",
      "namespace": "scholia",
      "name": "software_coused",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?count ?coused ?cousedLabel ?example_work ?example_workLabel\nWITH{\n  # Find works that are using a specific software,\n  # and find other software used in the found works\n  SELECT\n    ?coused (COUNT(?work) as ?count) (SAMPLE(?work) AS ?example_work)\n  WHERE {\n    ?work wdt:P4510 / wdt:P279* target: ;\n          wdt:P4510 ?coused .\n    FILTER (?coused != target:)\n  }\n  GROUP BY ?coused\n} AS %result\nWHERE {\n  # Label the result\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}\nORDER BY DESC(?count)  ",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/software_coused.sparql",
      "title": "software_coused",
      "description": null
    },
    {
      "query_id": "scholia.software_data",
      "namespace": "scholia",
      "name": "software_data",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT DISTINCT ?description ?value ?valueUrl\nWHERE {\n  BIND(target: AS ?software)\n  {\n    BIND(1 AS ?order)\n    BIND(\"Title\" AS ?description)\n    ?software wdt:P1476 ?value .\n  }\n  UNION\n  {\n    SELECT\n      (2 AS ?order)\n      (\"Developers\" AS ?description)\n      (GROUP_CONCAT(?value_; separator=\", \") AS ?value)\n      (CONCAT(\"../authors/\", GROUP_CONCAT(?q; separator=\",\")) AS ?valueUrl)\n    {\n      BIND(1 AS ?dummy)\n      target: wdt:P178 ?iri .\n      BIND(SUBSTR(STR(?iri), 32) AS ?q) \n      ?iri rdfs:label ?value_string . \n      FILTER (LANG(?value_string) = 'en')\n      BIND(COALESCE(?value_string, ?q) AS ?value_)\n    }\n    GROUP BY ?dummy\n  }\n  UNION\n  {\n    BIND(2 AS ?order)\n    BIND(\"Programming language\" AS ?description)\n    ?software wdt:P277 ?iri .\n    BIND(SUBSTR(STR(?iri), 32) AS ?q) \n    ?iri rdfs:label ?value_string .\n    FILTER (LANG(?value_string) = 'en')\n    BIND(STR(?value_string) AS ?value)\n    BIND(CONCAT(\"../topic/\", ?q) AS ?valueUrl)\n  }\n  UNION\n  {\n    BIND(3 AS ?order)\n    BIND(\"License\" AS ?description)\n    ?software wdt:P275 ?iri .\n    BIND(SUBSTR(STR(?iri), 32) AS ?q) \n    ?iri rdfs:label ?value_string .\n    FILTER (LANG(?value_string) = 'en')\n    BIND(STR(?value_string) AS ?value)\n    BIND(CONCAT(\"../license/\", ?q) AS ?valueUrl)\n  }\n  UNION\n  {\n    BIND(4 AS ?order)\n    BIND(\"Publication date\" AS ?description)\n    ?software p:P577 / psv:P577 ?publication_date_value .\n    ?publication_date_value wikibase:timePrecision ?time_precision ;\n                            wikibase:timeValue ?publication_date .\n    BIND(IF(?time_precision = 9, YEAR(?publication_date), xsd:date(?publication_date)) AS ?value)\n  }\n\n  UNION\n  {\n    SELECT\n      (5 AS ?order)\n      (\"Uses\" AS ?description)\n      (GROUP_CONCAT(?value_; separator=\", \") AS ?value)\n      (CONCAT(\"../topics/\", GROUP_CONCAT(?q; separator=\",\")) AS ?valueUrl)\n    {\n      BIND(1 AS ?dummy)\n      target: wdt:P366 ?iri .\n      BIND(SUBSTR(STR(?iri), 32) AS ?q) \n      ?iri rdfs:label ?value_string . \n      FILTER (LANG(?value_string) = 'en')\n      BIND(COALESCE(?value_string, ?q) AS ?value_)\n    }\n    GROUP BY ?dummy\n  }\n  UNION\n  {\n    BIND(11 AS ?order)\n    BIND(\"Homepage\" AS ?description)\n    ?software wdt:P856 ?valueUrl .\n    BIND(STR(?valueUrl) AS ?value)\n  }\n} \nORDER BY ?order\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/software_data.sparql",
      "title": "software_data",
      "description": null
    },
    {
      "query_id": "scholia.software_dependent-software",
      "namespace": "scholia",
      "name": "software_dependent-software",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT \n  ?count \n  ?software ?softwareLabel ?softwareDescription (CONCAT(\"/software/\", SUBSTR(STR(?software), 32)) AS ?softwareUrl)\nWITH {\n  SELECT \n    (COUNT(?other_software) AS ?count)\n    ?software \n  {\n    ?software wdt:P1547+ target: .\n    OPTIONAL {\n      ?other_software wdt:P1547+ ?software .\n    } \n  }\n  GROUP BY ?software\n  ORDER BY DESC(?count)\n  LIMIT 500\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?count)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/software_dependent-software.sparql",
      "title": "software_dependent-software",
      "description": null
    },
    {
      "query_id": "scholia.software_recent-works",
      "namespace": "scholia",
      "name": "software_recent-works",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?publication_date\n  ?work ?workLabel\nWITH{\n  SELECT\n    ?publication_datetime\n    ?work\n  WHERE {\n    ?work wdt:P4510 / wdt:P279* target: ;\n          wdt:P577 ?publication_datetime .\n  }\n  ORDER BY DESC(?publication_datetime)\n  LIMIT 500\n} AS %result\nWHERE {\n  INCLUDE %result\n  BIND(xsd:date(?publication_datetime) AS ?publication_date)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}\nORDER BY DESC(?publication_date)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/software_recent-works.sparql",
      "title": "software_recent-works",
      "description": null
    },
    {
      "query_id": "scholia.software_software-dependencies",
      "namespace": "scholia",
      "name": "software_software-dependencies",
      "sparql": "#description: Show software library, programming language and developer dependencies\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n#defaultView:Graph\nSELECT ?resource1 ?resource1Label ?image1 ?rgb ?resource2 ?resource2Label ?image2\nWITH {\n  SELECT\n    ?resource1 (SAMPLE(?image1_) AS ?image1) ?rgb\n    ?resource2 (SAMPLE(?image2_) AS ?image2)\n    {\n      {\n        # root node with coloring\n        BIND(target: AS ?resource1)\n        BIND(\"3080BB\" AS ?rgb)\n      }\n      UNION\n      {\n        # dependencies, programming language, developer\n        target: ( wdt:P1547 | wdt:P277 | wdt:P178 | wdt:P2283 | wdt:P275 )+ ?resource1 .\n        OPTIONAL { ?resource1 wdt:P18 ?image1_ }\n      }\n      target: ( wdt:P1547 | wdt:P277 | wdt:P178 | wdt:P2283 | wdt:P275 )+ ?resource2 .\n      OPTIONAL { ?resource2 wdt:P18 ?image2_ }\n      ?resource1 ( wdt:P1547 | wdt:P277 | wdt:P178 | wdt:P2283 | wdt:P275 ) ?resource2 .\n    }\n    GROUP BY ?resource1 ?resource2 ?rgb\n} AS %result\n{\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/software_software-dependencies.sparql",
      "title": "software_software-dependencies",
      "description": null
    },
    {
      "query_id": "scholia.software_topics",
      "namespace": "scholia",
      "name": "software_topics",
      "sparql": "#defaultView:BubbleChart\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?count ?topic ?topicLabel\nWITH{\n  SELECT\n    (COUNT(?work) AS ?count) ?topic\n  WHERE {\n    ?work (wdt:P2283 | wdt:P4510) / wdt:P279* target: .\n    ?work wdt:P921 ?topic .\n  }\n  GROUP BY ?topic\n  ORDER BY DESC(?count)\n  LIMIT 100\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,nl,no,ru,sv,zh\" . }\n}\nORDER BY DESC(?count)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/software_topics.sparql",
      "title": "software_topics",
      "description": null
    },
    {
      "query_id": "scholia.sponsor_authors-on-sponsored-works",
      "namespace": "scholia",
      "name": "sponsor_authors-on-sponsored-works",
      "sparql": "# title: Authors on works sponsored or funded from a specific entity.\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?publication_count\n  ?author ?authorLabel (CONCAT(\"/author/\", SUBSTR(STR(?author), 32)) AS ?authorUrl)\n  ?example_work ?example_workLabel (CONCAT(\"/work/\", SUBSTR(STR(?example_work), 32)) AS ?example_workUrl)\nWITH {\n  SELECT ?author (count(?work) as ?publication_count) (SAMPLE(?work) AS ?example_work)\n  WHERE {\n    ?work wdt:P859+ target: .\n    ?work wdt:P50 ?author .\n  }\n  GROUP BY ?author\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} \nORDER BY DESC(?publication_count)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/sponsor_authors-on-sponsored-works.sparql",
      "title": "sponsor_authors-on-sponsored-works",
      "description": null
    },
    {
      "query_id": "scholia.sponsor_co-sponsors",
      "namespace": "scholia",
      "name": "sponsor_co-sponsors",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n# title: Co-funders to a specific funder including an example funded work\nSELECT ?count \n?sponsor ?sponsorLabel (CONCAT(\"/sponsor/\", SUBSTR(STR(?sponsor), 32)) AS ?sponsorUrl)\n?example_work ?example_workLabel (CONCAT(\"/work/\", SUBSTR(STR(?example_work), 32)) AS ?example_workUrl)\nWITH {\n  SELECT (COUNT(?work) AS ?count) ?sponsor (SAMPLE(?work) AS ?example_work)\n  WHERE {\n    ?work wdt:P859+ target: .\n    ?work wdt:P859+ ?sponsor .\n    FILTER (target: != ?sponsor)\n  }\n  GROUP BY ?sponsor\n} AS %result\nWHERE {\n  # Label the result\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}\nORDER BY DESC(?count)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/sponsor_co-sponsors.sparql",
      "title": "sponsor_co-sponsors",
      "description": null
    },
    {
      "query_id": "scholia.sponsor_project-budgets",
      "namespace": "scholia",
      "name": "sponsor_project-budgets",
      "sparql": "# title: Scatterplot of project budgets associated with a funder\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n#defaultView:ScatterChart\nSELECT ?start_time ?budget ?project ?projectLabel WHERE {\n  ?project wdt:P859+ target: .\n  ?project wdt:P2769 ?budget .\n  ?project (wdt:P580 | wdt:P571) ?start_time .\n  SERVICE wikibase:label {\n    bd:serviceParam wikibase:language \"en,da,es,fr,jp,nl,no,ru,sv,zh\". }\n}",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/sponsor_project-budgets.sparql",
      "title": "sponsor_project-budgets",
      "description": null
    },
    {
      "query_id": "scholia.sponsor_recently-published-sponsored-works",
      "namespace": "scholia",
      "name": "sponsor_recently-published-sponsored-works",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?publication_date ?number_of_citations \n?work ?workLabel (CONCAT(\"/work/\", SUBSTR(STR(?work), 32)) AS ?workUrl)\n?quote\nWITH {\n  SELECT (MIN(?date) AS ?publication_date) (COUNT(?citing_work) as ?number_of_citations) ?work (SAMPLE(?quote_) AS ?quote)\n  WHERE {\n    ?work p:P859+ ?sponsor_statement .\n    ?sponsor_statement ps:P859+ target: .\n    OPTIONAL { ?sponsor_statement prov:wasDerivedFrom/pr:P1683 ?quote_ . }\n    OPTIONAL {\n      ?work wdt:P577 ?datetime .\n      BIND(xsd:date(?datetime) AS ?date)\n    }\n    OPTIONAL { ?citing_work wdt:P2860 ?work }\n  } \n  GROUP BY ?work\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n} \nORDER BY DESC(?publication_date) DESC(?number_of_citations)\nLIMIT 1000\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/sponsor_recently-published-sponsored-works.sparql",
      "title": "sponsor_recently-published-sponsored-works",
      "description": null
    },
    {
      "query_id": "scholia.sponsor_topics-of-sponsored-works",
      "namespace": "scholia",
      "name": "sponsor_topics-of-sponsored-works",
      "sparql": "#defaultView:BubbleChart\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?count ?topic ?topicLabel\nWITH {\n  SELECT (COUNT(?work) AS ?count) ?topic\n  WHERE {\n    ?work wdt:P859+ target: .\n    ?work wdt:P921 ?topic .\n  } \n  GROUP BY ?topic\n  ORDER BY DESC(?count)\n  LIMIT 200\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\" }\n} \nORDER BY DESC(?count)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/sponsor_topics-of-sponsored-works.sparql",
      "title": "sponsor_topics-of-sponsored-works",
      "description": null
    },
    {
      "query_id": "scholia.taxon-curation_missing-topic-tags-for-taxon-name",
      "namespace": "scholia",
      "name": "taxon-curation_missing-topic-tags-for-taxon-name",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT DISTINCT \n?item ?itemLabel (CONCAT(\"/work/\", SUBSTR(STR(?item), 32)) AS ?itemUrl) ?taxonname\n  (REPLACE(STR(?item), \".*Q\", \"Q\") AS ?work) \n  (\"P921\" AS ?main_subject)\n  (REPLACE(STR(target: ), \".*Q\", \"Q\") AS ?taxon)\n  (\"S887\" AS ?heuristic)\n  (\"Q69652283\" AS ?deduced)\n\nWITH\n{ SELECT  ?item ?taxonname WHERE {\n  target: wdt:P225 ?taxonname .\n  target: wdt:P105 wd:Q7432 . # this filters for species-level (Q7432) taxon names; comment out or adapt as necessary\n\n  SERVICE wikibase:mwapi\n  {\n    bd:serviceParam wikibase:endpoint \"www.wikidata.org\";\n      wikibase:api \"Generator\";\n      mwapi:generator \"search\";\n      mwapi:gsrsearch ?taxonname;\n      mwapi:gsrlimit \"max\".\n    ?item wikibase:apiOutputItem mwapi:title.\n  }\n  ?item wdt:P1476 ?title .\n  \n  MINUS {?item wdt:P921 target: }\n  MINUS {?item wdt:P921 [wdt:P171* target: ] } # this filters out works about subspecies of the target\n\n  FILTER (REGEX(LCASE(?title), LCASE(CONCAT( \"\\\\\\\\\", \"b\", ?taxonname ,\"\\\\\\\\\", \"b\"))))\n  }\n  LIMIT 200\n}\nAS %items\nWHERE {\n  INCLUDE %items\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nLIMIT 200\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/taxon-curation_missing-topic-tags-for-taxon-name.sparql",
      "title": "taxon-curation_missing-topic-tags-for-taxon-name",
      "description": null
    },
    {
      "query_id": "scholia.taxon_co-occurring-taxa",
      "namespace": "scholia",
      "name": "taxon_co-occurring-taxa",
      "sparql": "#title: Taxa that co-occur with the target taxon in the literature\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?count (CONCAT(\"/topics/\",SUBSTR(STR(target:), 32), \",\", SUBSTR(STR(?taxon), 32)) AS ?countUrl)\n       ?taxon ?taxonLabel (CONCAT(\"/taxon/\", SUBSTR(STR(?taxon), 32)) AS ?taxonUrl)\n       ?example_work ?example_workLabel (CONCAT(\"/work/\", SUBSTR(STR(?example_work), 32)) AS ?example_workUrl)\nWITH {\n  SELECT (COUNT(?work) AS ?count) ?taxon (SAMPLE(?work) AS ?example_work) WHERE {\n    # Find works for the specific queried topic\n\t?work wdt:P921 target: .\n    \n    # Find co-occuring topics\n    ?work wdt:P921 ?taxon .\n    \n    # Filter for taxa\n    ?taxon wdt:P105 ?taxonrank .\n    \n    # Avoid listing the queried topic itself\n    FILTER (target: != ?taxon)\n  }\n  GROUP BY ?taxon\n} AS %result\nWHERE {\n  # Label the results\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . } \n}\nORDER BY DESC(?count)\nLIMIT 200\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/taxon_co-occurring-taxa.sparql",
      "title": "taxon_co-occurring-taxa",
      "description": null
    },
    {
      "query_id": "scholia.taxon_genome",
      "namespace": "scholia",
      "name": "taxon_genome",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?gene ?geneLabel ?geneDescription\n  ?chromosome ?chromosomeLabel ?chromosomeDescription\nWITH {\n  SELECT ?gene ?chromosome WHERE {\n    ?gene wdt:P31 wd:Q7187 ;\n          wdt:P703 target: ;\n          wdt:P1057 ?chromosome .\n  }\n} AS %results {\n  INCLUDE %results\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/taxon_genome.sparql",
      "title": "taxon_genome",
      "description": null
    },
    {
      "query_id": "scholia.taxon_identifiers",
      "namespace": "scholia",
      "name": "taxon_identifiers",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?Identifier ?IdentifierLabel\n  ?id (SAMPLE(?idUrls) as ?idUrl)\n  ?IdentifierDescription\nWITH {\n  SELECT ?Identifier ?id ?formatterurl WHERE {\n    target: ?IDdir ?id .\n    ?Identifier wikibase:directClaim ?IDdir ;\n            wdt:P31/wdt:P279* wd:Q42396390 .\n    OPTIONAL {\n      ?Identifier wdt:P1630 ?formatterurl .\n    }\n    FILTER (?Identifier != wd:P233)\n    FILTER (?Identifier != wd:P234)\n    FILTER (?Identifier != wd:P2017)\n  } LIMIT 500\n} AS %RESULTS {\n  { SELECT * WHERE {\n      INCLUDE %RESULTS\n      FILTER (?Identifier = wd:P234)\n      BIND(IRI(REPLACE(?formatterurl, '\\\\\\\\$1', ENCODE_FOR_URI(str(?id)))) AS ?idUrls).\n    }\n  } UNION {\n    SELECT * WHERE {\n      INCLUDE %RESULTS\n      FILTER (?Identifier != wd:P234)\n      BIND(IRI(REPLACE(?formatterurl, '\\\\\\\\$1', str(?id))) AS ?idUrls).\n    }\n  }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?Identifier ?IdentifierLabel ?IdentifierDescription ?id\nORDER BY ASC(?IdentifierLabel)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/taxon_identifiers.sparql",
      "title": "taxon_identifiers",
      "description": null
    },
    {
      "query_id": "scholia.taxon_metabolome",
      "namespace": "scholia",
      "name": "taxon_metabolome",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT DISTINCT\n  ?metabolite ?metaboliteLabel ?metaboliteChemicalStructure ?metaboliteDescription\nWITH {\n  SELECT DISTINCT ?children WHERE {\n      ?children (wdt:P171*) target:.\n  }\n} AS %taxa \nWITH {\n  SELECT DISTINCT ?metabolite ?metaboliteChemicalStructure WHERE {\n    INCLUDE %taxa\n    { ?metabolite wdt:P703 ?children }\n    VALUES ?chemical { wd:Q113145171 wd:Q59199015 }\n    ?metabolite wdt:P31 ?chemical .\n    OPTIONAL { ?metabolite wdt:P233 ?canSmiles }\n    OPTIONAL { ?metabolite wdt:P2017 ?isoSmiles }\n    BIND(COALESCE(?isoSmiles, ?canSmiles) AS ?metaboliteChemicalStructure)\n  }\n} AS %results {\n  INCLUDE %results\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/taxon_metabolome.sparql",
      "title": "taxon_metabolome",
      "description": null
    },
    {
      "query_id": "scholia.taxon_parent-taxa",
      "namespace": "scholia",
      "name": "taxon_parent-taxa",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  (COUNT(?middle) AS ?distance)\n  (GROUP_CONCAT(DISTINCT ?rank_label_; separator=\", \") AS ?rank)\n  ?parent ?parentLabel ?parentDescription\n{\n  target: wdt:P171* ?middle .\n  ?middle wdt:P171+ ?parent .\n  ?parent wdt:P105 ?rank .\n  OPTIONAL {\n    ?rank rdfs:label ?rank_label_ . FILTER (LANG(?rank_label_) = 'en')\n  }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?parent ?parentLabel ?parentDescription\nORDER BY ?distance\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/taxon_parent-taxa.sparql",
      "title": "taxon_parent-taxa",
      "description": null
    },
    {
      "query_id": "scholia.taxon_proteome",
      "namespace": "scholia",
      "name": "taxon_proteome",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?protein ?proteinLabel ?proteinDescription\n  ?gene ?geneLabel\nWITH {\n  SELECT ?protein ?gene ?chromosome WHERE {\n    ?protein wdt:P31 wd:Q8054 ;\n          wdt:P703 target: .\n  }\n} AS %results {\n  INCLUDE %results\n  ?protein wdt:P702 ?gene .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/taxon_proteome.sparql",
      "title": "taxon_proteome",
      "description": null
    },
    {
      "query_id": "scholia.taxon_tree",
      "namespace": "scholia",
      "name": "taxon_tree",
      "sparql": "#defaultView:Graph\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?child ?childLabel\n  ?rgb \n  ?parent ?parentLabel\nWITH {\n  SELECT ?child ?rgb ?parent WHERE {\n    { \n      # Parent taxa\n      SELECT ?child ?rgb ?parent  WHERE {\n        SERVICE gas:service {\n          gas:program gas:gasClass \"com.bigdata.rdf.graph.analytics.BFS\" ;\n                  gas:in target: ;\n                  # We should not do undirected here because this could result\n                  # in very big graphs.\n                  gas:traversalDirection \"Forward\" ;\n                  gas:out ?child ;\n                  gas:out1 ?depth ;\n                  gas:out2 ?parent1 ;\n                  gas:linkType wdt:P171 ;\n        }\n        ?child wdt:P171 ?parent .\n        BIND(IF(?child = target:, \"FF0000\", \"FFFFFF\") AS ?rgb)\n      }\n    }\n    UNION \n    {\n      # Child taxa\n      SELECT ?child ?rgb ?parent WHERE {\n        BIND(target: AS ?parent)\n        ?child wdt:P171 ?parent . \n        BIND(\"DDDDDD\" AS ?rgb)\n      }\n      LIMIT 100\n    }\n  }\n} AS %results\nWHERE {\n  INCLUDE %results \n          \n  ?child rdfs:label ?child_label . FILTER(LANG(?child_label) = 'en')\n  ?parent rdfs:label ?parent_label . FILTER(LANG(?parent_label) = 'en')\n  OPTIONAL {\n    ?child wdt:P105 / rdfs:label ?child_rank_label . FILTER (LANG(?child_rank_label) = 'en')\n  }\n  OPTIONAL {\n    ?parent wdt:P105 / rdfs:label ?parent_rank_label . FILTER (LANG(?parent_rank_label) = 'en')\n  }\n  BIND(CONCAT(?child_label, \" - \", COALESCE(?child_rank_label, \"???\")) AS ?childLabel)\n  BIND(CONCAT(?parent_label, \" - \", COALESCE(?parent_rank_label, \"???\")) AS ?parentLabel)\n\n}\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/taxon_tree.sparql",
      "title": "taxon_tree",
      "description": null
    },
    {
      "query_id": "scholia.topic-curation_missing-author-items",
      "namespace": "scholia",
      "name": "topic-curation_missing-author-items",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  # Number of works with the author\n  ?count\n\n  # Author score - 3 points for authoring a work, 1 for being cited\n  ?score\n\n  # Author as a string\n  ?author\n\n  # Build URL to the Author disambiguator tool\n  (CONCAT(\n      'https://author-disambiguator.toolforge.org/names_oauth.php?doit=Look+for+author&name=',\n      ENCODE_FOR_URI(?author)) AS ?resolver_url)\nWITH {\n  SELECT DISTINCT ?work WHERE {\n    ?work wdt:P921 / (wdt:P361+ | wdt:P1269+ | (wdt:P31* / wdt:P279*) ) target: .\n  }\n  LIMIT 10000\n} AS %works\nWITH {\n  SELECT\n    (COUNT(?work) AS ?count)\n    ?author\n  WHERE {\n    INCLUDE %works\n    ?work wdt:P2093 ?author .\n  }\n  GROUP BY ?author\n} AS %result\n\n# Generate a score for each author\nWITH {\n  SELECT (SUM(?score_) AS ?score) ?author\n  WHERE {\n    {\n      # Assign them 3 points if they are an author of a work on the subject\n      SELECT (3 AS ?score_) ?author ?work WHERE {\n        ?work wdt:P2093 ?author .\n        ?work wdt:P921/wdt:P279* target: .\n      }\n    }\n    UNION\n    {\n      # Assign them 1 point if they are the author of a work that is cited by a work on the subject\n      SELECT (1 AS ?score_) ?author ?work WHERE {\n        ?work wdt:P2093 ?author .\n        ?citing_work wdt:P2860 ?work .\n        ?citing_work wdt:P921/wdt:P279* target: .\n      }\n    }\n  }\n  GROUP BY ?author\n} AS %scores\n\nWHERE {\n  INCLUDE %result\n  INCLUDE %scores\n\n  # Label the result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}\nORDER BY DESC(?count) DESC(?score)\nLIMIT 200\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/topic-curation_missing-author-items.sparql",
      "title": "topic-curation_missing-author-items",
      "description": null
    },
    {
      "query_id": "scholia.topic-curation_missing-co-topic",
      "namespace": "scholia",
      "name": "topic-curation_missing-co-topic",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?count\n  ?work ?workLabel (CONCAT(\"/work/\", SUBSTR(STR(?work), 32)) AS ?workUrl)\nWITH {\n  # Count citations\n  SELECT\n    (COUNT(?citing_work) AS ?count)\n    ?work\n    (SAMPLE(?citing_work) AS ?example_citing_work)\n    (COUNT(DISTINCT ?topic) AS ?topics)\n  WHERE {\n    ?work wdt:P921 target: .\n    OPTIONAL { ?work wdt:P921 ?topic . FILTER (?topic != target: )}\n    OPTIONAL { ?citing_work wdt:P2860 ?work. }\n  }\n  GROUP BY ?work\n  HAVING (?topics < 1)\n  ORDER BY DESC(?count)\n  LIMIT 100\n} AS %result\nWHERE {\n  # Label results\n  INCLUDE %result\n  SERVICE wikibase:label {\n    bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . } \n}\nORDER BY DESC(?count) ?topics",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/topic-curation_missing-co-topic.sparql",
      "title": "topic-curation_missing-co-topic",
      "description": null
    },
    {
      "query_id": "scholia.topic-curation_missing-pub-date",
      "namespace": "scholia",
      "name": "topic-curation_missing-pub-date",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n?citations \n?work ?workLabel (CONCAT(\"/work/\", SUBSTR(STR(?work), 32)) AS ?workUrl)\n(?work AS ?wikidata_url)\nWITH {\n  SELECT (COUNT(?work) as ?count) ?work WHERE {\n  # Works on the topic\n    ?work wdt:P921 / (wdt:P361+ | wdt:P1269+ | (wdt:P31* / wdt:P279*) ) target: .\n  # Works that do not have a publication date statement\n    FILTER NOT EXISTS { ?work wdt:P577 ?date . }\n  # Works that do not have an ISSN, i.e. that are not periodicals\n    FILTER NOT EXISTS { ?work wdt:P236 ?issn . }\n  }\n  GROUP BY ?work\n  ORDER BY DESC(?count)\n  LIMIT 2000\n} AS %works\nWITH {\n  SELECT (COUNT(?work1) as ?citations) ?work WHERE {\n  INCLUDE %works\n  # Works cited\n    OPTIONAL { ?work1 wdt:P2860 ?work }.\n  }\n  GROUP BY ?work\n  ORDER BY DESC(?citations)\n  LIMIT 200\n} AS %result\nWHERE {\n  INCLUDE %result\n  \n  # Label the results\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}\nORDER BY DESC(?citations)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/topic-curation_missing-pub-date.sparql",
      "title": "topic-curation_missing-pub-date",
      "description": null
    },
    {
      "query_id": "scholia.topic-curation_missing-pub-venue",
      "namespace": "scholia",
      "name": "topic-curation_missing-pub-venue",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n?citations \n?work ?workLabel (CONCAT(\"/work/\", SUBSTR(STR(?work), 32)) AS ?workUrl)\n(?work AS ?wikidata_url)\nWITH {\n  SELECT (COUNT(?work) as ?count) ?work WHERE {\n  # Works on the topic\n    ?work wdt:P921 / (wdt:P361+ | wdt:P1269+ | (wdt:P31* / wdt:P279*) ) target: .\n  # Works that do not have a statement about where they were published\n    FILTER NOT EXISTS { ?work wdt:P1433 ?date . }\n  # Works that do not have an ISSN, i.e. that are not periodicals\n    FILTER NOT EXISTS { ?work wdt:P236 ?issn . }\n  }\n  GROUP BY ?work\n  ORDER BY DESC(?count)\n  LIMIT 2000\n} AS %works\nWITH {\n  SELECT (COUNT(?work1) as ?citations) ?work WHERE {\n  INCLUDE %works\n  # Works cited\n    OPTIONAL { ?work1 wdt:P2860 ?work }.\n  }\n  GROUP BY ?work\n  ORDER BY DESC(?citations)\n  LIMIT 200\n} AS %result\nWHERE {\n  INCLUDE %result\n  \n  # Label the results\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}\nORDER BY DESC(?citations)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/topic-curation_missing-pub-venue.sparql",
      "title": "topic-curation_missing-pub-venue",
      "description": null
    },
    {
      "query_id": "scholia.topic-use_works",
      "namespace": "scholia",
      "name": "topic-use_works",
      "sparql": "PREFIX target1: <http://www.wikidata.org/entity/{{ q1 }}>\nPREFIX target2: <http://www.wikidata.org/entity/{{ q2 }}>\n\nSELECT\n  ?publication_date\n  ?work ?workLabel (CONCAT(\"/work/\", SUBSTR(STR(?work), 32)) AS ?workUrl)\nWHERE {\n  ?work wdt:P921 target1: ;\n        wdt:P4510 target2: .\n  OPTIONAL {\n    ?work wdt:P577 ?publication_datetime .\n    BIND(xsd:date(?publication_datetime) AS ?publication_date)\n  }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,da,de,es,fr,jp,nl,no,ru,sv,zh\". }\n}\nORDER BY DESC(?publication_date)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/topic-use_works.sparql",
      "title": "topic-use_works",
      "description": null
    },
    {
      "query_id": "scholia.topic_author-awards",
      "namespace": "scholia",
      "name": "topic_author-awards",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?count \n?award ?awardLabel (CONCAT(\"/award/\", SUBSTR(STR(?award), 32)) AS ?awardUrl)\n?recipients ?recipientsUrl\nWITH {\n  SELECT (COUNT(?researcher) AS ?count) ?award \n  (GROUP_CONCAT(DISTINCT ?researcher_label; separator=\", \") AS ?recipients) \n  (CONCAT(\"../authors/\", GROUP_CONCAT(DISTINCT SUBSTR(STR(?researcher), 32); separator=\",\")) AS ?recipientsUrl)\n  WHERE {\n    { \n      SELECT DISTINCT ?researcher ?award WHERE {\n        hint:Query hint:optimizer \"None\" .\n        ?work wdt:P921 target: .\n        ?work wdt:P50 ?researcher .\n        ?researcher wdt:P166 ?award .\n      } \n      LIMIT 100\n    }\n    ?researcher rdfs:label ?researcher_label . FILTER (LANG(?researcher_label) = 'en')\n  }\n  GROUP BY ?award \n} AS %result\nWHERE {\n  INCLUDE %result\n    ?award rdfs:label ?awardLabel . FILTER (LANG(?awardLabel) = 'en')\n}\nGROUP BY ?count ?award ?awardLabel ?recipients ?recipientsUrl\nORDER BY DESC(?count)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/topic_author-awards.sparql",
      "title": "topic_author-awards",
      "description": null
    },
    {
      "query_id": "scholia.topic_author-scores-graph",
      "namespace": "scholia",
      "name": "topic_author-scores-graph",
      "sparql": "#defaultView:BubbleChart\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?score ?author ?authorLabel\nWITH {\n  SELECT \n    ?author\n    (SUM(?score_) AS ?score)\n  WHERE {\n    { \n      ?author wdt:P101/wdt:P279* target: .\n      BIND(20 AS ?score_)\n    }\n    UNION\n    {\n      SELECT (3 AS ?score_) ?author WHERE {\n        ?work wdt:P50 ?author ;\n              wdt:P921/wdt:P279* target: .\n      }\n    }\n    UNION\n    {\n      SELECT (1 AS ?score_) ?author WHERE {\n        ?cited_work wdt:P50 ?author .\n        ?citing_work wdt:P2860 ?cited_work .\n        ?citing_work wdt:P921/wdt:P279* target: .\n      }\n    }\n  }\n  GROUP BY ?author\n  ORDER BY DESC(?score)\n  LIMIT 200\n} AS %results \nWHERE {\n  INCLUDE %results\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,da,de,es,jp,no,ru,sv,zh\". }\n}\nORDER BY DESC(?score)\nLIMIT 200\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/topic_author-scores-graph.sparql",
      "title": "topic_author-scores-graph",
      "description": null
    },
    {
      "query_id": "scholia.topic_author-scores",
      "namespace": "scholia",
      "name": "topic_author-scores",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?score \n?author ?authorLabel (CONCAT(\"/author/\", SUBSTR(STR(?author), 32)) AS ?authorUrl)\n?example_work ?example_workLabel (CONCAT(\"/work/\", SUBSTR(STR(?example_work), 32)) AS ?example_workUrl)\nWITH {\n  SELECT\n    (SUM(?score_) AS ?score)\n    ?author\n    (SAMPLE(?work) AS ?example_work)\n  WHERE {\n    { \n      ?author wdt:P101/wdt:P279* target: .\n      BIND(20 AS ?score_)\n    }\n    UNION\n    {\n      SELECT (3 AS ?score_) ?author ?work WHERE {\n        ?work wdt:P50 ?author ;\n              wdt:P921/wdt:P279* target: .\n      }\n    }\n    UNION\n    {\n      SELECT (1 AS ?score_) ?author ?work WHERE {\n        ?work wdt:P50 ?author .\n        ?citing_work wdt:P2860 ?work .\n        ?citing_work wdt:P921/wdt:P279* target: .\n      }\n    }\n  }\n  GROUP BY ?author\n  ORDER BY DESC(?score)\n  LIMIT 200\n} AS %results \nWHERE {\n  INCLUDE %results\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,da,de,es,jp,no,ru,sv,zh\". }\n}\nORDER BY DESC(?score)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/topic_author-scores.sparql",
      "title": "topic_author-scores",
      "description": null
    },
    {
      "query_id": "scholia.topic_authors",
      "namespace": "scholia",
      "name": "topic_authors",
      "sparql": "#defaultView:Table\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?count\n  ?author ?authorLabel ?authorDescription (CONCAT(\"/author/\", SUBSTR(STR(?author), 32)) AS ?authorUrl)\n  (COALESCE(?orcid_, CONCAT(\"orcid-search/search/?searchQuery=\", ?authorLabel)) AS ?orcid) \nWITH {\n  SELECT\n    ?author\n    (count(?work) as ?count)\n  WHERE {\n    { ?work wdt:P921/wdt:P31*/wdt:P279* target: . }\n    UNION\n    { ?work wdt:P921/wdt:P361+ target: . }\n    UNION\n    { ?work wdt:P921/wdt:P1269+ target: . }\n    ?work wdt:P50 ?author .\n  }\n  GROUP BY ?author\n  ORDER BY DESC(?count)\n  LIMIT 200\n} AS %result\nWHERE {\n  INCLUDE %result\n          \n  # Include optional ORCID iD\n  OPTIONAL { ?author wdt:P496 ?orcid_ . }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\" . } \n}\nORDER BY DESC(?count)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/topic_authors.sparql",
      "title": "topic_authors",
      "description": null
    },
    {
      "query_id": "scholia.topic_co-occurring-map",
      "namespace": "scholia",
      "name": "topic_co-occurring-map",
      "sparql": "#defaultView:Map\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?location ?locationLabel\n  ?geo\n  ?example_work ?example_workLabel\nWITH {\n  SELECT\n    ?location ?geo\n    (SAMPLE(?work) AS ?example_work)\n  WHERE {\n    # Find works that are marked with main subject of the topic.\n    ?work wdt:P921 / ( wdt:P31*/wdt:P279* | wdt:P361+ | wdt:P1269+ ) target: .\n    \n    # Identify co-occuring topic that is geo-locatable. \n    ?work wdt:P921 ?location .\n    ?location wdt:P625 ?geo .\n  }\n  GROUP BY ?location ?geo\n} AS %results\nWHERE {\n  INCLUDE %results\n  \n  # Label the results\n  SERVICE wikibase:label {\n    bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\".\n  }\n}\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/topic_co-occurring-map.sparql",
      "title": "topic_co-occurring-map",
      "description": null
    },
    {
      "query_id": "scholia.topic_co-occurring",
      "namespace": "scholia",
      "name": "topic_co-occurring",
      "sparql": "#defaultView:Graph\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?topic1 ?topic1Label ?topic2 ?topic2Label\nWITH {\n  SELECT\n    (COUNT(DISTINCT ?work) AS ?count) ?topic1 ?topic2\n  WHERE {\n    # Find works that are marked with main subject of the topic.\n    ?work wdt:P921 / ( wdt:P31*/wdt:P279* | wdt:P361+ | wdt:P1269+ ) target: .\n    \n    # Identify co-occuring topics. \n    ?work wdt:P921 ?topic1, ?topic2 . \n\n    # Exclude the topic it self\n    FILTER (target: != ?topic1 && target: != ?topic2 && ?topic1 != ?topic2)\n  }\n  GROUP BY ?topic1 ?topic2\n  ORDER BY DESC(?count)\n\n  # There a performance problems in the browser: We cannot show large graphs,\n  # so we put a limit on the number of links displayed.\n  LIMIT 400\n\n} AS %results\nWHERE {\n  INCLUDE %results\n  \n  # Label the results\n  SERVICE wikibase:label {\n    bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\".\n  }\n}\n\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/topic_co-occurring.sparql",
      "title": "topic_co-occurring",
      "description": null
    },
    {
      "query_id": "scholia.topic_coauthor-graph",
      "namespace": "scholia",
      "name": "topic_coauthor-graph",
      "sparql": "#defaultView:Graph\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?author1 ?author1Label ?rgb ?author2 ?author2Label\nWITH {\n  # Find works with the topic\n  SELECT ?work WHERE {\n    ?work wdt:P921 / (wdt:P31* / wdt:P279* | wdt:P361+ | wdt:P1269+) target: .\n  }\n} AS %works\nWITH {\n  # Limit the number of authors\n  SELECT (COUNT(?work) AS ?count1) ?author1 WHERE {\n    INCLUDE %works\n    ?work wdt:P50 ?author1 .\n  }\n  GROUP BY ?author1\n  ORDER BY DESC(?count1)\n  LIMIT 25\n} AS %authors1\nWITH {\n  # Limit the number of coauthors\n  SELECT DISTINCT ?author2 ?author1  (COUNT(?work) AS ?count2)  WHERE {\n    INCLUDE %works\n    INCLUDE %authors1\n    ?work wdt:P50 ?author1 , ?author2 .\n    FILTER (?author1 != ?author2) \n  }\n  GROUP BY ?author2 ?author1 \n  ORDER BY DESC(?count2)\n  LIMIT 250\n} AS %authors2\nWHERE {\n#  INCLUDE %authors1\n  INCLUDE %authors2\n  OPTIONAL { ?author1 wdt:P21 ?gender1 . }\n  BIND( IF(?gender1 = wd:Q6581097, \"3182BD\", \"E6550D\") AS ?rgb)\n  SERVICE wikibase:label {\n    bd:serviceParam wikibase:language \"en,fr,de,ru,es,zh,jp\".\n  }\n}\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/topic_coauthor-graph.sparql",
      "title": "topic_coauthor-graph",
      "description": null
    },
    {
      "query_id": "scholia.topic_context",
      "namespace": "scholia",
      "name": "topic_context",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n#defaultView:Graph\nSELECT ?node ?nodeLabel ?nodeImage ?childNode ?childNodeLabel ?childNodeImage ?rgb \nWITH {\n  SELECT DISTINCT ?property WHERE {\n      ?property a wikibase:Property;\n                wdt:P31 wd:Q18610173 ;\n                wdt:P31 wd:Q26940804 . \n    }\n} AS %properties\nWITH {\n  SELECT DISTINCT ?node ?childNode WHERE {\n      BIND(target: AS ?node)\n      ?node ?p ?i.\n      ?childNode ?x ?p.\n      ?childNode rdf:type wikibase:Property.\n      FILTER(STRSTARTS(STR(?i), \"http://www.wikidata.org/entity/Q\"))\n      FILTER(STRSTARTS(STR(?childNode), \"http://www.wikidata.org/entity/P\"))\n    }\n  LIMIT 5000\n} AS %nodes\nWITH {\n  SELECT DISTINCT ?childNode ?node ?rgb WHERE {\n      BIND(\"EFFBD8\" AS ?rgb)\n      target: ?p ?childNode.\n      ?node ?x ?p.\n      ?node rdf:type wikibase:Property.\n      FILTER(STRSTARTS(STR(?childNode), \"http://www.wikidata.org/entity/Q\"))\n    }\n  LIMIT 5000\n} AS %childNodes\nWHERE {\n  {\n    INCLUDE %nodes\n  }\n  UNION\n  {\n    INCLUDE %childNodes\n  }\n\n  OPTIONAL { \n    INCLUDE %properties\n    ?property wikibase:directClaim ?nodeclaim.\n    ?node ?nodeclaim ?nodeImage. \n  }\n\n  OPTIONAL { \n    INCLUDE %properties\n    ?property wikibase:directClaim ?childNodeclaim.\n    ?childNode ?childNodeclaim ?childNodeImage. \n  }\n  \n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }        \n}\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/topic_context.sparql",
      "title": "topic_context",
      "description": null
    },
    {
      "query_id": "scholia.topic_country-citation-graph",
      "namespace": "scholia",
      "name": "topic_country-citation-graph",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}> \n\n#defaultView:Graph\nSELECT DISTINCT ?citing_country ?citing_countryLabel ?citing_flag ?cited_country ?cited_countryLabel ?cited_flag\nWITH {\n  SELECT DISTINCT ?cited_country ?citing_country (COUNT(?citing_country) AS ?count)\n                                  WHERE {\n    ?citing_work wdt:P50 ?citing_author . \n    ?citing_work wdt:P921 target: .\n    ?cited_work wdt:P921 target: .\n    ?citing_work wdt:P2860 ?cited_work . \n    ?cited_work wdt:P50 ?cited_author .  \n    FILTER (?citing_work != ?cited_work)\n    FILTER NOT EXISTS {\n      ?citing_work wdt:P50 ?author .\n      ?citing_work wdt:P2860 ?cited_work .\n      ?cited_work  wdt:P50 ?author .\n    }\n    ?citing_author (wdt:P108|wdt:P1416) ?citing_organization . \n    ?cited_author (wdt:P108|wdt:P1416) ?cited_organization . \n    ?cited_organization wdt:P17 ?cited_country.\n    ?citing_organization wdt:P17 ?citing_country.\n    FILTER (?citing_country != ?cited_country)\n  }\n  GROUP BY ?cited_country ?citing_country\n  ORDER BY DESC(?count)\n  LIMIT 42 # Adjust number of connections to display\n} AS %results\nWHERE {\n  INCLUDE %results\n  ?cited_country wdt:P41 ?cited_flag . \n  ?citing_country wdt:P41 ?citing_flag . \n SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }        \n }\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/topic_country-citation-graph.sparql",
      "title": "topic_country-citation-graph",
      "description": null
    },
    {
      "query_id": "scholia.topic_earliest-published-works",
      "namespace": "scholia",
      "name": "topic_earliest-published-works",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?date ?work ?workLabel (CONCAT(\"/work/\", SUBSTR(STR(?work), 32)) AS ?workUrl)\n?topicsUrl ?topics\nWITH {\n  SELECT DISTINCT ?work WHERE {\n    ?work wdt:P921 / (wdt:P361+ | wdt:P1269+ | (wdt:P31* / wdt:P279*) ) target: .\n  }\n} AS %works\nWITH {\n  SELECT (MAX(?dates) as ?datetime) ?work (GROUP_CONCAT(DISTINCT ?topic_label; separator=\" // \") AS ?topics) \n                                    (CONCAT(\"../topics/\", GROUP_CONCAT(DISTINCT SUBSTR(STR(?topic), 32); separator=\",\")) AS ?topicsUrl) \n                                    WHERE {\n    INCLUDE %works\n    ?work wdt:P921 ?topic . \n    ?work wdt:P577 ?dates . \n\tFILTER (!isBLANK(?dates)) .\n    ?topic rdfs:label ?topic_label .  FILTER (lang(?topic_label) = 'en')\n  }\n  GROUP BY ?work\n} AS %result\nWHERE {\n  INCLUDE %result\n\n  # There is a problem with BC dates\n  # BIND(xsd:date(?datetime) AS ?date)\n  BIND(REPLACE(STR(?datetime), 'T.*', '') AS ?date)\n    \n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\". }\n}\nGROUP BY ?date ?work ?workLabel ?topicsUrl ?topics\nORDER BY ASC(?date)\nLIMIT 500\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/topic_earliest-published-works.sparql",
      "title": "topic_earliest-published-works",
      "description": null
    },
    {
      "query_id": "scholia.topic_most-cited-authors",
      "namespace": "scholia",
      "name": "topic_most-cited-authors",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?number_of_citations \n?author ?authorLabel (CONCAT(\"/author/\", SUBSTR(STR(?author), 32)) AS ?authorUrl)\n?cited_work_example ?cited_work_exampleLabel (CONCAT(\"/work/\", SUBSTR(STR(?cited_work_example), 32)) AS ?cited_work_exampleUrl)\nWITH {\n  # Find works about the topic\n  SELECT DISTINCT ?work WHERE {\n\t  ?work wdt:P921 / (wdt:P361+ | wdt:P1269+ | (wdt:P31* / wdt:P279*) ) target: .\n  }\n} AS %works\nWITH {\n  # Find cited works\n  SELECT (COUNT(?work) AS ?number_of_citations) ?author (SAMPLE(?cited_work) AS ?cited_work_example)\n  WHERE {\n    INCLUDE %works\n    ?cited_work wdt:P50 ?author . \n    ?work wdt:P2860 ?cited_work .\n  } \n  GROUP BY ?author\n} AS %result\nWHERE {\n  # Label the results\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n} \nORDER BY DESC(?number_of_citations)\nLIMIT 200\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/topic_most-cited-authors.sparql",
      "title": "topic_most-cited-authors",
      "description": null
    },
    {
      "query_id": "scholia.topic_organization-map",
      "namespace": "scholia",
      "name": "topic_organization-map",
      "sparql": "#defaultView:Map\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?organization ?organizationLabel ?geo ?count ?layer\nWITH {\n  SELECT DISTINCT ?work WHERE {\n  # Works on the topic\n    ?work wdt:P921 / (wdt:P361+ | wdt:P1269+ | (wdt:P31* / wdt:P279*) ) target: .\n  }\n  LIMIT 20000\n} AS %works\nWITH {\n  SELECT DISTINCT ?organization ?geo (COUNT(DISTINCT ?work) AS ?count) WHERE {\n    INCLUDE %works\n    # Authors who have published works on the topic\n    ?work wdt:P50 ?author . \n    ?author ( wdt:P108 | wdt:P463 | wdt:P1416 ) / wdt:P361* ?organization . \n    # Use the headquarters location by default but keep the coordinate location as a fallback\n    OPTIONAL{?organization p:P159/pq:P625 ?hq_geo}\n    OPTIONAL{?organization wdt:P625 ?coord_geo}\n    BIND(IF(BOUND(?hq_geo), ?hq_geo, ?coord_geo) AS ?geo) .\n    FILTER(BOUND(?geo)) .\n  }\n  GROUP BY ?organization ?geo\n  ORDER BY DESC (?count)\n  LIMIT 2000\n} AS %organizations\nWHERE {\n  INCLUDE %organizations\n  BIND(IF( (?count < 1), \"No results\", IF((?count < 2), \"1 result\", IF((?count < 11), \"1 < results \u2264 10\", IF((?count < 101), \"10 < results \u2264 100\", IF((?count < 1001), \"100 < results \u2264 1000\", IF((?count < 10001), \"1000 < results \u2264 10000\", \"10000 or more results\") ) ) ) )) AS ?layer )\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }        \n }\nORDER BY DESC (?count)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/topic_organization-map.sparql",
      "title": "topic_organization-map",
      "description": null
    },
    {
      "query_id": "scholia.topic_publications-per-year",
      "namespace": "scholia",
      "name": "topic_publications-per-year",
      "sparql": "#defaultView:BarChart\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  (STR(?year_) AS ?year)\n  (COUNT(?work) AS ?number_of_publications)\n\n  # Work type used to color the bar chart\n  ?type\nWITH {\n  # Find works with the topic. Also report the year\n  SELECT\n    ?work (MIN(?years) AS ?year_) (1 AS ?dummy) (SAMPLE(?article_type_) AS ?article_type)\n  WHERE {\n    ?work wdt:P921 / (wdt:P31*/wdt:P279* | wdt:P361+ | wdt:P1269+) target: .\n    ?work wdt:P577 ?dates .\n    BIND(YEAR(?dates) AS ?years) .\n\n    ?work wdt:P31 ?article_type_ .\n  }\n  GROUP BY ?work \n} AS %works\nWITH {\n  SELECT ?year_ WHERE {\n    # default values = 0\n    ?year_item wdt:P31 wd:Q577 . \n    ?year_item wdt:P585 ?date .\n    BIND(YEAR(?date) AS ?year_)\n  }\n} AS %default_counts\nWITH {\n  # Find earliest publication year\n  SELECT (MIN(?year_) AS ?earliest_year) WHERE {\n    INCLUDE %works\n  }\n  GROUP BY ?dummy\n} AS %earliest  \nWHERE {\n  {\n    INCLUDE %works\n    ?article_type rdfs:label ?type . FILTER (LANG(?type) = \"en\")\n  }\n  UNION\n  {\n    INCLUDE %default_counts\n    BIND(\"_\" AS ?type)\n  }\n  INCLUDE %earliest\n  BIND(YEAR(NOW()) AS ?this_year)\n  FILTER (?year_ >= ?earliest_year && ?year_ <= ?this_year && ?year_ >= YEAR(\"1900-01-01\"^^xsd:dateTime))\n}\nGROUP BY ?year_ ?type\nORDER BY ?year\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/topic_publications-per-year.sparql",
      "title": "topic_publications-per-year",
      "description": null
    },
    {
      "query_id": "scholia.topic_recently-published-works",
      "namespace": "scholia",
      "name": "topic_recently-published-works",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?date ?work ?workLabel (CONCAT(\"/work/\", SUBSTR(STR(?work), 32)) AS ?workUrl)\n  ?topicsUrl ?topics \nWITH {\n  SELECT DISTINCT ?work WHERE {\n    ?work wdt:P921 / (wdt:P361+ | wdt:P1269+ | (wdt:P31* / wdt:P279*) ) target: .\n  }\n} AS %works\nWITH {\n  SELECT (MAX(?dates) as ?datetime) ?work (GROUP_CONCAT(DISTINCT ?topic_label; separator=\" // \") AS ?topics) \n                                    (CONCAT(\"../topics/\", GROUP_CONCAT(DISTINCT SUBSTR(STR(?topic), 32); separator=\",\")) AS ?topicsUrl) \n  WHERE {\n    INCLUDE %works\n    ?work wdt:P921 ?topic . \n    OPTIONAL { ?work wdt:P577 ?dates . }\n    ?topic rdfs:label ?topic_label .  FILTER (lang(?topic_label) = 'en')\n  }\n  GROUP BY ?work\n} AS %result\nWHERE {\n  INCLUDE %result\n\n  # There is a problem with BC dates\n  # BIND(xsd:date(?datetime) AS ?date)\n  BIND(REPLACE(STR(?datetime), 'T.*', '') AS ?date)\n    \n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\". }\n}\nGROUP BY ?date ?work ?workLabel ?topicsUrl ?topics\nORDER BY DESC(?date)\nLIMIT 500\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/topic_recently-published-works.sparql",
      "title": "topic_recently-published-works",
      "description": null
    },
    {
      "query_id": "scholia.topic_top-cited",
      "namespace": "scholia",
      "name": "topic_top-cited",
      "sparql": "#defaultView:Table\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?count \n?cited_work ?cited_workLabel (CONCAT(\"/work/\", SUBSTR(STR(?cited_work), 32)) AS ?cited_workUrl)\nWITH {\n  SELECT (count(?work) as ?count) ?cited_work WHERE {\n    { ?work wdt:P921/wdt:P31*/wdt:P279* target: . }\n    union { ?work wdt:P921/wdt:P361+ target: . }\n    union { ?work wdt:P921/wdt:P1269+ target: . }\n    ?work wdt:P2860 ?cited_work .\n  }\n  GROUP BY ?cited_work\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\" . } \n}\nORDER BY DESC(?count)\nLIMIT 200\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/topic_top-cited.sparql",
      "title": "topic_top-cited",
      "description": null
    },
    {
      "query_id": "scholia.topic_topics",
      "namespace": "scholia",
      "name": "topic_topics",
      "sparql": "#defaultView:Table\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?count (CONCAT(\"/topics/{{ q }},\", SUBSTR(STR(?topic), 32)) AS ?countUrl)\n       ?topic ?topicLabel (CONCAT(\"/topic/\", SUBSTR(STR(?topic), 32)) AS ?topicUrl)\n       ?example_work ?example_workLabel (CONCAT(\"/work/\", SUBSTR(STR(?example_work), 32)) AS ?example_workUrl)\nWITH {\n  SELECT (COUNT(?work) AS ?count) ?topic (SAMPLE(?work) AS ?example_work) WHERE {\n    # Find works for the specific queried topic\n\t  ?work wdt:P921/( wdt:P31*/wdt:P279* | wdt:P361+ | wdt:P1269+) target: .\n    \n    # Find co-occuring topics\n    ?work wdt:P921 ?topic .\n    \n    # Avoid listing the queried topic\n      FILTER (target: != ?topic)\n  }\n  GROUP BY ?topic\n} AS %result\nWHERE {\n  # Label the results\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\" . } \n}\nORDER BY DESC(?count)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/topic_topics.sparql",
      "title": "topic_topics",
      "description": null
    },
    {
      "query_id": "scholia.topic_uses",
      "namespace": "scholia",
      "name": "topic_uses",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?count\n  ?use ?useLabel (CONCAT(\"/use/\", SUBSTR(STR(?use), 32)) AS ?useUrl)\n  (\"\ud83d\udd0e\" AS ?zoom)\n  (CONCAT(SUBSTR(STR(target:), 32), \"/use/\", SUBSTR(STR(?use), 32)) AS ?zoomUrl)\n  ?useDescription\n\n  ?example_work ?example_workLabel\nWITH {\n  SELECT\n    (COUNT(?work) AS ?count)\n    ?use\n    (SAMPLE(?work) AS ?example_work)\n  {\n    ?work wdt:P921 target: ;\n          wdt:P4510 ?use .\n  }\n  GROUP BY ?use\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?count)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/topic_uses.sparql",
      "title": "topic_uses",
      "description": null
    },
    {
      "query_id": "scholia.topic_venues",
      "namespace": "scholia",
      "name": "topic_venues",
      "sparql": "#defaultView:Table\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?count ?short_name \n?venue ?venueLabel (CONCAT(\"/venue/\", SUBSTR(STR(?venue), 32)) AS ?venueUrl)\nWITH {\n  SELECT (count(?work) as ?count) ?venue (SAMPLE(?short_name_) AS ?short_name) WHERE {\n    { ?work wdt:P921/wdt:P31*/wdt:P279* target: . }\n    union { ?work wdt:P921/wdt:P361+ target: . }\n    union { ?work wdt:P921/wdt:P1269+ target: . }\n    ?work wdt:P1433/wdt:P179* ?venue .\n    OPTIONAL { ?venue wdt:P1813 ?short_name_ . }\n  }\n  GROUP BY ?venue\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl,no,ru,sv,zh\" . } \n}\nORDER BY DESC(?count)\nLIMIT 200\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/topic_venues.sparql",
      "title": "topic_venues",
      "description": null
    },
    {
      "query_id": "scholia.topics_authors",
      "namespace": "scholia",
      "name": "topics_authors",
      "sparql": "# title: Authors for specific topics\nSELECT\n  ?score\n  ?author ?authorLabel (CONCAT(\"/author/\", SUBSTR(STR(?author), 32)) AS ?authorUrl)\n  ?example_work ?example_workLabel (CONCAT(\"/work/\", SUBSTR(STR(?example_work), 32)) AS ?example_workUrl)\nWITH {\n  SELECT (COUNT(?topic) AS ?score) ?author (SAMPLE(?work_) AS ?example_work)\n    WHERE {\n    VALUES ?topic { {% for q in qs %} wd:{{ q }} {% endfor %} }\n    \n    # A broad query including \"(wdt:P361+ | wdt:P1269+ | (wdt:P31* / wdt:P279*) )\" seems to take\n    # long time and time out.\n    ?work wdt:P921 ?topic  .\n    ?work wdt:P2860 ?cited_work .\n    { ?cited_work wdt:P50 ?author . BIND(?cited_work AS ?work_) }\n    UNION\n    { ?work wdt:P50 ?author . BIND(?work AS ?work_) }\n  }\n  GROUP BY ?author\n  ORDER BY DESC(?score)\n  LIMIT 200\n} AS %results\nWHERE {\n  INCLUDE %results\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}\nORDER BY DESC(?score)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/topics_authors.sparql",
      "title": "topics_authors",
      "description": null
    },
    {
      "query_id": "scholia.topics_list-of-topics",
      "namespace": "scholia",
      "name": "topics_list-of-topics",
      "sparql": "# title: List of topics\nSELECT\n  ?topic ?topicLabel ?topicDescription (CONCAT(\"/topic/\", SUBSTR(STR(?topic), 32)) AS ?topicUrl)\n  ?example_work ?example_workLabel (CONCAT(\"/work/\", SUBSTR(STR(?example_work), 32)) AS ?example_workUrl)\nWITH {\n  SELECT ?topic (SAMPLE(?work) AS ?example_work) WHERE {\n    VALUES ?topic { {% for q in qs %} wd:{{ q }} {% endfor %} }\n    OPTIONAL { \n      ?work wdt:P921 ?topic ; wdt:P31 wd:Q13442814 .\n    }\n  }\n  GROUP BY ?topic\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/topics_list-of-topics.sparql",
      "title": "topics_list-of-topics",
      "description": null
    },
    {
      "query_id": "scholia.topics_list-of-works",
      "namespace": "scholia",
      "name": "topics_list-of-works",
      "sparql": "# title: List of works on any combination of specific topics\nSELECT\n  ?count \n  (MIN(?publication_date_) AS ?publication_date)\n  ?work ?workLabel (CONCAT(\"/work/\", SUBSTR(STR(?work), 32)) AS ?workUrl)\n  ?topics ?topicsUrl\nWITH {\n  SELECT (COUNT(?topic) AS ?count) ?work\n    (GROUP_CONCAT(DISTINCT ?topic_label; separator=\" // \") AS ?topics) \n    (CONCAT(\"../topics/\", GROUP_CONCAT(DISTINCT SUBSTR(STR(?topic), 32); separator=\",\")) AS ?topicsUrl)                                    \n  WHERE {\n    VALUES ?topic { {% for q in qs %} wd:{{ q }} {% endfor %} }\n    \n    # A broad query including \"(wdt:P361+ | wdt:P1269+ | (wdt:P31* / wdt:P279*) )\" seems to take\n    # long time and time out.\n    ?work wdt:P921 ?topic  .\n    ?topic rdfs:label ?topic_label .\n    FILTER(LANG(?topic_label) = 'en')\n  }\n  GROUP BY ?work ?topics\n  HAVING(?count > 1)\n  ORDER BY DESC(?count)\n  LIMIT 200\n} AS %results\nWHERE {\n  INCLUDE %results\n  OPTIONAL {\n    ?work wdt:P577 ?publication_datetime .\n    BIND(xsd:date(?publication_datetime) AS ?publication_date_)\n  }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}\nGROUP BY ?count ?work ?workLabel ?topics ?topicsUrl\nORDER BY DESC(?count) DESC(?publication_date)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/topics_list-of-works.sparql",
      "title": "topics_list-of-works",
      "description": null
    },
    {
      "query_id": "scholia.use-curation_missing-author-items",
      "namespace": "scholia",
      "name": "use-curation_missing-author-items",
      "sparql": "SELECT\n  # Number of works with the author\n  ?count\n\n  # Author score - 3 points for authoring a work, 1 for being cited\n  ?score\n\n  # Author as a string\n  ?author\n\n  # Build URL to the Author disambiguator tool\n  (CONCAT(\n      'https://author-disambiguator.toolforge.org/names_oauth.php?doit=Look+for+author&name=',\n      ENCODE_FOR_URI(?author)) AS ?resolver_url)\n\nWITH {\n  SELECT DISTINCT ?work WHERE {\n    ?work (wdt:P2283 | wdt:P4510) / wdt:P279* wd:{{ q }} .\n  }\n  LIMIT 100000\n} AS %works\nWITH {\n  SELECT\n    (COUNT(?work) AS ?count)\n    ?author\n  WHERE {\n    INCLUDE %works\n    ?work wdt:P2093 ?author .\n  }\n  GROUP BY ?author\n} AS %counts\n\n# Generate a score for each author\nWITH {\n  SELECT (SUM(?score_) AS ?score) ?author\n  WHERE {\n    {\n      # Assign them 3 points if they are an author of a work using the resource\n      SELECT (3 AS ?score_) ?author WHERE {\n        [] wdt:P2093 ?author ;\n           (wdt:P2283 | wdt:P4510) / wdt:P279* wd:{{ q }} .\n      }\n      LIMIT 10000\n    }\n    UNION\n    {\n      # Assign them 1 point if they are the author of a work that is cited by a work using the resource\n      SELECT (1 AS ?score_) ?author WHERE {\n        [] wdt:P2860 / wdt:P2093 ?author ;\n           (wdt:P2283 | wdt:P4510) / wdt:P279* wd:{{ q }} .\n      }\n      LIMIT 10000\n    }\n  }\n  GROUP BY ?author\n} AS %scores\n\nWHERE {\n  INCLUDE %counts\n  INCLUDE %scores\n\n  # Label the result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}\nORDER BY DESC(?score) DESC(?count) \nLIMIT 500\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/use-curation_missing-author-items.sparql",
      "title": "use-curation_missing-author-items",
      "description": null
    },
    {
      "query_id": "scholia.use-curation_missing-co-uses",
      "namespace": "scholia",
      "name": "use-curation_missing-co-uses",
      "sparql": "# tool: scholia\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?couses\n  ?citing_works\n  ?work ?workLabel (CONCAT(\"/work/\", SUBSTR(STR(?work), 32)) AS ?workUrl)\nWITH {\n  # Count citations\n  SELECT\n    (COUNT(DISTINCT ?citing_work) AS ?citing_works)\n    ?work\n    (SAMPLE(?citing_work) AS ?example_citing_work)\n    (COUNT(DISTINCT ?use) AS ?couses)\n  WHERE {\n    ?work wdt:P4510 target: .\n    OPTIONAL { ?work wdt:P4510 ?use . FILTER (?use != target: )}\n    OPTIONAL { ?citing_work wdt:P2860 ?work. }\n  }\n  GROUP BY ?work\n\n  # Disabled to also show works with few co-uses\n  # HAVING (?couses < 1)\n\n  ORDER BY DESC(?count)\n  LIMIT 100\n} AS %result\nWHERE {\n  # Label results\n  INCLUDE %result\n  SERVICE wikibase:label {\n    bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . } \n}\nORDER BY ?couses DESC(?citing_works)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/use-curation_missing-co-uses.sparql",
      "title": "use-curation_missing-co-uses",
      "description": null
    },
    {
      "query_id": "scholia.use-curation_works-with-few-topics",
      "namespace": "scholia",
      "name": "use-curation_works-with-few-topics",
      "sparql": "# tool: scholia\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?number_of_topics\n  ?citing_works\n  ?work ?workLabel (CONCAT(\"/work/\", SUBSTR(STR(?work), 32)) AS ?workUrl)\nWITH {\n  # Count citations\n  SELECT\n    (COUNT(DISTINCT ?citing_work) AS ?citing_works)\n    ?work\n    (SAMPLE(?citing_work) AS ?example_citing_work)\n    (COUNT(DISTINCT ?topic) AS ?number_of_topics)\n  WHERE {\n    # subclasses included to get version of resources\n    ?work wdt:P4510 / wdt:P279* target: .\n    \n    OPTIONAL { ?work wdt:P921 ?topic . }\n    OPTIONAL { ?citing_work wdt:P2860 ?work. }\n  }\n  GROUP BY ?work\n  # HAVING (?topics < 1)\n  ORDER BY DESC(?count)\n  LIMIT 200\n} AS %result\nWHERE {\n  # Label results\n  INCLUDE %result\n  SERVICE wikibase:label {\n    bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . } \n}\nORDER BY ?number_of_topics DESC(?citing_works)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/use-curation_works-with-few-topics.sparql",
      "title": "use-curation_works-with-few-topics",
      "description": null
    },
    {
      "query_id": "scholia.use-index_most-used",
      "namespace": "scholia",
      "name": "use-index_most-used",
      "sparql": "SELECT ?count ?use ?useLabel (CONCAT(\"/use/\", SUBSTR(STR(?use), 32)) AS ?useUrl)\n?described_by_example ?described_by_exampleLabel ?example_use ?example_useLabel\nWITH {\n  SELECT\n    (COUNT(DISTINCT ?work) AS ?count)\n    ?use\n    (SAMPLE(?described_by) AS ?described_by_example)\n    (SAMPLE(?work) AS ?example_use)\n  WHERE {\n    ?work wdt:P2283 | wdt:P4510 ?use . \n    ?use wdt:P31/wdt:P279* wd:Q7397 . \n    # Restricting to work takes too long time :(    \n    # ?work wdt:P31/wdt:P279* wd:Q386724 .\n    OPTIONAL { ?use wdt:P1343 ?described_by . }\n  }\n  GROUP BY ?use\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}\nORDER BY DESC(?count)\nLIMIT 500",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/use-index_most-used.sparql",
      "title": "use-index_most-used",
      "description": null
    },
    {
      "query_id": "scholia.use_authors-of-works-using-the-resource",
      "namespace": "scholia",
      "name": "use_authors-of-works-using-the-resource",
      "sparql": "#defaultView:BubbleChart\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?count\n  ?author ?authorLabel\nWITH{\n  SELECT\n    (COUNT(?work) AS ?count)\n    ?author\n  WHERE {\n    ?work wdt:P4510 / wdt:P279* target: ;\n          wdt:P50 ?author .\n  }\n  GROUP BY ?author\n  ORDER BY DESC(?count)\n  LIMIT 200\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,nl,no,ru,sv,zh\" . }\n}\nORDER BY DESC(?count)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/use_authors-of-works-using-the-resource.sparql",
      "title": "use_authors-of-works-using-the-resource",
      "description": null
    },
    {
      "query_id": "scholia.use_co-used",
      "namespace": "scholia",
      "name": "use_co-used",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?count\n  \n  ?coused ?cousedLabel (CONCAT(\"/use/\", SUBSTR(STR(?coused), 32)) AS ?cousedUrl)\n  (\"\ud83d\udd0e\" AS ?zoom)\n  (CONCAT(\"../uses/{{ q }},\", SUBSTR(STR(?coused), 32)) AS ?zoomUrl)\n  ?cousedDescription\n  \n  ?example_work ?example_workLabel (CONCAT(\"/work/\", SUBSTR(STR(?example_work), 32)) AS ?example_workUrl)\nWITH {\n  # Find works that are using a specific software,\n  # and find other software used in the found works\n  SELECT\n    ?coused\n    (COUNT(DISTINCT ?work) as ?count)\n    (SAMPLE(?work) AS ?example_work)\n  WHERE {\n    ?work wdt:P4510 / wdt:P279* target: ;\n          wdt:P4510 ?coused .\n    FILTER (?coused != target:)\n  }\n  GROUP BY ?coused\n} AS %result\nWHERE {\n  # Label the result\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}\nORDER BY DESC(?count) \n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/use_co-used.sparql",
      "title": "use_co-used",
      "description": null
    },
    {
      "query_id": "scholia.use_recent-work-using-the-used",
      "namespace": "scholia",
      "name": "use_recent-work-using-the-used",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?publication_date \n  ?work ?workLabel (CONCAT(\"/work/\", SUBSTR(STR(?work), 32)) AS ?workUrl)\nWITH{\n  SELECT\n    ?publication_datetime\n    ?work\n  WHERE {\n    ?work wdt:P4510 / wdt:P279* target: ;\n          wdt:P577 ?publication_datetime .\n  }\n  ORDER BY DESC(?publication_datetime)\n  LIMIT 1000\n} AS %result\nWHERE {\n  INCLUDE %result\n  BIND(xsd:date(?publication_datetime) AS ?publication_date)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }\n}\nORDER BY DESC(?publication_date)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/use_recent-work-using-the-used.sparql",
      "title": "use_recent-work-using-the-used",
      "description": null
    },
    {
      "query_id": "scholia.use_topics-of-works-using-the-resource",
      "namespace": "scholia",
      "name": "use_topics-of-works-using-the-resource",
      "sparql": "#defaultView:BubbleChart\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?count\n  ?topic ?topicLabel\nWITH{\n  SELECT\n    (COUNT(?work) AS ?count)\n    ?topic\n  WHERE {\n    ?work wdt:P4510 / wdt:P279* target: ; \n          wdt:P921 ?topic .\n  }\n  GROUP BY ?topic\n  ORDER BY DESC(?count)\n  LIMIT 200\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,nl,no,ru,sv,zh\" . }\n}\nORDER BY DESC(?count)\n\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/use_topics-of-works-using-the-resource.sparql",
      "title": "use_topics-of-works-using-the-resource",
      "description": null
    },
    {
      "query_id": "scholia.use_usage-over-time",
      "namespace": "scholia",
      "name": "use_usage-over-time",
      "sparql": "#defaultView:BarChart\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?year\n  (COUNT(?work) AS ?number_of_works)\n  ?useLabel\nWITH{\n  SELECT\n    (MIN(?year_) AS ?year) ?work ?use\n  WHERE {\n    ?use wdt:P279* target: .\n    ?work wdt:P4510 ?use ; \n          wdt:P577 ?publication_datetime .\n    BIND(STR(YEAR(?publication_datetime)) AS ?year_)\n  }\n  GROUP BY ?work ?use\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,nl,no,ru,sv,zh\" . }\n}\nGROUP BY ?year ?useLabel\nORDER BY ?year\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/use_usage-over-time.sparql",
      "title": "use_usage-over-time",
      "description": null
    },
    {
      "query_id": "scholia.uses_authors",
      "namespace": "scholia",
      "name": "uses_authors",
      "sparql": "# title: Authors for specific uses\nSELECT\n  ?uses ?works\n  ?author ?authorLabel (CONCAT(\"/author/\", SUBSTR(STR(?author), 32)) AS ?authorUrl)\n  ?example_work ?example_workLabel (CONCAT(\"/work/\", SUBSTR(STR(?example_work), 32)) AS ?example_workUrl)\nWITH {\n  SELECT\n    (COUNT(DISTINCT ?use) AS ?uses)\n    (COUNT(DISTINCT ?work) AS ?works)\n    ?author (SAMPLE(?work) AS ?example_work)\n  WHERE {\n    VALUES ?use { {% for q in qs %} wd:{{ q }} {% endfor %} }\n    \n    ?work wdt:P4510 / wdt:P279* ?use ;\n          wdt:P50 ?author .\n  }\n  GROUP BY ?author\n  ORDER BY DESC(?uses)\n  LIMIT 200\n} AS %results\nWHERE {\n  INCLUDE %results\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}\nORDER BY DESC(?uses) DESC(?works)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/uses_authors.sparql",
      "title": "uses_authors",
      "description": null
    },
    {
      "query_id": "scholia.uses_list-of-uses",
      "namespace": "scholia",
      "name": "uses_list-of-uses",
      "sparql": "# title: List of uses\nSELECT\n  ?use ?useLabel ?useDescription (CONCAT(\"/use/\", SUBSTR(STR(?use), 32)) AS ?useUrl)\n  ?example_work ?example_workLabel (CONCAT(\"/work/\", SUBSTR(STR(?example_work), 32)) AS ?example_workUrl)\nWITH {\n  SELECT ?use (SAMPLE(?work) AS ?example_work) WHERE {\n    VALUES ?use { {% for q in qs %} wd:{{ q }} {% endfor %} }\n    OPTIONAL { \n      ?work wdt:P4510 ?use .\n    }\n  }\n  GROUP BY ?use\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/uses_list-of-uses.sparql",
      "title": "uses_list-of-uses",
      "description": null
    },
    {
      "query_id": "scholia.uses_list-of-works",
      "namespace": "scholia",
      "name": "uses_list-of-works",
      "sparql": "# title: List of works on any combination of specific uses\nSELECT\n  ?count \n  (MIN(?publication_date_) AS ?publication_date)\n  ?work ?workLabel (CONCAT(\"/work/\", SUBSTR(STR(?work), 32)) AS ?workUrl)\n  ?uses ?usesUrl\nWITH {\n  SELECT (COUNT(?use) AS ?count) ?work\n    (GROUP_CONCAT(DISTINCT ?use_label; separator=\" // \") AS ?uses) \n    (CONCAT(\"../uses/\", GROUP_CONCAT(DISTINCT SUBSTR(STR(?use), 32); separator=\",\")) AS ?usesUrl)                                    \n  WHERE {\n    VALUES ?use { {% for q in qs %} wd:{{ q }} {% endfor %} }\n    \n    # A broad query including \"(wdt:P361+ | wdt:P1269+ | (wdt:P31* / wdt:P279*) )\" seems to take\n    # long time and time out.\n    ?work wdt:P4510 ?use  .\n    ?use rdfs:label ?use_label .\n    FILTER(LANG(?use_label) = 'en')\n  }\n  GROUP BY ?work ?uses\n  HAVING(?count > 1)\n  ORDER BY DESC(?count)\n  LIMIT 200\n} AS %results\nWHERE {\n  INCLUDE %results\n  OPTIONAL {\n    ?work wdt:P577 ?publication_datetime .\n    BIND(xsd:date(?publication_datetime) AS ?publication_date_)\n  }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}\nGROUP BY ?count ?work ?workLabel ?uses ?usesUrl\nORDER BY DESC(?count) DESC(?publication_date)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/uses_list-of-works.sparql",
      "title": "uses_list-of-works",
      "description": null
    },
    {
      "query_id": "scholia.venue-curation_missing-author-item",
      "namespace": "scholia",
      "name": "venue-curation_missing-author-item",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  # Number of works with the author\n  ?count\n\n  # The author as a string, - rather than as an item\n  ?author\n\n  # Build URL to the Author disambiguator tool\n  (CONCAT(\n      'https://author-disambiguator.toolforge.org/names_oauth.php?doit=Look+for+author&name=',\n      ENCODE_FOR_URI(?author)) AS ?resolver_url)\nWITH {\n  SELECT (COUNT(?work) as ?count) ?author WHERE {\n    ?work wdt:P1433 target: .\n    ?work wdt:P2093 ?author .\n  }\n  GROUP BY ?author\n\n  ORDER BY DESC(?count)\n  \n  # Limit the number of result as the query may time out\n  LIMIT 1000\n} AS %result\nWHERE {\n  INCLUDE %result\n}\nORDER BY DESC(?count)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/venue-curation_missing-author-item.sparql",
      "title": "venue-curation_missing-author-item",
      "description": null
    },
    {
      "query_id": "scholia.venue-curation_missing-topics",
      "namespace": "scholia",
      "name": "venue-curation_missing-topics",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?count\n  ?work ?workLabel (CONCAT(\"/work/\", SUBSTR(STR(?work), 32)) AS ?workUrl)\n  ?topics\nWITH {\n  # Count citations\n  SELECT\n    (COUNT(?citing_work) AS ?count)\n    ?work\n    (SAMPLE(?citing_work) AS ?example_citing_work)\n    (COUNT(DISTINCT ?topic) AS ?topics)\n  WHERE {\n    ?work wdt:P1433 target: .\n    OPTIONAL { ?work wdt:P921 ?topic }\n    OPTIONAL { ?citing_work wdt:P2860 ?work. }\n  }\n  GROUP BY ?work\n  ORDER BY DESC(?count)\n  LIMIT 1000  \n} AS %result\nWHERE {\n  # Label results\n  INCLUDE %result\n  FILTER (?topics < 2)\n  SERVICE wikibase:label {\n    bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . } \n}\nORDER BY DESC(?count) ?topics",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/venue-curation_missing-topics.sparql",
      "title": "venue-curation_missing-topics",
      "description": null
    },
    {
      "query_id": "scholia.venue-use_authors",
      "namespace": "scholia",
      "name": "venue-use_authors",
      "sparql": "PREFIX target1: <http://www.wikidata.org/entity/{{ q1 }}>\nPREFIX target2: <http://www.wikidata.org/entity/{{ q2 }}>\n\nSELECT\n  ?number_of_works\n  \n  ?author ?authorLabel\n  (CONCAT(\"/author/\", SUBSTR(STR(?author), 32)) AS ?authorUrl)\n  ?authorDescription\n  \n  ?example_work ?example_workLabel (CONCAT(\"/work/\", SUBSTR(STR(?example_work), 32)) AS ?example_workUrl)\nWITH {\n  SELECT \n    (COUNT(?work) AS ?number_of_works)\n    ?author \n    (SAMPLE(?work) AS ?example_work)\n  WHERE {\n    ?work wdt:P1433 target1: ;\n          wdt:P4510 target2: ;\n          wdt:P50 ?author .\n  }\n  GROUP BY ?author\n  ORDER BY DESC(?number_of_works)\n  LIMIT 500\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,da,de,es,fr,it,sv,uk,zh\". }\n}\nORDER BY DESC(?number_of_works)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/venue-use_authors.sparql",
      "title": "venue-use_authors",
      "description": null
    },
    {
      "query_id": "scholia.venue-use_works",
      "namespace": "scholia",
      "name": "venue-use_works",
      "sparql": "PREFIX target1: <http://www.wikidata.org/entity/{{ q1 }}>\nPREFIX target2: <http://www.wikidata.org/entity/{{ q2 }}>\n\nSELECT\n  ?publication_date\n  ?work ?workLabel (CONCAT(\"/work/\", SUBSTR(STR(?work), 32)) AS ?workUrl)\nWHERE {\n  ?work wdt:P1433 target1: ;\n        wdt:P4510 target2: .\n  OPTIONAL {\n    ?work wdt:P577 ?publication_datetime .\n    BIND(xsd:date(?publication_datetime) AS ?publication_date)\n  }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,da,de,es,fr,jp,nl,no,ru,sv,zh\". }\n}\nORDER BY DESC(?publication_date)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/venue-use_works.sparql",
      "title": "venue-use_works",
      "description": null
    },
    {
      "query_id": "scholia.venue_articles-by-intention",
      "namespace": "scholia",
      "name": "venue_articles-by-intention",
      "sparql": "#defaultView:BarChart\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n# Inspired from LEGOLAS - http://abel.lis.illinois.edu/legolas/\n# Shubhanshu Mishra, Vetle Torvik\nselect ?year (count(?work) as ?number_of_publications) ?intention where {\n  {\n    select (str(?year_) as ?year) (0 as ?pages) (\"_\" as ?intention) where {\n      # default values = 0\n      ?year_item wdt:P31 wd:Q577 . \n      ?year_item wdt:P585 ?date .\n      bind(year(?date) as ?year_)\n      {\n        select (min(?year_) as ?earliest_year)  (max(?year_) as ?latest_year) where {\n          VALUES ?JOURNAL { target: }\n          ?work wdt:P1433 ?JOURNAL .\n          ?work wdt:P577 ?publication_date . \n          bind(year(?publication_date) as ?year_)\n        }\n      }\n      bind(year(now())+1 as ?next_year)\n      filter (?year_ >= ?earliest_year && ?year_ <= ?latest_year)\n    }\n  }\n  union {\n    select ?work ?intention (min(?years) as ?year) where {\n      VALUES ?JOURNAL { target: }\n      ?work wdt:P577 ?dates ;\n            p:P2860 / pq:P3712 / rdfs:label ?intention ;\n            wdt:P1433 ?JOURNAL .\n      bind(str(year(?dates)) as ?years) .\n      FILTER (LANG(?intention) = \"en\")\n    }\n    group by ?work ?intention\n  }\n}\ngroup by ?year ?intention\norder by ?year\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/venue_articles-by-intention.sparql",
      "title": "venue_articles-by-intention",
      "description": null
    },
    {
      "query_id": "scholia.venue_articles-citing-retracted-articles",
      "namespace": "scholia",
      "name": "venue_articles-citing-retracted-articles",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n# title: Articles in a specific venue citing retracted articles\nSELECT DISTINCT\n  ?retracted_work ?retracted_workLabel\n  ?date\n  ?citing_work ?citing_workLabel\nWITH {\n  # Find retracted papers indicated by instance of retracted paper, \n  # by retraction notice property or by significant event\n  SELECT DISTINCT ?retracted_work WHERE {\n    # articles marked as \"retracted\"\n    { ?retracted_work wdt:P31 wd:Q45182324 }\n    UNION\n    # articles linked to a retraction notice\n    { ?retracted_work wdt:P5824 [] }\n    UNION\n    # articles with a 'retraction' event\n    { ?retracted_work wdt:P793 wd:Q45203135 }\n  }\n} AS %retracted_works\nWHERE {\n  INCLUDE %retracted_works\n  ?citing_work wdt:P2860 ?retracted_work ; wdt:P1433 target: .\n  OPTIONAL {\n    ?retracted_work wdt:P5824 ?retraction .\n    ?retraction wdt:P577 ?retraction_datetime\n    FILTER ( ?citing_work != ?retraction )\n  }\n  MINUS { ?citing_work wdt:P31 wd:Q1348305 }\n  OPTIONAL {\n    ?retracted_work p:P793 [ ps:P793 wd:Q45203135 ; pq:P585 ?keyevent_datetime ]\n  }\n  BIND(COALESCE(xsd:date(COALESCE(?retraction_datetime, ?keyevent_datetime)), \"Unknown date\") AS ?date)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?date)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/venue_articles-citing-retracted-articles.sparql",
      "title": "venue_articles-citing-retracted-articles",
      "description": null
    },
    {
      "query_id": "scholia.venue_author-awards",
      "namespace": "scholia",
      "name": "venue_author-awards",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n# title: Author awards for a specific venue\nSELECT DISTINCT\n  ?year \n  ?author ?authorLabel\n  ?award ?awardLabel ?awardDescription\nWHERE {\n  [] wdt:P1433 target: ;\n     wdt:P50 ?author .\n  ?author p:P166 ?award_statement .\n  ?award_statement ps:P166 ?award .\n  OPTIONAL {\n    { ?award_statement pq:P585 ?time }\n    UNION\n    { ?award_statement pq:P580 ?time }\n    BIND(YEAR(?time) AS ?year)\n  }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }  \n}\nORDER BY DESC(?year)\nLIMIT 500\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/venue_author-awards.sparql",
      "title": "venue_author-awards",
      "description": null
    },
    {
      "query_id": "scholia.venue_author-gender-distribution",
      "namespace": "scholia",
      "name": "venue_author-gender-distribution",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n# title: Author gender distribution for a specific venue\nSELECT ?count ?gender ?genderLabel \nWITH {\n  SELECT (COUNT(DISTINCT ?author) AS ?count) ?gender WHERE {\n    ?work wdt:P1433 target: .\n    ?work wdt:P50 ?author .\n    ?author wdt:P21 ?gender .\n  } \n  GROUP BY ?gender\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . } \n} \n ORDER BY DESC(?count)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/venue_author-gender-distribution.sparql",
      "title": "venue_author-gender-distribution",
      "description": null
    },
    {
      "query_id": "scholia.venue_author-images",
      "namespace": "scholia",
      "name": "venue_author-images",
      "sparql": "# title: Author images for a specific venue\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n#defaultView:ImageGrid\nSELECT (SAMPLE(?image_) AS ?image) ?author ?authorLabel ?count\nWITH {\n  SELECT ?author (COUNT(?work) AS ?count) WHERE {\n    ?work wdt:P1433 target:;\n          wdt:P50 ?author .\n  }\n  GROUP BY ?author\n} AS %authors\nWHERE {\n  INCLUDE %authors\n  ?author wdt:P18 ?image_ .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,jp,nl.no,ru,sv,zh\" . } \n}\nGROUP BY ?author ?authorLabel ?count\nORDER BY DESC(?count)\nLIMIT 50  ",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/venue_author-images.sparql",
      "title": "venue_author-images",
      "description": null
    },
    {
      "query_id": "scholia.venue_authors",
      "namespace": "scholia",
      "name": "venue_authors",
      "sparql": "# title: Prolific authors for a specific journal\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?count ?author ?authorLabel ?orcid ?example_work ?example_workLabel\nWITH {\n  # Count the number of works author by the author publishing in the journal\n  SELECT\n    ?author\n    (COUNT(?work) AS ?count)\n    (SAMPLE(?work) AS ?example_work)\n  WHERE {\n    ?work wdt:P50 ?author ;\n          wdt:P1433 target: .\n  }\n  GROUP BY ?author\n} AS %result\nWHERE {\n  INCLUDE %result \n          \n  # Include optional ORCID iD\n  OPTIONAL { ?author wdt:P496 ?orcid . }\n  \n  # Label the results\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . } \n}\nORDER BY DESC(?count)\nLIMIT 50\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/venue_authors.sparql",
      "title": "venue_authors",
      "description": null
    },
    {
      "query_id": "scholia.venue_authorship-gender-distribution",
      "namespace": "scholia",
      "name": "venue_authorship-gender-distribution",
      "sparql": "# title: Authorship gender distribution for a specific venue\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?count ?gender ?genderLabel \nWITH {\n  SELECT (COUNT(?author) AS ?count) ?gender WHERE {\n    ?work wdt:P1433 target: .\n    ?work wdt:P50 ?author .\n    ?author wdt:P21 ?gender .\n  } \n  GROUP BY ?gender\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . } \n} \n ORDER BY DESC(?count)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/venue_authorship-gender-distribution.sparql",
      "title": "venue_authorship-gender-distribution",
      "description": null
    },
    {
      "query_id": "scholia.venue_citation-distribution",
      "namespace": "scholia",
      "name": "venue_citation-distribution",
      "sparql": "# title: Citation distribution for a venue\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n#defaultView:LineChart\nSELECT\n  ?number_of_citations (COUNT(?work) AS ?count)\nWHERE {\n  {\n    SELECT ?work (COUNT(?citing_work) AS ?number_of_citations)\n    WHERE {\n      ?work wdt:P1433 target: .\n      OPTIONAL { ?citing_work wdt:P2860 ?work . }\n    }\n    GROUP BY ?work \n  }\n} \nGROUP BY ?number_of_citations\nORDER BY DESC(?number_of_citations)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/venue_citation-distribution.sparql",
      "title": "venue_citation-distribution",
      "description": null
    },
    {
      "query_id": "scholia.venue_cited-venues",
      "namespace": "scholia",
      "name": "venue_cited-venues",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n# title: Cited venues from specific journal\nSELECT\n  ?count\n  ?short_name\n  ?cited_journal ?cited_journalLabel\nWITH {\n  SELECT\n    (COUNT(?cited_work) AS ?count)\n    ?cited_journal\n    (SAMPLE(?short_name_) AS ?short_name)\n  WHERE {\n    ?work wdt:P1433 target: .\n    ?work wdt:P2860 ?cited_work .\n    ?cited_work wdt:P1433 ?cited_journal . \n    OPTIONAL {\n      ?work wdt:P577 ?publication_datetime .\n      BIND(xsd:date(?publication_datetime) AS ?publication_date)\n    }\n    OPTIONAL { ?cited_journal wdt:P1813 ?short_name_ . }\n  }\n  GROUP BY ?cited_journal\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label {\n    bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . } \n}\nORDER BY DESC(?count)\nLIMIT 200\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/venue_cited-venues.sparql",
      "title": "venue_cited-venues",
      "description": null
    },
    {
      "query_id": "scholia.venue_citing-venues",
      "namespace": "scholia",
      "name": "venue_citing-venues",
      "sparql": "# title: Venues citing articles from this specific journal\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n#defaultView:Table\nSELECT\n  ?count\n  ?short_name\n  ?citing_journal ?citing_journalLabel \nWITH {\n  SELECT\n    (COUNT(?citing_work) AS ?count)\n    ?citing_journal\n    (SAMPLE(?short_name_) AS ?short_name)\n  WHERE {\n    ?work wdt:P1433 target: .\n    ?citing_work wdt:P2860 ?work .\n    ?citing_work wdt:P1433 ?citing_journal .\n    OPTIONAL { ?citing_journal wdt:P1813 ?short_name_ . }\n  }\n  GROUP BY ?citing_journal\n  ORDER BY DESC(?count)\n  LIMIT 1000\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label {\n    bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . } \n}\nORDER BY DESC(?count)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/venue_citing-venues.sparql",
      "title": "venue_citing-venues",
      "description": null
    },
    {
      "query_id": "scholia.venue_co-author-graph",
      "namespace": "scholia",
      "name": "venue_co-author-graph",
      "sparql": "# title: Co-author graph for a specific venue\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n#defaultView:Graph\nSELECT ?author1 ?author1Label ?rgb ?author2 ?author2Label\nWITH {\n  # Find works published in the given venue\n  SELECT ?work WHERE {\n    ?work wdt:P1433 target: .\n  }\n} AS %works\nWITH {\n  # Limit the number of authors\n  SELECT (COUNT(?work) AS ?count1) ?author1 WHERE {\n    INCLUDE %works\n    ?work wdt:P50 ?author1 .\n  }\n  GROUP BY ?author1\n  ORDER BY DESC(?count1)\n  LIMIT 15\n} AS %authors1\nWITH {\n  # Limit the number of coauthors\n  SELECT DISTINCT ?author2 ?author1  (COUNT(?work) AS ?count2)  WHERE {\n    INCLUDE %works\n    INCLUDE %authors1\n    ?work wdt:P50 ?author1 , ?author2 .\n    FILTER (?author1 != ?author2) \n  }\n  GROUP BY ?author2 ?author1 \n  ORDER BY DESC(?count2)\n  LIMIT 150\n} AS %authors2\nWHERE {\n#  INCLUDE %authors1\n  INCLUDE %authors2\n  OPTIONAL { ?author1 wdt:P21 ?gender1 . }\n  BIND( IF(?gender1 = wd:Q6581097, \"3182BD\", \"E6550D\") AS ?rgb)\n  SERVICE wikibase:label {\n    bd:serviceParam wikibase:language \"en,fr,de,ru,es,zh,jp\".\n  }\n}\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/venue_co-author-graph.sparql",
      "title": "venue_co-author-graph",
      "description": null
    },
    {
      "query_id": "scholia.venue_incoming-bubble",
      "namespace": "scholia",
      "name": "venue_incoming-bubble",
      "sparql": "#defaultView:BubbleChart\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?intention ?intentionLabel (COUNT(DISTINCT ?citingArticle) AS ?count) WHERE {\n  ?citingArticle p:P2860 ?citationStatement .\n  ?citationStatement pq:P3712 ?intention ;\n                     ps:P2860 ?citedArticle .\n  ?citedArticle wdt:P1433 target: .\n  ?intention wdt:P31 wd:Q96471816 ;\n             wdt:P2888 ?cito .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?cito ?intention ?intentionLabel\n  ORDER BY DESC(?count)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/venue_incoming-bubble.sparql",
      "title": "venue_incoming-bubble",
      "description": null
    },
    {
      "query_id": "scholia.venue_incoming",
      "namespace": "scholia",
      "name": "venue_incoming",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?intention ?intentionLabel (CONCAT(\"/cito/\", SUBSTR(STR(?intention), 32)) AS ?intentionUrl)\n(COUNT(DISTINCT ?citingArticle) AS ?count) WHERE {\n  VALUES ?JOURNAL { target: }\n  ?citingArticle p:P2860 ?citationStatement .\n  ?citationStatement pq:P3712 ?intention ;\n                     ps:P2860 ?citedArticle .\n  ?citedArticle wdt:P1433 ?JOURNAL .\n  ?intention wdt:P31 wd:Q96471816 ;\n             wdt:P2888 ?cito .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?cito ?intention ?intentionLabel\n  ORDER BY DESC(?count)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/venue_incoming.sparql",
      "title": "venue_incoming",
      "description": null
    },
    {
      "query_id": "scholia.venue_most-cited-articles",
      "namespace": "scholia",
      "name": "venue_most-cited-articles",
      "sparql": "# title: Most cited articles published in specific venue\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n#defaultView:Table\nSELECT\n  ?count\n  ?work ?workLabel\n  ?example_citing_work ?example_citing_workLabel\nWITH {\n  # Count citations\n  SELECT\n    (COUNT(?citing_work) AS ?count)\n    ?work\n    (SAMPLE(?citing_work) AS ?example_citing_work)\n  WHERE {\n    ?work wdt:P1433 target: .\n    ?citing_work wdt:P2860 ?work.\n  }\n  GROUP BY ?work\n  ORDER BY DESC(?count)\n  LIMIT 1000  \n} AS %result\nWHERE {\n  # Label results\n  INCLUDE %result\n  SERVICE wikibase:label {\n    bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . } \n}\nORDER BY DESC(?count)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/venue_most-cited-articles.sparql",
      "title": "venue_most-cited-articles",
      "description": null
    },
    {
      "query_id": "scholia.venue_most-cited-authors",
      "namespace": "scholia",
      "name": "venue_most-cited-authors",
      "sparql": "# title: Most cited authors published in venue\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?count\n  ?author ?authorLabel\n  ?orcid\n  ?example_cited_work ?example_cited_workLabel\n  ?example_citing_work ?example_citing_workLabel\nWITH {\n  # Count the number of citations\n  SELECT\n    ?author\n    (COUNT(?cited_work) AS ?count)\n    (SAMPLE(?cited_work) AS ?example_cited_work)\n    (SAMPLE(?citing_work) AS ?example_citing_work)\n  WHERE {\n    ?cited_work wdt:P1433 target: .\n    ?citing_work wdt:P2860 ?cited_work .\n    ?cited_work wdt:P50 ?author .\n  }\n  GROUP BY ?author\n} AS %result\nWHERE {\n  INCLUDE %result \n          \n  # Include optional ORCID iD\n  OPTIONAL { ?author wdt:P496 ?orcid . }\n  \n  # Label the results\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . } \n}\nORDER BY DESC(?count)\nLIMIT 100\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/venue_most-cited-authors.sparql",
      "title": "venue_most-cited-authors",
      "description": null
    },
    {
      "query_id": "scholia.venue_most-reused-articles",
      "namespace": "scholia",
      "name": "venue_most-reused-articles",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?citedArticle ?citedArticleLabel (CONCAT(\"/work/\", SUBSTR(STR(?citedArticle), 32), \"#cito\") AS ?citedArticleUrl)\n(COUNT(DISTINCT ?citingArticle) AS ?count) WHERE {\n  VALUES ?JOURNAL { target: }\n  VALUES ?INTENTION { wd:Q96472102 wd:Q96471820 wd:Q101149476 }\n  ?citingArticle p:P2860 ?citationStatement .\n  ?citationStatement pq:P3712 ?INTENTION ;\n                     ps:P2860 ?citedArticle .\n  ?citedArticle wdt:P1433 ?JOURNAL .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?citedArticle ?citedArticleLabel\n  ORDER BY DESC(?count)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/venue_most-reused-articles.sparql",
      "title": "venue_most-reused-articles",
      "description": null
    },
    {
      "query_id": "scholia.venue_outgoing-bubble",
      "namespace": "scholia",
      "name": "venue_outgoing-bubble",
      "sparql": "#defaultView:BubbleChart\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?cito ?intentionLabel (COUNT(DISTINCT ?citingArticle) AS ?count) WHERE {\n  ?citingArticle p:P2860 ?citationStatement ;\n                 wdt:P1433 target: .\n  ?citationStatement pq:P3712 ?intention ;\n                     ps:P2860 ?citedArticle .\n  ?intention wdt:P31 wd:Q96471816 ;\n             wdt:P2888 ?cito .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?cito ?intention ?intentionLabel\n  ORDER BY DESC(?count)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/venue_outgoing-bubble.sparql",
      "title": "venue_outgoing-bubble",
      "description": null
    },
    {
      "query_id": "scholia.venue_outgoing",
      "namespace": "scholia",
      "name": "venue_outgoing",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?intention ?intentionLabel (CONCAT(\"/cito/\", SUBSTR(STR(?intention), 32)) AS ?intentionUrl)\n(COUNT(DISTINCT ?citingArticle) AS ?count) WHERE {\n  VALUES ?JOURNAL { target: }\n  ?citingArticle p:P2860 ?citationStatement ;\n                 wdt:P1433 ?JOURNAL .\n  ?citationStatement pq:P3712 ?intention ;\n                     ps:P2860 ?citedArticle .\n  ?intention wdt:P31 wd:Q96471816 ;\n             wdt:P2888 ?cito .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?cito ?intention ?intentionLabel\n  ORDER BY DESC(?count)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/venue_outgoing.sparql",
      "title": "venue_outgoing",
      "description": null
    },
    {
      "query_id": "scholia.venue_recently-published-works",
      "namespace": "scholia",
      "name": "venue_recently-published-works",
      "sparql": "#title: Recent works published in venue\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?publication_date\n  ?work ?workLabel\n  (GROUP_CONCAT(DISTINCT ?author_label; separator=\", \") AS ?authors)\n  (CONCAT(\"../authors/\", GROUP_CONCAT(DISTINCT SUBSTR(STR(?author), 32); separator=\",\")) AS ?authorsUrl)\nWITH {\n  SELECT DISTINCT ?work (MIN(?publication_date_) AS ?publication_date) WHERE {\n    ?work wdt:P1433 target: .\n    OPTIONAL {\n      ?work wdt:P577 ?publication_datetime .\n      BIND(xsd:date(?publication_datetime) AS ?publication_date_)\n    }\n  } GROUP BY ?work\n    ORDER BY DESC(?publication_date)\n    LIMIT 1000\n} AS %ARTICLES WHERE {\n  INCLUDE %ARTICLES\n  OPTIONAL {\n    ?work wdt:P50 ?author .\n    ?author rdfs:label ?author_label .\n    FILTER (LANG(?author_label) = 'en')\n  }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n} GROUP BY ?publication_date ?work ?workLabel\nORDER BY DESC(?publication_date)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/venue_recently-published-works.sparql",
      "title": "venue_recently-published-works",
      "description": null
    },
    {
      "query_id": "scholia.venue_retractions",
      "namespace": "scholia",
      "name": "venue_retractions",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT DISTINCT ?work ?workLabel ?doi (COUNT(DISTINCT ?citing) AS ?citations) WHERE {\n  { ?work wdt:P31 wd:Q45182324 . }\n  UNION\n  { ?work wdt:P793 wd:Q7316896 . }\n  UNION\n  { ?work wdt:P5824 [] . }\n  OPTIONAL { ?citing wdt:P2860 ?work . }\n  ?work wdt:P1433 target: ; wdt:P356 ?doi .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?work ?workLabel ?doi\n  ORDER BY DESC(?citations)\n  LIMIT 100\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/venue_retractions.sparql",
      "title": "venue_retractions",
      "description": null
    },
    {
      "query_id": "scholia.venue_top-topics-through-time",
      "namespace": "scholia",
      "name": "venue_top-topics-through-time",
      "sparql": "#defaultView:AreaChart\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?year\n  ?works\n  ?topic ?topicLabel\nWITH {\n  SELECT \n    ?work\n  WHERE {\n    ?work wdt:P1433 target: .\n  }\n} AS %works\nWITH {\n  SELECT\n    (COUNT(?work) AS ?count)\n    ?topic\n  WHERE {\n    INCLUDE %works\n    ?work wdt:P921 ?topic .\n  }\n  GROUP BY ?topic\n  ORDER BY DESC(?count)\n  LIMIT 5\n} AS %topics\nWITH {\n  SELECT\n    ?year \n    (COUNT(?work) AS ?works)\n    ?topic\n  WHERE {\n    INCLUDE %works\n    INCLUDE %topics\n    ?work wdt:P921 ?topic ;\n          wdt:P577 ?publication_datetime .\n    BIND(STR(YEAR(?publication_datetime)) AS ?year)\n  }\n  GROUP BY ?year ?topic\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY ?year",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/venue_top-topics-through-time.sparql",
      "title": "venue_top-topics-through-time",
      "description": null
    },
    {
      "query_id": "scholia.venue_topics",
      "namespace": "scholia",
      "name": "venue_topics",
      "sparql": "# title: Count of topics in published work in specified venue\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?count ?topic ?topicLabel ?example_work ?example_workLabel\nWITH {\n  SELECT \n    (COUNT(?work) as ?count)\n    ?topic\n    (SAMPLE(?work) AS ?example_work)\n  WHERE {\n    ?work wdt:P1433 target: .\n    ?work wdt:P921 ?topic .\n  }\n  GROUP BY ?topic\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . } \n}\nORDER BY DESC(?count)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/venue_topics.sparql",
      "title": "venue_topics",
      "description": null
    },
    {
      "query_id": "scholia.venue_uses",
      "namespace": "scholia",
      "name": "venue_uses",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?count\n  ?use ?useLabel (CONCAT(\"/use/\", SUBSTR(STR(?use), 32)) AS ?useUrl)\n  (\"\ud83d\udd0e\" AS ?zoom)\n  (CONCAT(\"{{ q }}/use/\", SUBSTR(STR(?use), 32)) AS ?zoomUrl)\n  ?useDescription\n\n  ?example_work ?example_workLabel\nWITH {\n  SELECT\n    (COUNT(?work) AS ?count)\n    ?use\n    (SAMPLE(?work) AS ?example_work)\n  {\n    ?work wdt:P1433 target: ;\n          wdt:P4510 ?use .\n  }\n  GROUP BY ?use\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?count)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/venue_uses.sparql",
      "title": "venue_uses",
      "description": null
    },
    {
      "query_id": "scholia.venues_citations-per-year",
      "namespace": "scholia",
      "name": "venues_citations-per-year",
      "sparql": "#defaultView:LineChart\nSELECT ?year ?count ?venue ?venueLabel \nWITH {\n  SELECT ?year (COUNT(?work) AS ?count) ?venue \n  WHERE {\n    VALUES ?venue {   {% for q in qs %} wd:{{ q }} {% endfor %}   }\n    ?work wdt:P1433 ?venue .\n    ?citing_work wdt:P2860 ?work .\n    ?citing_work wdt:P577 ?publication_datetime .\n  BIND(STR(YEAR(?publication_datetime)) AS ?year)\n  }\n  GROUP BY ?year ?venue\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nORDER BY ?year\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/venues_citations-per-year.sparql",
      "title": "venues_citations-per-year",
      "description": null
    },
    {
      "query_id": "scholia.venues_citations-to-work-ratio",
      "namespace": "scholia",
      "name": "venues_citations-to-work-ratio",
      "sparql": "#defaultView:LineChart\nSELECT ?year (?citation_count / ?work_count AS ?citations_to_works_ratio) ?venue ?venueLabel \nWITH {\n  SELECT ?work ?venue\n  WHERE {\n    VALUES ?venue {    {% for q in qs %} wd:{{ q }} {% endfor %}    }\n    ?work wdt:P1433 ?venue .\n  }\n} AS %works\nWITH {\n  SELECT ?year (COUNT(?work) AS ?work_count) ?venue \n  WHERE {\n    INCLUDE %works\n    ?work wdt:P577 ?publication_datetime .\n    BIND(STR(YEAR(?publication_datetime)) AS ?year)\n  }\n  GROUP BY ?year ?venue\n} AS %work_counts\nWITH {\n  SELECT ?year (COUNT(?work) AS ?citation_count) ?venue \n  WHERE {\n    INCLUDE %works\n    ?citing_work wdt:P2860 ?work .\n    ?citing_work wdt:P577 ?publication_datetime .\n    BIND(STR(YEAR(?publication_datetime)) AS ?year)\n  }\n  GROUP BY ?year ?venue\n} AS %citation_counts\nWHERE {\n  INCLUDE %work_counts\n  INCLUDE %citation_counts\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,es,fr,nl,no,ru,sv,zh\". }\n}\nORDER BY ?year",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/venues_citations-to-work-ratio.sparql",
      "title": "venues_citations-to-work-ratio",
      "description": null
    },
    {
      "query_id": "scholia.venues_list-of-venues",
      "namespace": "scholia",
      "name": "venues_list-of-venues",
      "sparql": "SELECT ?venue ?venueLabel ?publisher ?publisherLabel ?number_of_works ?number_of_citations\nWITH {\n  SELECT ?venue (COUNT(DISTINCT ?work) AS ?number_of_works) (COUNT(?citing_work) AS ?number_of_citations)\n  WHERE {\n    VALUES ?venue {  {% for q in qs %} wd:{{ q }} {% endfor %}  }\n    OPTIONAL {\n      ?work wdt:P1433 ?venue .\n      OPTIONAL { ?citing_work wdt:P2860 ?work }\n    }\n  } \n  GROUP BY ?venue\n} AS %result\nWHERE {\n  INCLUDE %result\n  OPTIONAL { ?venue wdt:P123 ?publisher }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}\nORDER BY ?venueLabel",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/venues_list-of-venues.sparql",
      "title": "venues_list-of-venues",
      "description": null
    },
    {
      "query_id": "scholia.venues_published-works-per-year",
      "namespace": "scholia",
      "name": "venues_published-works-per-year",
      "sparql": "#defaultView:LineChart\nSELECT ?year (COUNT(?work) AS ?count) ?venue ?venueLabel WHERE {\n  VALUES ?venue { {% for q in qs %} wd:{{ q }} {% endfor %} }\n  ?work wdt:P1433 ?venue .\n  ?work wdt:P577 ?publication_datetime . \n  BIND(STR(YEAR(?publication_datetime)) AS ?year)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }\n}\nGROUP BY ?year ?venue ?venueLabel\nORDER BY ?year",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/venues_published-works-per-year.sparql",
      "title": "venues_published-works-per-year",
      "description": null
    },
    {
      "query_id": "scholia.wikiproject-index_most-used",
      "namespace": "scholia",
      "name": "wikiproject-index_most-used",
      "sparql": "SELECT \n  ?count\n  ?wikiproject ?wikiprojectLabel\n  (CONCAT(\"/wikiproject/\", SUBSTR(STR(?wikiproject), 32)) AS ?wikiprojectUrl)\n  ?wikiprojectDescription\n  ?example ?exampleLabel (CONCAT(\"/\", SUBSTR(STR(?example), 32)) AS ?exampleUrl)\nWITH {\n  SELECT \n    (COUNT(?item) AS ?count)\n    ?wikiproject\n    (SAMPLE(?item) AS ?example)\n  WHERE {\n    ?wikiproject wdt:P31 wd:Q16695773 ;\n                 ^(wdt:P6104 | wdt:P5008) ?item .\n  }\n  GROUP BY ?wikiproject\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?count)\nLIMIT 1000",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/wikiproject-index_most-used.sparql",
      "title": "wikiproject-index_most-used",
      "description": null
    },
    {
      "query_id": "scholia.wikiproject_author-awards",
      "namespace": "scholia",
      "name": "wikiproject_author-awards",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?count \n?award ?awardLabel (CONCAT(\"/award/\", SUBSTR(STR(?award), 32)) AS ?awardUrl)\n?recipients ?recipientsUrl\nWITH {\n  SELECT (COUNT(?researcher) AS ?count) ?award \n  (GROUP_CONCAT(DISTINCT ?researcher_label; separator=\", \") AS ?recipients) \n  (CONCAT(\"../authors/\", GROUP_CONCAT(DISTINCT SUBSTR(STR(?researcher), 32); separator=\",\")) AS ?recipientsUrl)\n  WHERE {\n    { \n      SELECT DISTINCT ?researcher ?award WHERE {\n        hint:Query hint:optimizer \"None\" .\n        { ?work wdt:P6104 target: .}\n        union \n        { ?work wdt:P5008 target: .}\n        ?work wdt:P50 ?researcher .\n        ?researcher wdt:P166 ?award .\n      } \n      LIMIT 100\n    }\n    ?researcher rdfs:label ?researcher_label . FILTER (LANG(?researcher_label) = 'en')\n  }\n  GROUP BY ?award \n} AS %result\nWHERE {\n  INCLUDE %result\n    ?award rdfs:label ?awardLabel . FILTER (LANG(?awardLabel) = 'en')\n}\nGROUP BY ?count ?award ?awardLabel ?recipients ?recipientsUrl\nORDER BY DESC(?count)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/wikiproject_author-awards.sparql",
      "title": "wikiproject_author-awards",
      "description": null
    },
    {
      "query_id": "scholia.wikiproject_authors",
      "namespace": "scholia",
      "name": "wikiproject_authors",
      "sparql": "#defaultView:Table\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?count\n  ?author ?authorLabel ?authorDescription (CONCAT(\"/author/\", SUBSTR(STR(?author), 32)) AS ?authorUrl)\n  (COALESCE(?orcid_, CONCAT(\"orcid-search/search/?searchQuery=\", ?authorLabel)) AS ?orcid) \nWITH {\n  SELECT\n    ?author\n    (count(?work) as ?count)\n  WHERE {\n    { ?work wdt:P6104 target: .}\n      union \n    { ?work wdt:P5008 target: .}\n    ?work wdt:P50 ?author .\n  }\n  GROUP BY ?author\n  ORDER BY DESC(?count)\n  LIMIT 200\n} AS %result\nWHERE {\n  INCLUDE %result\n          \n  # Include optional ORCID iD\n  OPTIONAL { ?author wdt:P496 ?orcid_ . }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . } \n}\nORDER BY DESC(?count)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/wikiproject_authors.sparql",
      "title": "wikiproject_authors",
      "description": null
    },
    {
      "query_id": "scholia.wikiproject_co-occurring-wikiprojects",
      "namespace": "scholia",
      "name": "wikiproject_co-occurring-wikiprojects",
      "sparql": "#defaultView:Table\r\n\r\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\r\n\r\nSELECT ?count\r\n       ?wikiproject ?wikiprojectLabel (CONCAT(\"/wikiproject/\", SUBSTR(STR(?wikiproject), 32)) AS ?wikiprojectUrl)\r\n       ?example_entity ?example_entityLabel (CONCAT(\"/\", SUBSTR(STR(?example_entity), 32)) AS ?example_entityUrl)\r\nWITH {\r\n  SELECT (COUNT(?work) AS ?count) ?wikiproject (SAMPLE(?work) AS ?example_entity) WHERE {\r\n    # Find works for the specific queried wikiproject\r\n\t  VALUES ?p { wdt:P6104 wdt:P5008 }\r\n\t  SERVICE bd:sample { ?work ?p target: . bd:serviceParam bd:sample.limit 100000 }\r\n    \r\n    # Find co-occuring wikiprojects\r\n    ?work ?p ?wikiproject .\r\n    \r\n    # Avoid listing the queried wikiproject\r\n      FILTER (target: != ?wikiproject)\r\n  }\r\n  GROUP BY ?wikiproject\r\n} AS %result\r\nWHERE {\r\n  # Label the results\r\n  INCLUDE %result\r\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\r\n}\r\nORDER BY DESC(?count)\r\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/wikiproject_co-occurring-wikiprojects.sparql",
      "title": "wikiproject_co-occurring-wikiprojects",
      "description": null
    },
    {
      "query_id": "scholia.wikiproject_context",
      "namespace": "scholia",
      "name": "wikiproject_context",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n#defaultView:Graph\nSELECT ?node ?nodeLabel ?nodeImage ?childNode ?childNodeLabel ?childNodeImage ?rgb \nWITH {\n  SELECT DISTINCT ?property WHERE {\n      ?property a wikibase:Property;\n                wdt:P31 wd:Q18610173 ;\n                wdt:P31 wd:Q26940804 . \n    }\n} AS %properties\nWITH {\n  SELECT DISTINCT ?node ?childNode WHERE {\n      BIND(target: AS ?node)\n      ?node ?p ?i.\n      ?childNode ?x ?p.\n      ?childNode rdf:type wikibase:Property.\n      FILTER(STRSTARTS(STR(?i), \"http://www.wikidata.org/entity/Q\"))\n      FILTER(STRSTARTS(STR(?childNode), \"http://www.wikidata.org/entity/P\"))\n    }\n  LIMIT 5000\n} AS %nodes\nWITH {\n  SELECT DISTINCT ?childNode ?node ?rgb WHERE {\n      BIND(\"EFFBD8\" AS ?rgb)\n      target: ?p ?childNode.\n      ?node ?x ?p.\n      ?node rdf:type wikibase:Property.\n      FILTER(STRSTARTS(STR(?childNode), \"http://www.wikidata.org/entity/Q\"))\n    }\n  LIMIT 5000\n} AS %childNodes\nWHERE {\n  {\n    INCLUDE %nodes\n  }\n  UNION\n  {\n    INCLUDE %childNodes\n  }\n\n  OPTIONAL { \n    INCLUDE %properties\n    ?property wikibase:directClaim ?nodeclaim.\n    ?node ?nodeclaim ?nodeImage. \n  }\n\n  OPTIONAL { \n    INCLUDE %properties\n    ?property wikibase:directClaim ?childNodeclaim.\n    ?childNode ?childNodeclaim ?childNodeImage. \n  }\n  \n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }        \n}\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/wikiproject_context.sparql",
      "title": "wikiproject_context",
      "description": null
    },
    {
      "query_id": "scholia.wikiproject_earliest-published-works",
      "namespace": "scholia",
      "name": "wikiproject_earliest-published-works",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?date ?work ?workLabel (CONCAT(\"/work/\", SUBSTR(STR(?work), 32)) AS ?workUrl)\n?topicsUrl ?topics\nWITH {\n  SELECT DISTINCT ?work WHERE {\n    { ?work wdt:P6104 target: .}\n      union \n      { ?work wdt:P5008 target: .}\n  }\n} AS %works\nWITH {\n  SELECT (MAX(?dates) as ?datetime) ?work (GROUP_CONCAT(DISTINCT ?topic_label; separator=\" // \") AS ?topics) \n                                    (CONCAT(\"../topics/\", GROUP_CONCAT(DISTINCT SUBSTR(STR(?topic), 32); separator=\",\")) AS ?topicsUrl) \n                                    WHERE {\n    INCLUDE %works\n    ?work wdt:P921 ?topic . \n    ?work wdt:P577 ?dates . \n\tFILTER (!isBLANK(?dates)) .\n    ?topic rdfs:label ?topic_label .  FILTER (lang(?topic_label) = 'en')\n  }\n  GROUP BY ?work\n} AS %result\nWHERE {\n  INCLUDE %result\n\n  # There is a problem with BC dates\n  # BIND(xsd:date(?datetime) AS ?date)\n  BIND(REPLACE(STR(?datetime), 'T.*', '') AS ?date)\n    \n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}\nGROUP BY ?date ?work ?workLabel ?topicsUrl ?topics\nORDER BY ASC(?date)\nLIMIT 500\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/wikiproject_earliest-published-works.sparql",
      "title": "wikiproject_earliest-published-works",
      "description": null
    },
    {
      "query_id": "scholia.wikiproject_focus",
      "namespace": "scholia",
      "name": "wikiproject_focus",
      "sparql": "SELECT ?type ?typeLabel ?count WITH {\r\n    SELECT DISTINCT ?type (COUNT(?item) AS ?count) WHERE {\r\n    ?item wdt:P5008 wd:{{ q }};\r\n            (wdt:P31|wdt:P279) ?type.\r\n    }\r\n    GROUP BY ?type ?count\r\n    ORDER BY DESC (?count)\r\n} AS %result\r\nWHERE {\r\n  INCLUDE %result\r\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,da,de,es,fr,it,sv,uk,zh\". }\r\n}\r\nORDER BY DESC (?count)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/wikiproject_focus.sparql",
      "title": "wikiproject_focus",
      "description": null
    },
    {
      "query_id": "scholia.wikiproject_maintained",
      "namespace": "scholia",
      "name": "wikiproject_maintained",
      "sparql": "SELECT ?type ?typeLabel ?count WITH {\r\n    SELECT DISTINCT ?type (COUNT(?item) AS ?count) WHERE {\r\n    ?item wdt:P6104 wd:{{ q }};\r\n            (wdt:P31|wdt:P279) ?type.\r\n    }\r\n    GROUP BY ?type ?count\r\n    ORDER BY DESC (?count)\r\n} AS %result\r\nWHERE {\r\n  INCLUDE %result\r\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,da,de,es,fr,it,sv,uk,zh\". }\r\n}\r\nORDER BY DESC (?count)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/wikiproject_maintained.sparql",
      "title": "wikiproject_maintained",
      "description": null
    },
    {
      "query_id": "scholia.wikiproject_organization-map",
      "namespace": "scholia",
      "name": "wikiproject_organization-map",
      "sparql": "#defaultView:Map\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?organization ?organizationLabel ?geo ?count ?layer\nWITH {\n  SELECT DISTINCT ?work WHERE {\n  # Works on the topic\n    { ?work wdt:P6104 target: .}\n      union \n      { ?work wdt:P5008 target: .}\n      ?work wdt:P50 [].\n  }\n  LIMIT 20000\n} AS %works\nWITH {\n  SELECT DISTINCT ?organization ?geo (COUNT(DISTINCT ?work) AS ?count) WHERE {\n    INCLUDE %works\n    # Authors who have published works on the topic\n    ?work wdt:P50 ?author . \n    ?author ( wdt:P108 | wdt:P463 | wdt:P1416 ) / wdt:P361* ?organization . \n    # Use the headquarters location by default but keep the coordinate location as a fallback\n    OPTIONAL{?organization p:P159/pq:P625 ?hq_geo}\n    OPTIONAL{?organization wdt:P625 ?coord_geo}\n    BIND(IF(BOUND(?hq_geo), ?hq_geo, ?coord_geo) AS ?geo) .\n    FILTER(BOUND(?geo)) .\n  }\n  GROUP BY ?organization ?geo\n  ORDER BY DESC (?count)\n  LIMIT 2000\n} AS %organizations\nWHERE {\n  INCLUDE %organizations\n  BIND(IF( (?count < 1), \"No results\", IF((?count < 2), \"1 result\", IF((?count < 11), \"1 < results \u2264 10\", IF((?count < 101), \"10 < results \u2264 100\", IF((?count < 1001), \"100 < results \u2264 1000\", IF((?count < 10001), \"1000 < results \u2264 10000\", \"10000 or more results\") ) ) ) )) AS ?layer )\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }        \n }\nORDER BY DESC (?count)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/wikiproject_organization-map.sparql",
      "title": "wikiproject_organization-map",
      "description": null
    },
    {
      "query_id": "scholia.wikiproject_publications-per-year",
      "namespace": "scholia",
      "name": "wikiproject_publications-per-year",
      "sparql": "#defaultView:BarChart\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  (STR(?year_) AS ?year)\n  (COUNT(?work) AS ?number_of_publications)\n\n  # Work type used to color the bar chart\n  ?type\nWITH {\n  # Find works with the topic. Also report the year\n  SELECT\n    ?work (MIN(?years) AS ?year_) (1 AS ?dummy) (SAMPLE(?article_type_) AS ?article_type)\n  WHERE {\n    { ?work wdt:P6104 target: .}\n      union \n    { ?work wdt:P5008 target: .}\n    ?work wdt:P577 ?dates .\n    BIND(YEAR(?dates) AS ?years) .\n\n    ?work wdt:P31 ?article_type_ .\n  }\n  GROUP BY ?work \n} AS %works\nWITH {\n  SELECT ?year_ WHERE {\n    # default values = 0\n    ?year_item wdt:P31 wd:Q577 . \n    ?year_item wdt:P585 ?date .\n    BIND(YEAR(?date) AS ?year_)\n  }\n} AS %default_counts\nWITH {\n  # Find earliest publication year\n  SELECT (MIN(?year_) AS ?earliest_year) WHERE {\n    INCLUDE %works\n  }\n  GROUP BY ?dummy\n} AS %earliest  \nWHERE {\n  {\n    INCLUDE %works\n    ?article_type rdfs:label ?type . FILTER (LANG(?type) = \"en\")\n  }\n  UNION\n  {\n    INCLUDE %default_counts\n    BIND(\"_\" AS ?type)\n  }\n  INCLUDE %earliest\n  BIND(YEAR(NOW()) AS ?this_year)\n  FILTER (?year_ >= ?earliest_year && ?year_ <= ?this_year && ?year_ >= YEAR(\"1900-01-01\"^^xsd:dateTime))\n}\nGROUP BY ?year_ ?type\nORDER BY ?year\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/wikiproject_publications-per-year.sparql",
      "title": "wikiproject_publications-per-year",
      "description": null
    },
    {
      "query_id": "scholia.wikiproject_recently-published-works",
      "namespace": "scholia",
      "name": "wikiproject_recently-published-works",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?date ?work ?workLabel (CONCAT(\"/work/\", SUBSTR(STR(?work), 32)) AS ?workUrl)\n  ?topicsUrl ?topics \nWITH {\n  SELECT DISTINCT ?work WHERE {\n    { ?work wdt:P6104 target: .}\n      union \n      { ?work wdt:P5008 target: .}\n  }\n} AS %works\nWITH {\n  SELECT (MAX(?dates) as ?datetime) ?work (GROUP_CONCAT(DISTINCT ?topic_label; separator=\" // \") AS ?topics) \n                                    (CONCAT(\"../topics/\", GROUP_CONCAT(DISTINCT SUBSTR(STR(?topic), 32); separator=\",\")) AS ?topicsUrl) \n  WHERE {\n    INCLUDE %works\n    ?work wdt:P921 ?topic . \n    OPTIONAL { ?work wdt:P577 ?dates . }\n    ?topic rdfs:label ?topic_label .  FILTER (lang(?topic_label) = 'en')\n  }\n  GROUP BY ?work\n} AS %result\nWHERE {\n  INCLUDE %result\n\n  # There is a problem with BC dates\n  # BIND(xsd:date(?datetime) AS ?date)\n  BIND(REPLACE(STR(?datetime), 'T.*', '') AS ?date)\n    \n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?date ?work ?workLabel ?topicsUrl ?topics\nORDER BY DESC(?date)\nLIMIT 500\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/wikiproject_recently-published-works.sparql",
      "title": "wikiproject_recently-published-works",
      "description": null
    },
    {
      "query_id": "scholia.wikiproject_topics",
      "namespace": "scholia",
      "name": "wikiproject_topics",
      "sparql": "#defaultView:Table\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?count (CONCAT(\"/topics/{{ q }},\", SUBSTR(STR(?topic), 32)) AS ?countUrl)\n       ?topic ?topicLabel (CONCAT(\"/topic/\", SUBSTR(STR(?topic), 32)) AS ?topicUrl)\n       ?example_work ?example_workLabel (CONCAT(\"/work/\", SUBSTR(STR(?example_work), 32)) AS ?example_workUrl)\nWITH {\n  SELECT (COUNT(?work) AS ?count) ?topic (SAMPLE(?work) AS ?example_work) WHERE {\n    # Find works for the specific queried topic\n\t  VALUES ?p { wdt:P6104 wdt:P5008 }\n\t  SERVICE bd:sample { ?work ?p target: . bd:serviceParam bd:sample.limit 10000 }\n    \n    # Find co-occuring topics\n    ?work wdt:P921 ?topic .\n    \n    # Avoid listing the queried topic\n      FILTER (target: != ?topic)\n  }\n  GROUP BY ?topic\n} AS %result\nWHERE {\n  # Label the results\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . } \n}\nORDER BY DESC(?count)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/wikiproject_topics.sparql",
      "title": "wikiproject_topics",
      "description": null
    },
    {
      "query_id": "scholia.wikiproject_venues",
      "namespace": "scholia",
      "name": "wikiproject_venues",
      "sparql": "#defaultView:Table\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?count ?short_name \n?venue ?venueLabel (CONCAT(\"/venue/\", SUBSTR(STR(?venue), 32)) AS ?venueUrl)\nWITH {\n  SELECT (count(?work) as ?count) ?venue (SAMPLE(?short_name_) AS ?short_name) WHERE {\n    { ?work wdt:P6104 target: . }\n    union { ?work wdt:P5008 target: . }\n    ?work wdt:P1433/wdt:P179* ?venue .\n    OPTIONAL { ?venue wdt:P1813 ?short_name_ . }\n  }\n  GROUP BY ?venue\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . } \n}\nORDER BY DESC(?count)\nLIMIT 200\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/wikiproject_venues.sparql",
      "title": "wikiproject_venues",
      "description": null
    },
    {
      "query_id": "scholia.work-cito-intention_incoming",
      "namespace": "scholia",
      "name": "work-cito-intention_incoming",
      "sparql": "SELECT ?citingArticle ?citingArticleLabel \n?intention ?intentionLabel (CONCAT(\"/cito/\", SUBSTR(STR(?intention), 32)) AS ?intentionUrl) WHERE {\n  VALUES ?CITEDARTICLE { wd:{{ q }} }\n  VALUES ?intention { wd:{{ q2 }} }\n  ?citingArticle p:P2860 ?citationStatement .\n  ?citationStatement pq:P3712 ?intention ;\n                     ps:P2860 ?CITEDARTICLE .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/work-cito-intention_incoming.sparql",
      "title": "work-cito-intention_incoming",
      "description": null
    },
    {
      "query_id": "scholia.work-curation_author-resolving",
      "namespace": "scholia",
      "name": "work-curation_author-resolving",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  (COUNT(?work) AS ?works) \n  ?author_name\n  (\"Author Disambiguator \u2197\" AS ?author_disambiguator)\n  (CONCAT(\"https://author-disambiguator.toolforge.org/names_oauth.php?doit=Look+for+author&name=\", \n          ENCODE_FOR_URI(?author_name)) AS ?author_disambiguatorUrl) \nWITH {\n  SELECT DISTINCT ?author WHERE {\n    target: wdt:P50 ?author .\n  }\n  LIMIT 200  \n} AS %authors\nWITH {\n  SELECT DISTINCT ?author_name WHERE {\n    {\n    INCLUDE %authors\n    ?author skos:altLabel | rdfs:label | (^ps:P50 / pq:P1932) ?author_name . }\n    UNION\n    { target: wdt:P2093 ?author_name . } \n  }\n} AS %author_names\nWHERE {\n  INCLUDE %author_names\n  ?work wdt:P2093 ?author_name .\n}\nGROUP BY ?author_name\nORDER BY DESC (?works)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/work-curation_author-resolving.sparql",
      "title": "work-curation_author-resolving",
      "description": null
    },
    {
      "query_id": "scholia.work-curation_missing-orcid",
      "namespace": "scholia",
      "name": "work-curation_missing-orcid",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT DISTINCT\n  ?author ?authorLabel ?authorDescription\n  (CONCAT(\"/author/\", SUBSTR(STR(?author), 32)) AS ?authorUrl)\n\n  (\"ORCID search \u2197\" AS ?orcid_search)\n  (CONCAT(\"https://orcid.org/orcid-search/search/?searchQuery=\", ENCODE_FOR_URI(?authorLabel)) AS ?orcid_searchUrl)\n\nWHERE {\n  target: wdt:P50 ?author .\n  FILTER NOT EXISTS { ?author wdt:P496 ?orcid . }\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/work-curation_missing-orcid.sparql",
      "title": "work-curation_missing-orcid",
      "description": null
    },
    {
      "query_id": "scholia.work-index_recently-retracted-works",
      "namespace": "scholia",
      "name": "work-index_recently-retracted-works",
      "sparql": "SELECT DISTINCT\n  ?retracted_work ?retracted_workLabel (CONCAT(\"/work/\", SUBSTR(STR(?retracted_work), 32)) AS ?retracted_workUrl)\n  ?date\n  ?retraction ?retractionLabel (CONCAT(\"/work/\", SUBSTR(STR(?retraction), 32)) AS ?retractionUrl)\nWITH {\n  # Find retracted papers indicated by instance of retracted paper, \n  # by retraction notice property or by significant event\n  SELECT DISTINCT ?retracted_work WHERE {\n    { ?retracted_work wdt:P31 wd:Q45182324 }\n    UNION\n    { ?retracted_work wdt:P5824 [] }\n    UNION\n    { ?retracted_work wdt:P793 wd:Q45203135 }\n  }\n} AS %retracted_works\nWHERE {\n  INCLUDE %retracted_works\n  OPTIONAL {\n    ?retracted_work wdt:P5824 ?retraction .\n    ?retraction wdt:P577 ?retraction_datetime\n  }\n  OPTIONAL {\n    ?retracted_work p:P793 [ ps:P793 wd:Q45203135 ; pq:P585 ?keyevent_datetime ]\n  }\n  BIND(COALESCE(xsd:date(COALESCE(?retraction_datetime, ?keyevent_datetime)), \"Unknown date\") AS ?date)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nORDER BY DESC(?date)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/work-index_recently-retracted-works.sparql",
      "title": "work-index_recently-retracted-works",
      "description": null
    },
    {
      "query_id": "scholia.work_associated-images",
      "namespace": "scholia",
      "name": "work_associated-images",
      "sparql": "#defaultView:ImageGrid\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT DISTINCT ?image WHERE {\n  {\n    # Images from whatever property value is linked.\n    \n    # Excluded \"different from\" property and take all other properties\n    target: !wdt:P1889 ?item .\n\n    ?item wdt:P18 ?image . \n  }\n}   \n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/work_associated-images.sparql",
      "title": "work_associated-images",
      "description": null
    },
    {
      "query_id": "scholia.work_citation-graph",
      "namespace": "scholia",
      "name": "work_citation-graph",
      "sparql": "#defaultView:Graph\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  ?citing_work ?citing_workLabel ?rgb \n  ?cited_work ?cited_workLabel\nWITH { \n  SELECT (COUNT(*) AS ?count) ?citing_work WHERE {\n    target: (^wdt:P2860 | wdt:P2860) / (^wdt:P2860 | wdt:P2860)? ?citing_work .\n  }\n  GROUP BY ?citing_work\n  ORDER BY DESC(?count)\n  LIMIT 40\n} AS %citing_works\nWITH { \n  SELECT (COUNT(*) AS ?count_) ?cited_work WHERE {\n    target: (^wdt:P2860 | wdt:P2860) / (^wdt:P2860 | wdt:P2860)? ?cited_work .\n  }\n  GROUP BY ?cited_work\n  ORDER BY DESC(?count_)\n  LIMIT 40\n} AS %cited_works\nWITH {\n  SELECT (MAX(?count) AS ?max_count) WHERE {\n    INCLUDE %citing_works\n    BIND(1 AS ?dummy)\n  } \n  GROUP BY ?dummy\n} AS %max_count\nWHERE {\n  INCLUDE %citing_works\n  INCLUDE %max_count\n  INCLUDE %cited_works\n  \n  ?citing_work wdt:P2860 ?cited_work .\n  \n  BIND(STR(xsd:integer(99 * (1 - ?count / ?max_count))) AS ?grey)\n  BIND(CONCAT(SUBSTR(\"0\", 1, 2 - STRLEN(?grey)), ?grey) AS ?padded_grey)\n  BIND(CONCAT(?padded_grey, ?padded_grey, ?padded_grey) AS ?rgb)\n\n  { \n      ?citing_work (p:P50) ?citing_author_statement . \n      ?citing_author_statement pq:P1545 \"1\" .\n      ?citing_author_statement ps:P50 ?citing_author .\n      ?citing_author rdfs:label ?citing_author_name .\n      filter(lang(?citing_author_name) = 'en')\n    }\n    union \n  \t{ \n      ?citing_work (p:P2093) ?citing_author_statement . \n      ?citing_author_statement pq:P1545 \"1\" .\n      ?citing_author_statement ps:P2093 ?citing_author_name .\n    }\n  \n    { \n      ?cited_work (p:P50) ?cited_author_statement . \n      ?cited_author_statement pq:P1545 \"1\" .\n      ?cited_author_statement ps:P50 ?cited_author .\n      ?cited_author rdfs:label ?cited_author_name .\n      filter(lang(?cited_author_name) = 'en')\n    }\n    union \n  \t{ \n      ?cited_work (p:P2093) ?cited_author_statement . \n      ?cited_author_statement pq:P1545 \"1\" .\n      ?cited_author_statement ps:P2093 ?cited_author_name .\n    }\n\n    ?citing_work wdt:P577 ?citing_date . \n    ?cited_work wdt:P577 ?cited_date . \n    bind(year(?citing_date) as ?citing_year)\n    bind(year(?cited_date) as ?cited_year)\n    bind(concat(?citing_author_name, \", \", str(?citing_year)) as ?citing_workLabel)\n    bind(concat(?cited_author_name, \", \", str(?cited_year)) as ?cited_workLabel)\n}\nORDER BY DESC(?count)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/work_citation-graph.sparql",
      "title": "work_citation-graph",
      "description": null
    },
    {
      "query_id": "scholia.work_citations-per-year",
      "namespace": "scholia",
      "name": "work_citations-per-year",
      "sparql": "#defaultView:BarChart\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT\n  (STR(?year_) AS ?year)\n  (SUM(?count_) AS ?count)\n  ?kind\nWHERE {\n  {\n    VALUES ?year_ { 2004 2005 2006 2007 2008 2009 2010 2011 2012 2013\n                    2014 2015 2016 2017 2018 2019 2020 2021 2022 2023 }\n    BIND(0 AS ?count_)\n    BIND(\"_\" AS ?kind)\n  }\n  UNION \n  {\n    SELECT\n      ?year_\n      (COUNT(DISTINCT ?citing_work) AS ?count_)\n      ?kind\n    WHERE {\n      ?citing_work wdt:P2860 target: .\n  \n      # Detect self-citations\n      BIND(IF(EXISTS { target: wdt:P50 ?selfauthor . ?citing_work  wdt:P50 ?selfauthor } ,\n        \"detected incoming self-citations\",\n        \"citations from others or non-detected self-citations\") AS ?kind)\n\n      # Year of citation\n      ?citing_work wdt:P577 ?date .\n      BIND(YEAR(?date) AS ?year_)\n    }\n    GROUP BY ?year_ ?kind\n  }\n  UNION \n  {\n    SELECT\n      ?year_\n      (COUNT(DISTINCT ?cited_work) AS ?count_)\n      ?kind\n    WHERE {\n      target: wdt:P2860 ?cited_work .\n  \n      # Detect self-citations\n      BIND(IF(EXISTS { ?cited_work wdt:P50 ?selfauthor . target: wdt:P50 ?selfauthor },\n        \"detected outgoing self-citations\",\n        \"outgoing citations to others or non-detected self-citations\") AS ?kind)\n\n      # Year of citation\n      ?cited_work wdt:P577 ?date .\n      BIND(YEAR(?date) AS ?year_)\n    }\n    GROUP BY ?year_ ?kind\n  }\n}\nGROUP BY ?year_ ?kind\nORDER BY DESC(?year_)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/work_citations-per-year.sparql",
      "title": "work_citations-per-year",
      "description": null
    },
    {
      "query_id": "scholia.work_citations",
      "namespace": "scholia",
      "name": "work_citations",
      "sparql": "#defaultView:Table\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n# List of works that is cited by the specified work\nSELECT ?citations ?publication_date ?citing_work ?citing_workLabel \nWITH {\n  SELECT (MIN(?date) AS ?publication_date) (COUNT(?citing_citing_work) AS ?citations) ?citing_work \n  WHERE {\n    # Find works that cite the queried work\n    ?citing_work wdt:P2860 target: .\n\n    OPTIONAL {\n      ?citing_work wdt:P577 ?datetime .\n      \n      # Simplify the datetime to one with day, month and year only\n      BIND(xsd:date(?datetime) AS ?date)\n    }\n    OPTIONAL { ?citing_citing_work wdt:P2860 ?citing_work }\n  }\n  GROUP BY ?citing_work\n  \n  # Limit the number of results to avoid downloading too much data\n  ORDER BY DESC(?citations) DESC(?date) \n  LIMIT 1000\n} AS %result\nWHERE {\n  # Label the result\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,it,jp,nl,no,ru,sv,zh\" . } \n} \nORDER BY DESC(?citations) DESC(?publication_date) ",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/work_citations.sparql",
      "title": "work_citations",
      "description": null
    },
    {
      "query_id": "scholia.work_cited-work-authors",
      "namespace": "scholia",
      "name": "work_cited-work-authors",
      "sparql": "#defaultView:Table\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n# List of authors with works that are cited by the specified work\nSELECT\n  ?cited_works\n\n  ?author ?authorLabel ?authorDescription\n  (CONCAT(\"/author/\", SUBSTR(STR(?author), 32)) AS ?authorUrl)\n\n  ?cited_work_example ?cited_work_exampleLabel\n   (CONCAT(\"/work/\", SUBSTR(STR(?cited_work_example), 32)) AS ?cited_work_exampleUrl)\nWITH {\n  SELECT\n    (COUNT(?cited_work) AS ?cited_works)\n    ?author\n    (SAMPLE(?cited_work) AS ?cited_work_example)\n  WHERE {\n    # Find works that are cited by the queried work\n    target: wdt:P2860 ?cited_work .\n    ?cited_work wdt:P50 ?author .\n  }\n  GROUP BY ?author\n  # Limit the number of results to avoid downloading too much data\n  ORDER BY DESC(?cited_works)\n  LIMIT 1000\n} AS %result\nWHERE {\n  # Label the result\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}\nORDER BY DESC(?cited_works)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/work_cited-work-authors.sparql",
      "title": "work_cited-work-authors",
      "description": null
    },
    {
      "query_id": "scholia.work_cited-works",
      "namespace": "scholia",
      "name": "work_cited-works",
      "sparql": "#defaultView:Table\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n# List of works that is cited by the specified work\nSELECT ?citations ?publication_date ?cited_work ?cited_workLabel \nWITH {\n  SELECT (MIN(?date) AS ?publication_date) (COUNT(DISTINCT ?citing_cited_work) AS ?citations) ?cited_work \n  WHERE {\n    target: wdt:P2860 ?cited_work .\n    OPTIONAL {\n      ?cited_work wdt:P577 ?datetime .\n      BIND(xsd:date(?datetime) AS ?date)\n    }\n    OPTIONAL { ?citing_cited_work wdt:P2860 ?cited_work }\n  }\n  GROUP BY ?cited_work\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,it,jp,nl,no,ru,sv,zh\" . } \n} \nORDER BY DESC(?citations) DESC(?date)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/work_cited-works.sparql",
      "title": "work_cited-works",
      "description": null
    },
    {
      "query_id": "scholia.work_cito-incoming-chart",
      "namespace": "scholia",
      "name": "work_cito-incoming-chart",
      "sparql": "#defaultView:BubbleChart\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?intention ?intentionLabel (COUNT(DISTINCT ?citingArticle) AS ?count) WHERE {\n  VALUES ?CITEDARTICLE { target: }\n  ?citingArticle p:P2860 ?citationStatement .\n  ?citationStatement pq:P3712 ?intention ;\n                     ps:P2860 ?CITEDARTICLE .\n  ?intention wdt:P31 wd:Q96471816 .\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n} GROUP BY ?intention ?intentionLabel\n  ORDER BY DESC(?count)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/work_cito-incoming-chart.sparql",
      "title": "work_cito-incoming-chart",
      "description": null
    },
    {
      "query_id": "scholia.work_cito-incoming",
      "namespace": "scholia",
      "name": "work_cito-incoming",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?intention ?intentionLabel (CONCAT(\"/cito/\", SUBSTR(STR(?intention), 32)) AS ?intentionUrl)  \n?count ?example_work_for_intention ?example_work_for_intentionLabel \n\nWITH {\n  SELECT ?intention (COUNT(DISTINCT ?citingArticle) AS ?count) (SAMPLE(?citingArticle) AS ?example_work_for_intention) {\n    VALUES ?CITEDARTICLE { target: }\n    ?citingArticle p:P2860 ?citationStatement .\n    ?citationStatement pq:P3712 ?intention ;\n                       ps:P2860 ?CITEDARTICLE .\n    ?intention wdt:P31 wd:Q96471816 .\n  }\n  GROUP BY ?intention\n\n} AS %intentions\nWHERE {\n  INCLUDE %intentions\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }\n}\nGROUP BY ?intention ?intentionLabel ?count ?example_work_for_intention ?example_work_for_intentionLabel\nORDER BY DESC(?count)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/work_cito-incoming.sparql",
      "title": "work_cito-incoming",
      "description": null
    },
    {
      "query_id": "scholia.work_data",
      "namespace": "scholia",
      "name": "work_data",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT DISTINCT ?description ?value ?valueUrl\nWHERE {\n  BIND(target: AS ?work)\n  {\n    BIND(1 AS ?order)\n    BIND(\"Title\" AS ?description)\n    ?work wdt:P1476 ?value .\n  }\n  UNION\n  {\n    BIND(1.5 AS ?order)\n    BIND(\"Type\" AS ?description)\n    ?work wdt:P31 ?iri .\n    BIND(SUBSTR(STR(?iri), 32) AS ?q) \n    ?iri rdfs:label ?value_string . \n    FILTER (LANG(?value_string) = 'en')\n    BIND(COALESCE(?value_string, ?q) AS ?value)\n  }\n  UNION\n  {\n    SELECT\n      (2 AS ?order)\n      (\"Authors\" AS ?description)\n      (GROUP_CONCAT(?value_; separator=\", \") AS ?value)\n      (CONCAT(\"../authors/\", GROUP_CONCAT(?q; separator=\",\")) AS ?valueUrl)\n    {\n      BIND(1 AS ?dummy)\n      target: wdt:P50 ?iri .\n      BIND(SUBSTR(STR(?iri), 32) AS ?q) \n      ?iri rdfs:label ?value_string . \n      FILTER (LANG(?value_string) = 'en')\n      BIND(COALESCE(?value_string, ?q) AS ?value_)\n    }\n    GROUP BY ?dummy\n  }\n  UNION\n  {\n    SELECT\n      (3 AS ?order)\n      (\"Editors\" AS ?description)\n      (GROUP_CONCAT(?value_; separator=\", \") AS ?value)\n      (CONCAT(\"../authors/\", GROUP_CONCAT(?q; separator=\",\")) AS ?valueUrl)\n    {\n      BIND(1 AS ?dummy)\n      target: wdt:P98 ?iri .\n      BIND(SUBSTR(STR(?iri), 32) AS ?q) \n      ?iri rdfs:label ?value_string . \n      FILTER (LANG(?value_string) = 'en')\n      BIND(COALESCE(?value_string, ?q) AS ?value_)\n    }\n    GROUP BY ?dummy\n  }\n  UNION\n  {\n    BIND(2.5 AS ?order)\n    BIND(\"Language\" AS ?description)\n    ?work wdt:P407 ?iri .\n    BIND(SUBSTR(STR(?iri), 32) AS ?q) \n    ?iri rdfs:label ?value_string .\n    FILTER (LANG(?value_string) = 'en')\n    BIND(STR(?value_string) AS ?value)\n    BIND(CONCAT(\"../language/\", ?q) AS ?valueUrl)\n  }\n  UNION\n  {\n    SELECT\n      (3 AS ?order)\n      (\"Reviewers\" AS ?description)\n      (GROUP_CONCAT(?value_; separator=\", \") AS ?value)\n      (CONCAT(\"../authors/\", GROUP_CONCAT(?q; separator=\",\")) AS ?valueUrl)\n    {\n      BIND(1 AS ?dummy)\n      target: wdt:P4032 ?iri .\n      BIND(SUBSTR(STR(?iri), 32) AS ?q) \n      ?iri rdfs:label ?value_string . \n      FILTER (LANG(?value_string) = 'en')\n      BIND(COALESCE(?value_string, ?q) AS ?value_)\n    }\n    GROUP BY ?dummy\n  }\n  UNION\n  {\n    BIND(4 AS ?order)\n    BIND(\"Published in\" AS ?description)\n    ?work wdt:P1433 ?iri .\n    BIND(SUBSTR(STR(?iri), 32) AS ?q) \n    ?iri rdfs:label ?value_string . \n    FILTER (LANG(?value_string) = 'en')\n    BIND(COALESCE(?value_string, ?q) AS ?value)\n    BIND(CONCAT(\"../venue/\", ?q) AS ?valueUrl)\n  }\n  UNION\n  {\n    BIND(4 AS ?order)\n    BIND(\"Series\" AS ?description)\n    ?work wdt:P179 ?iri .\n    BIND(SUBSTR(STR(?iri), 32) AS ?q) \n    ?iri rdfs:label ?value_string . \n    FILTER (LANG(?value_string) = 'en')\n    BIND(COALESCE(?value_string, ?q) AS ?value)\n    BIND(CONCAT(\"../series/\", ?q) AS ?valueUrl)\n  }\n  UNION\n  {\n    BIND(6 AS ?order)\n    BIND(\"Publication date\" AS ?description)\n    ?work p:P577 / psv:P577 ?publication_date_value .\n    ?publication_date_value wikibase:timePrecision ?time_precision ;\n                            wikibase:timeValue ?publication_date .\n    BIND(IF(?time_precision = 9, YEAR(?publication_date), xsd:date(?publication_date)) AS ?value)\n  }\n  UNION\n  {\n    BIND(7 AS ?order)\n    BIND(\"Publisher\" AS ?description)\n    ?work wdt:P123 ?iri .\n    BIND(SUBSTR(STR(?iri), 32) AS ?q) \n    ?iri rdfs:label ?value_string . \n    FILTER (LANG(?value_string) = 'en')\n    BIND(COALESCE(?value_string, ?q) AS ?value)\n    BIND(CONCAT(\"../publisher/\", ?q) AS ?valueUrl)\n  }\n  UNION\n  {\n    SELECT\n      (8 AS ?order)\n      (\"Topics\" AS ?description)\n      (GROUP_CONCAT(?value_; separator=\", \") AS ?value)\n      (CONCAT(\"../topics/\", GROUP_CONCAT(?q; separator=\",\")) AS ?valueUrl)\n    {\n      BIND(1 AS ?dummy)\n      target: wdt:P921 ?iri .\n      BIND(SUBSTR(STR(?iri), 32) AS ?q) \n      ?iri rdfs:label ?value_string . \n      FILTER (LANG(?value_string) = 'en')\n      BIND(COALESCE(?value_string, ?q) AS ?value_)\n    }\n    GROUP BY ?dummy\n  }\n  UNION\n  {\n    SELECT\n      (9 AS ?order)\n      (\"Uses\" AS ?description)\n      (GROUP_CONCAT(?value_; separator=\", \") AS ?value)\n      (CONCAT(\"../uses/\", GROUP_CONCAT(?q; separator=\",\")) AS ?valueUrl)\n    {\n      BIND(1 AS ?dummy)\n      target: wdt:P4510 ?iri .\n      BIND(SUBSTR(STR(?iri), 32) AS ?q) \n      ?iri rdfs:label ?value_string . \n      FILTER (LANG(?value_string) = 'en')\n      BIND(COALESCE(?value_string, ?q) AS ?value_)\n    }\n    GROUP BY ?dummy\n  }\n  UNION\n  {\n    BIND(10 AS ?order)\n    BIND(\"DOI\" AS ?description)\n    ?work wdt:P356 ?valueUrl_ .\n    BIND(CONCAT(\"https://doi.org/\", ENCODE_FOR_URI(?valueUrl_)) AS ?valueUrl)\n    BIND(CONCAT(?valueUrl_, \" \u2197\") AS ?value)\n  }\n  UNION\n  {\n    BIND(11 AS ?order)\n    BIND(\"Homepage\" AS ?description)\n    ?work wdt:P856 ?valueUrl .\n    BIND(STR(?valueUrl) AS ?value)\n  }\n  UNION\n  {\n    BIND(12 AS ?order)\n    BIND(\"Full text\" AS ?description)\n    ?work wdt:P953 ?valueUrl .\n    BIND(CONCAT(STR(?valueUrl), \" \u2197\") AS ?value)\n  }\n  UNION\n  {\n    BIND(13 AS ?order)\n    BIND(\"\ud83d\uded1 Retracted\" AS ?description)\n    { ?work wdt:P31 wd:Q45182324 . }\n    UNION\n    { ?work wdt:P793 wd:Q7316896 . }\n  }\n  UNION\n  {\n    BIND(14 AS ?order)\n    BIND(\"\ud83d\uded1 Retracted by\" AS ?description)\n    ?work wdt:P5824 ?iri .\n    BIND(SUBSTR(STR(?iri), 32) AS ?q) \n    ?iri rdfs:label ?value_string . \n    FILTER (LANG(?value_string) = 'en')\n    BIND(COALESCE(?value_string, ?q) AS ?value)\n    BIND(CONCAT(\"../work/\", ?q) AS ?valueUrl)\n  }\n  UNION\n  {\n    BIND(15 AS ?order)\n    BIND(\"\u26a0\ufe0f Preprint\" AS ?description)\n    { ?work p:P31 ?statement . ?statement ps:P31 wd:Q580922 . MINUS { ?statement pq:P642 [] } }\n  }\n  UNION\n  {\n    SELECT (COUNT(DISTINCT ?citationStatement) AS ?value) ?order ?description ?valueUrl WHERE {\n      VALUES ?work { wd:{{ q }} }\n      VALUES ?intention { wd:Q96472102 wd:Q101149476 }\n      ?work ^ps:P2860 ?citationStatement . ?citationStatement pq:P3712 ?intention .\n      BIND(20 AS ?order)\n      BIND(\"Data or method used by\" AS ?description)\n      BIND(\"./{{ q }}/cito\" AS ?valueUrl)\n    } GROUP BY ?order ?description ?valueUrl\n  }\n  UNION\n  {\n    SELECT (COUNT(DISTINCT ?citationStatement) AS ?value) ?order ?description ?valueUrl WHERE {\n      VALUES ?work { wd:{{ q }} }\n      VALUES ?intention { wd:Q107687829 wd:Q107710355 }\n      ?work ^ps:P2860 ?citationStatement . ?citationStatement pq:P3712 ?intention .\n      BIND(21 AS ?order)\n      BIND(\"Disagreed with by\" AS ?description)\n      BIND(\"./{{ q }}/cito\" AS ?valueUrl)\n    } GROUP BY ?order ?description ?valueUrl\n  }\n  UNION\n  {\n    BIND(30 AS ?order)\n    BIND(\"\u26a0\ufe0f Preprint of\" AS ?description)\n    { ?work p:P31 ?statement .\n      ?statement pq:P642 ?pub ; ps:P31 wd:Q580922 .\n    BIND(SUBSTR(STR(?pub), 32) AS ?pubqid) \n    ?pub rdfs:label ?value_string . \n    FILTER (LANG(?value_string) = 'en')\n    BIND(COALESCE(?value_string, ?pubqid) AS ?value)\n    BIND(CONCAT(\"../work/\", ?pubqid) AS ?valueUrl)}\n  }\n  UNION\n  {\n    BIND(31 AS ?order)\n    BIND(\"\u26a0\ufe0f Cites retracted article\" AS ?description)\n    { ?work wdt:P2860 ?retracted . ?retracted wdt:P31 wd:Q45182324 . }\n    UNION\n    { ?work wdt:P2860 ?retracted . ?retracted wdt:P793 wd:Q7316896 . }\n    UNION\n    { ?work wdt:P2860 ?retracted . ?retracted wdt:P5824 [] . }\n    ?retracted rdfs:label ?value_string . \n    FILTER (LANG(?value_string) = 'en')\n    BIND(SUBSTR(STR(?retracted), 32) AS ?q) \n    BIND(COALESCE(?value_string, ?q) AS ?value)\n    BIND(CONCAT(\"../work/\", ?q) AS ?valueUrl)\n  }\n  UNION\n  {\n    BIND(32 AS ?order)\n    BIND(\"Preprint\" AS ?description)\n    { ?preprint p:P31 ?statement .\n      ?statement pq:P642 ?work ; ps:P31 wd:Q580922 .\n    BIND(SUBSTR(STR(?preprint), 32) AS ?pubqid)\n    ?preprint rdfs:label ?value_string .\n    FILTER (LANG(?value_string) = 'en')\n    BIND(COALESCE(?value_string, ?pubqid) AS ?value)\n    BIND(CONCAT(\"../work/\", ?pubqid) AS ?valueUrl)}\n  }\n  UNION\n  {\n    BIND(33 AS ?order)\n    BIND(\"\u26a0\ufe0f Erratum of\" AS ?description)\n    { ?work p:P31 ?statement .\n      ?statement pq:P642 ?pub ; ps:P31 wd:Q1348305 .\n    BIND(SUBSTR(STR(?pub), 32) AS ?pubqid)\n    ?pub rdfs:label ?value_string .\n    FILTER (LANG(?value_string) = 'en')\n    BIND(COALESCE(?value_string, ?pubqid) AS ?value)\n    BIND(CONCAT(\"../work/\", ?pubqid) AS ?valueUrl)}\n  }\n  UNION\n  {\n    BIND(34 AS ?order)\n    BIND(\"\u26a0\ufe0f Retracts\" AS ?description)\n    {\n    { ?work p:P31 ?statement .\n      ?statement pq:P642 ?pub ; ps:P31 wd:Q7316896 . }\n    UNION\n    { ?work ^wdt:P5824 ?pub . }\n    BIND(SUBSTR(STR(?pub), 32) AS ?pubqid)\n    ?pub rdfs:label ?value_string .\n    FILTER (LANG(?value_string) = 'en')\n    BIND(COALESCE(?value_string, ?pubqid) AS ?value)\n    BIND(CONCAT(\"../work/\", ?pubqid) AS ?valueUrl)}\n  }\n  UNION\n  {\n    BIND(35 AS ?order)\n    BIND(\"Replies to\" AS ?description)\n    ?work wdt:P2675 ?value_ .\n    BIND(SUBSTR(STR(?value_), 32) AS ?valueqid)\n    ?value_ rdfs:label ?value_string .\n    FILTER (LANG(?value_string) = 'en')\n    BIND(COALESCE(?value_string, ?valueqid) AS ?value)\n    BIND(CONCAT(\"../\", ?valueqid) AS ?valueUrl)\n  }\n  UNION\n  {\n    BIND(36 AS ?order)\n    BIND(\"Inspired by\" AS ?description)\n    ?work wdt:P941 ?value_ .\n    BIND(SUBSTR(STR(?value_), 32) AS ?valueqid)\n    ?value_ rdfs:label ?value_string .\n    FILTER (LANG(?value_string) = 'en')\n    BIND(COALESCE(?value_string, ?valueqid) AS ?value)\n    BIND(CONCAT(\"../\", ?valueqid) AS ?valueUrl)\n  }\n} \nORDER BY ?order\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/work_data.sparql",
      "title": "work_data",
      "description": null
    },
    {
      "query_id": "scholia.work_list-of-authors",
      "namespace": "scholia",
      "name": "work_list-of-authors",
      "sparql": "PREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n# List of authors for a work\nSELECT DISTINCT\n  # Author order\n  ?order\n\n  ?academic_age\n\n  # Author item and label\n  ?author ?authorUrl ?authorDescription\n\nWHERE {\n  {\n    target: p:P50 ?author_statement .\n    ?author_statement ps:P50 ?author_ .\n    ?author_ rdfs:label ?author .\n    FILTER (LANG(?author) = 'en')\n    BIND(CONCAT(\"../author/\", SUBSTR(STR(?author_), 32)) AS ?authorUrl)\n    OPTIONAL {\n      ?author_statement pq:P1545 ?order_ .\n      BIND(xsd:integer(?order_) AS ?order)\n    }\n    OPTIONAL {\n      ?author_ schema:description ?authorDescription .\n      FILTER (LANG(?authorDescription) = \"en\")\n    }\n  }\n  UNION\n  {\n    target: p:P2093 ?authorstring_statement .\n    ?authorstring_statement ps:P2093 ?author_\n    BIND(CONCAT(?author_, \" \u2197\") AS ?author)\n    OPTIONAL {\n      ?authorstring_statement pq:P1545 ?order_ .\n      BIND(xsd:integer(?order_) AS ?order)\n    }\n    BIND(CONCAT(\"https://author-disambiguator.toolforge.org/names_oauth.php?doit=Look+for+author&name=\", ENCODE_FOR_URI(?author_)) AS ?authorUrl)\n  }\n  OPTIONAL {\n    SELECT ?author_ (MAX(?academic_age_) AS ?academic_age) {\n      target: wdt:P50 ?author_ ;\n                 wdt:P577 ?publication_date .\n      [] wdt:P31 / wdt:P279* wd:Q55915575 ;\n         wdt:P50 ?author_ ;\n         wdt:P577 ?other_publication_date .\n      BIND(YEAR(?publication_date) - YEAR(?other_publication_date) AS ?academic_age_)\n    }\n    GROUP BY ?author_\n  }\n}\nORDER BY ?order",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/work_list-of-authors.sparql",
      "title": "work_list-of-authors",
      "description": null
    },
    {
      "query_id": "scholia.work_related-works",
      "namespace": "scholia",
      "name": "work_related-works",
      "sparql": "#defaultView:Table\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\n# List of related works by co-citation analysis\nSELECT ?count ?work ?workLabel\nWITH {\n  SELECT ?work (COUNT(?work) AS ?count)\n  WHERE {\n    target: (^wdt:P2860 | wdt:P2860) / (^wdt:P2860 | wdt:P2860)? ?work .\n    FILTER (target: != ?work)\n  }\n  GROUP BY ?work\n  LIMIT 500\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,it,jp,nl,no,ru,sv,zh\" . } \n} \nORDER BY DESC(?count) ",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/work_related-works.sparql",
      "title": "work_related-works",
      "description": null
    },
    {
      "query_id": "scholia.work_statements",
      "namespace": "scholia",
      "name": "work_statements",
      "sparql": "#title: Statements referencing the {{ q }} article\n#defaultView:Table\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?item ?itemLabel ?property ?propertyLabel ?value ?valueLabel ?unit ?unitLabel\nWITH {\n  SELECT ?statement WHERE { \n\t  ?statement prov:wasDerivedFrom/pr:P248 target: .\n  }\n  LIMIT 2000\n} AS %statements \nWITH {\n  SELECT distinct ?item ?property ?value ?unit\n  WHERE {\n    INCLUDE %statements\n    ?item ?p ?statement .\n    ?property wikibase:claim ?p . OPTIONAL { ?property wikibase:statementValueNormalized ?a1 }\n    ?statement ?a1 ?value1 ; ?a2 ?value2 . BIND (COALESCE(?value1, ?value2) AS ?value) BIND (COALESCE(?a1, ?a2) AS ?a)\n    FILTER (!STRSTARTS(LCASE(STR(?value)), \"http://wikiba.se/ontology#\"))\n    FILTER (!STRSTARTS(LCASE(STR(?value)), \"http://www.wikidata.org/value/\"))\n    FILTER (!STRSTARTS(LCASE(STR(?value)), \"http://www.wikidata.org/reference/\"))\n    OPTIONAL {?statement ?psv_statement_predicate ?psv_statement .\n    ?statement_predicate_property wikibase:statementValue ?psv_statement_predicate.\n    ?psv_statement wikibase:quantityUnit ?unit}\n  }\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,da,de,es,fr,it,jp,nl,no,ru,sv,zh\" . } \n} \nORDER BY DESC(?itemLabel)\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/work_statements.sparql",
      "title": "work_statements",
      "description": null
    },
    {
      "query_id": "scholia.work_timeline",
      "namespace": "scholia",
      "name": "work_timeline",
      "sparql": "#defaultView:Timeline\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT DISTINCT ?datetime ?description WHERE {\n  {\n    target: wdt:P577 ?datetime .\n    BIND(\"\ud83c\udf1e publication date\" AS ?description)\n  }\n  UNION \n  {\n    target: wdt:P2507 / wdt:P577 ?datetime .\n    BIND(\"\u2757 erratum\" AS ?description)\n  }\n  UNION \n  {\n    target: wdt:P5824 / wdt:P577 ?datetime .\n    BIND(\"\u26d4 retracted\" AS ?description)\n  }\n  UNION \n  {\n    target: p:P793 ?event_statement .\n    ?event_statement ps:P793 ?event_type .\n    ?event_type rdfs:label ?description_ .\n    ?event_statement pq:P585 ?datetime .\n    FILTER (LANG(?description_) = \"en\")\n    \n    # Warning icon for retraction\n    BIND(\n      IF(\n        ?event_type = wd:Q45203135,\n        CONCAT(\"\u26d4 \", ?description_),\n        IF(\n          ?event_type = wd:Q56478588,\n          CONCAT(\"\u2753 \", ?description_),\n          ?description_\n          )\n        ) AS ?description)\n  }\n  UNION\n  {\n    SELECT ?datetime ?description WHERE {\n      target: wdt:P2860 / wdt:P577 ?datetime\n      BIND(\"\ud83d\udcd6\u27a1\ufe0f cited work with earliest publication date\" AS ?description)\n    }\n    ORDER BY ?datetime\n    LIMIT 1\n  }\n  UNION\n  {\n    SELECT ?datetime ?description WHERE {\n      target: wdt:P2860 / wdt:P577 ?datetime\n      BIND(\"\ud83d\udcd6\u27a1\ufe0f cited work with latest publication date\" AS ?description)\n    }\n    ORDER BY DESC(?datetime)\n    LIMIT 1\n  }\n  UNION\n  {\n    SELECT ?datetime ?description WHERE {\n      target: ^wdt:P2860 / wdt:P577 ?datetime\n      BIND(\"\ud83d\udcd6\u2b05\ufe0f citing work with earliest publication date\" AS ?description)\n    }\n    ORDER BY ?datetime\n    LIMIT 1\n  }\n  UNION\n  {\n    SELECT ?datetime ?description WHERE {\n      target: ^wdt:P2860 / wdt:P577 ?datetime\n      BIND(\"\ud83d\udcd6\u2b05\ufe0f citing work with latest publication date\" AS ?description)\n    }\n    ORDER BY DESC(?datetime)\n    LIMIT 1\n  }\n    UNION\n  {\n    target: (wdt:P747 | ^wdt:P629) / wdt:P577 ?datetime\n    BIND(\"\ud83c\udf1e Publication of edition\" AS ?description)\n  }\n}",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/work_timeline.sparql",
      "title": "work_timeline",
      "description": null
    },
    {
      "query_id": "scholia.work_topic-scores",
      "namespace": "scholia",
      "name": "work_topic-scores",
      "sparql": "#defaultView:BubbleChart\n\nPREFIX target: <http://www.wikidata.org/entity/{{ q }}>\n\nSELECT ?score ?topic ?topicLabel\nWITH {\n  SELECT\n    (SUM(?score_) AS ?score)\n    ?topic\n  WHERE {\n    { \n      target: wdt:P921 ?topic .\n      BIND(20 AS ?score_)\n    }\n    UNION\n    { \n     target: wdt:P921/wdt:P279 ?topic .\n     BIND(3 AS ?score_)\n    }\n    UNION\n    {\n      # Topic of a cited work\n      target: wdt:P2860/wdt:P921 ?topic .\n      BIND(1 AS ?score_)\n    }\n    UNION\n    {\n      SELECT (1 AS ?score_) ?topic WHERE {\n        ?citing_work wdt:P2860 target: .\n        ?citing_work wdt:P921 ?topic . \n      }\n    }\n  }\n  GROUP BY ?topic\n} AS %results \nWHERE {\n  INCLUDE %results\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,da,de,es,jp,no,ru,sv,zh\". }\n}\nORDER BY DESC(?score)\nLIMIT 200",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/work_topic-scores.sparql",
      "title": "work_topic-scores",
      "description": null
    },
    {
      "query_id": "scholia.work_wikipedia-mentions",
      "namespace": "scholia",
      "name": "work_wikipedia-mentions",
      "sparql": "SELECT\n  ?title ?titleUrl\n  ?wikipedia ?wikipediaLabel\n  ?item ?itemLabel ?itemDescription \nWHERE {\n  {\n    SELECT ?title_ ?titleUrl ?item ?wikipedia {\n      SERVICE wikibase:mwapi {\n        bd:serviceParam wikibase:endpoint \"da.wikipedia.org\" ;\n                        wikibase:api \"Generator\" ;\n\t\t\tmwapi:generator \"search\" ;\n                        mwapi:gsrsearch '{{ q }}{% for doi in dois %} OR \"{{ doi }}\"{% endfor %}' ;\n                        mwapi:gsrlimit \"200\" .\n        ?title_ wikibase:apiOutput mwapi:title .\n\t?item wikibase:apiOutputItem mwapi:item .\n      }\n      BIND(URI(CONCAT(\"https://da.wikipedia.org/wiki/\", ENCODE_FOR_URI(REPLACE(?title_, \" \", \"_\")))) AS ?titleUrl)\n      BIND(wd:Q181163 AS ?wikipedia)\n    } \n  }\n  UNION\n  {\n    SELECT ?title_ ?titleUrl ?item ?wikipedia {\n      SERVICE wikibase:mwapi {\n        bd:serviceParam wikibase:endpoint \"de.wikipedia.org\" ;\n                        wikibase:api \"Generator\" ;\n\t\t\tmwapi:generator \"search\" ;\n                        mwapi:gsrsearch '{{ q }}{% for doi in dois %} OR \"{{ doi }}\"{% endfor %}' ;\n                        mwapi:gsrlimit \"200\" .\n        ?title_ wikibase:apiOutput mwapi:title .\n\t?item wikibase:apiOutputItem mwapi:item .\n      }\n      BIND(URI(CONCAT(\"https://de.wikipedia.org/wiki/\", ENCODE_FOR_URI(REPLACE(?title_, \" \", \"_\")))) AS ?titleUrl)\n      BIND(wd:Q48183 AS ?wikipedia)\n    }     \n  }\n  UNION\n  {\n    SELECT ?title_ ?titleUrl ?item ?wikipedia {\n      SERVICE wikibase:mwapi {\n        bd:serviceParam wikibase:endpoint \"en.wikipedia.org\" ;\n                        wikibase:api \"Generator\" ;\n\t\t\tmwapi:generator \"search\" ;\n                        mwapi:gsrsearch '{{ q }}{% for doi in dois %} OR \"{{ doi }}\"{% endfor %}' ;\n                        mwapi:gsrlimit \"200\" .\n        ?title_ wikibase:apiOutput mwapi:title .\n\t?item wikibase:apiOutputItem mwapi:item .\n      }\n      BIND(URI(CONCAT(\"https://en.wikipedia.org/wiki/\", ENCODE_FOR_URI(REPLACE(?title_, \" \", \"_\")))) AS ?titleUrl)\n      BIND(wd:Q328 AS ?wikipedia)\n    }     \n  }\n  UNION\n  {\n    SELECT ?title_ ?titleUrl ?item ?wikipedia {\n      SERVICE wikibase:mwapi {\n        bd:serviceParam wikibase:endpoint \"fr.wikipedia.org\" ;\n                        wikibase:api \"Generator\" ;\n\t\t\tmwapi:generator \"search\" ;\n                        mwapi:gsrsearch '{{ q }}{% for doi in dois %} OR \"{{ doi }}\"{% endfor %}' ;\n                        mwapi:gsrlimit \"200\" .\n        ?title_ wikibase:apiOutput mwapi:title .\n\t?item wikibase:apiOutputItem mwapi:item .\n      }\n      BIND(URI(CONCAT(\"https://fr.wikipedia.org/wiki/\", ENCODE_FOR_URI(REPLACE(?title_, \" \", \"_\")))) AS ?titleUrl)\n      BIND(wd:Q8447 AS ?wikipedia)\n    }     \n  }\n  UNION\n  {\n    SELECT ?title_ ?titleUrl ?item ?wikipedia {\n      SERVICE wikibase:mwapi {\n        bd:serviceParam wikibase:endpoint \"pt.wikipedia.org\" ;\n                        wikibase:api \"Generator\" ;\n\t\t\tmwapi:generator \"search\" ;\n                        mwapi:gsrsearch '{{ q }}{% for doi in dois %} OR \"{{ doi }}\"{% endfor %}' ;\n                        mwapi:gsrlimit \"200\" .\n        ?title_ wikibase:apiOutput mwapi:title .\n\t?item wikibase:apiOutputItem mwapi:item .\n      }\n      BIND(URI(CONCAT(\"https://pt.wikipedia.org/wiki/\", ENCODE_FOR_URI(REPLACE(?title_, \" \", \"_\")))) AS ?titleUrl)\n      BIND(wd:Q11921 AS ?wikipedia)\n    }     \n  }\n  hint:Prior hint:runFirst \"true\" .\n  BIND(CONCAT(?title_, \"&nbsp;\u2197\") AS ?title)\n  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n} ",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/work_wikipedia-mentions.sparql",
      "title": "work_wikipedia-mentions",
      "description": null
    },
    {
      "query_id": "scholia.works_authors",
      "namespace": "scholia",
      "name": "works_authors",
      "sparql": "SELECT\n  ?count\n  ?author ?authorLabel\n  ?example_work ?example_workLabel\nWITH {\n  SELECT\n    (COUNT(?work) AS ?count)\n    ?author\n    (SAMPLE(?work) AS ?example_work)\n  WHERE {\n    VALUES ?work { {% for q in qs %} wd:{{ q }} {% endfor %} }\n    ?work wdt:P50 ?author .\n  }\n  GROUP BY ?author\n  ORDER BY DESC(?count)\n  LIMIT 200\n} AS %results\nWHERE {\n  INCLUDE %results\n  SERVICE wikibase:label {\n    bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n  }\nORDER BY DESC(?count)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/works_authors.sparql",
      "title": "works_authors",
      "description": null
    },
    {
      "query_id": "scholia.works_citations-per-year",
      "namespace": "scholia",
      "name": "works_citations-per-year",
      "sparql": "#defaultView:LineChart\nSELECT ?year ?number_of_citations ?work \nWITH {\n  SELECT ?year (COUNT(DISTINCT ?citing_work) AS ?number_of_citations) ?work1 WHERE {\n    VALUES ?work1 {   {% for q in qs %} wd:{{ q }} {% endfor %}   }\n    ?citing_work wdt:P2860 ?work1 .\n\n    # Year of citation \n    ?citing_work wdt:P577 ?date .\n    BIND(STR(YEAR(?date)) AS ?year)\n  }\n  GROUP BY ?year ?work1\n} AS %counts\nWITH {\n  SELECT ?year ?number_of_citations ?work1 (SAMPLE(?work1Labels) AS ?work1Label) WHERE {\n    INCLUDE %counts\n    ?work1 rdfs:label ?work1Labels .\n  }\n  GROUP BY ?year ?number_of_citations ?work1\n} AS %results\nWHERE {\n  INCLUDE %results\n  BIND(CONCAT(?work1Label, \" (\", SUBSTR(STR(?work1), 32), \")\") AS ?work) \n}\n",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/works_citations-per-year.sparql",
      "title": "works_citations-per-year",
      "description": null
    },
    {
      "query_id": "scholia.works_citing-works",
      "namespace": "scholia",
      "name": "works_citing-works",
      "sparql": "SELECT\n  ?count\n  (MIN(?dates) AS ?date)\n  ?citing_work ?citing_workLabel\nWITH {\n  SELECT\n    (COUNT(?work) AS ?count)\n    ?citing_work \n  WHERE {\n    VALUES ?work { {% for q in qs %} wd:{{ q }} {% endfor %} }\n    ?citing_work wdt:P2860 ?work .\n  }\n  GROUP BY ?citing_work\n  ORDER BY DESC(?count)\n  LIMIT 200\n} AS %results\nWHERE {\n  INCLUDE %results\n  OPTIONAL {\n    ?citing_work wdt:P577 ?datetimes .\n    BIND(xsd:date(?datetimes) AS ?dates)\n  }\n  SERVICE wikibase:label {\n    bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n  }\nGROUP BY ?count ?citing_work ?citing_workLabel\nORDER BY DESC(?count) DESC(?date)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/works_citing-works.sparql",
      "title": "works_citing-works",
      "description": null
    },
    {
      "query_id": "scholia.works_list-of-works",
      "namespace": "scholia",
      "name": "works_list-of-works",
      "sparql": "SELECT ?work ?workLabel ?example_author ?example_authorLabel\nWITH {\n  SELECT ?work (SAMPLE(?author) AS ?example_author) WHERE {\n    VALUES ?work { {% for q in qs %} wd:{{ q }} {% endfor %} }\n    OPTIONAL { ?work wdt:P50 ?author }\n  }\n  GROUP BY ?work\n} AS %result\nWHERE {\n  INCLUDE %result\n  SERVICE wikibase:label {\n    bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }\n}",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/works_list-of-works.sparql",
      "title": "works_list-of-works",
      "description": null
    },
    {
      "query_id": "scholia.works_topics",
      "namespace": "scholia",
      "name": "works_topics",
      "sparql": "#defaultView:BubbleChart\nSELECT\n  ?count\n  ?topic ?topicLabel\nWITH {\n  SELECT\n    (COUNT(?work) AS ?count)\n    ?topic \n  WHERE {\n    VALUES ?work {  {% for q in qs %} wd:{{ q }} {% endfor %}  }\n    ?work wdt:P921 ?topic .\n  }\n  GROUP BY ?topic\n  ORDER BY ?count  \n  LIMIT 200\n} AS %results\nWHERE {\n  INCLUDE %results\n  SERVICE wikibase:label {\n    bd:serviceParam wikibase:language \"en,da,de,es,fr,nl,no,ru,sv,zh\". }\n  }\nORDER BY DESC(?count)",
      "url": "https://raw.githubusercontent.com/WDscholia/scholia/master/scholia/app/templates/works_topics.sparql",
      "title": "works_topics",
      "description": null
    }
  ]
}